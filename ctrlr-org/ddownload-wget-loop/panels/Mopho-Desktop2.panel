<?xml version="1.0" encoding="UTF-8"?>

<panel name="Mopho Desktop" panelShowDialogs="1" panelMessageTime="10000"
       panelAuthorName="Mickael &quot;zeoka&quot; Pascual" panelAuthorEmail=""
       panelAuthorUrl="" panelAuthorDesc="A GUI for the mopho synth"
       panelVersionMajor="1" panelVersionMinor="0" panelVersionName="Hell-O-Kitty"
       panelVendor="DSI" panelDevice="Mopho " panelMidiSnapshotAfterLoad="0"
       panelMidiSnapshotAfterProgramChange="0" panelMidiSnapshotDelay="10"
       panelMidiSnapshotShowProgress="0" panelMidiInputChannelDevice="1"
       panelMidiInputDevice="-- None" panelMidiControllerChannelDevice="1"
       panelMidiControllerDevice="-- None" panelMidiOutputChannelDevice="1"
       panelMidiOutputDevice="-- None" panelMidiInputFromHost="1" panelMidiInputChannelHost="0"
       panelMidiOutputToHost="0" panelMidiOutputChannelHost="1" panelMidiThruH2H="0"
       panelMidiThruH2HChannelize="0" panelMidiThruH2D="0" panelMidiThruH2DChannelize="0"
       panelMidiThruD2D="0" panelMidiThruD2DChannelize="0" panelMidiThruD2H="0"
       panelMidiThruD2HChannelize="0" panelMidiRealtimeIgnore="0" panelMidiInputThreadPriority="7"
       panelMidiProgram="20" panelMidiBankLsb="1" panelMidiBankMsb="0"
       panelMidiSendProgramChangeOnLoad="1" panelMidiProgramCalloutOnprogramChange="0"
       panelMidiMatchCacheSize="32" panelMidiGlobalDelay="0" panelMidiPauseOut="0"
       panelMidiPauseIn="0" luaPanelMidiChannelChanged="-- None" luaPanelMidiReceived="MIDIrec"
       luaPanelLoaded="Starting" luaPanelBeforeLoad="Panel_Dtb" luaPanelSaved="-- None"
       luaPanelResourcesLoaded="-- None" luaPanelProgramChanged="-- None"
       luaPanelGlobalChanged="-- None" luaPanelMessageHandler="-- None"
       luaPanelModulatorValueChanged="PaintMods" luaPanelSaveState="savdat"
       luaPanelRestoreState="loddat" luaPanelMidiSnapshotPost="-- None"
       luaPanelMidiSnapshotPre="-- None" luaAudioProcessBlock="-- None"
       panelFilePath="D:\EREWON\Mopho Desktop.panel" panelUID="8.i+hiDU1Al.K"
       panelInstanceUID="F69A" panelInstanceManufacturerID="zeok" panelModulatorListColumns="&lt;TABLELAYOUT sortedCol=&quot;605&quot; sortForwards=&quot;1&quot;&gt;&lt;COLUMN id=&quot;606&quot; visible=&quot;1&quot; width=&quot;99&quot;/&gt;&lt;COLUMN id=&quot;1&quot; visible=&quot;1&quot; width=&quot;59&quot;/&gt;&lt;COLUMN id=&quot;605&quot; visible=&quot;1&quot; width=&quot;59&quot;/&gt;&lt;COLUMN id=&quot;607&quot; visible=&quot;1&quot; width=&quot;99&quot;/&gt;&lt;COLUMN id=&quot;119&quot; visible=&quot;1&quot; width=&quot;79&quot;/&gt;&lt;COLUMN id=&quot;123&quot; visible=&quot;1&quot; width=&quot;59&quot;/&gt;&lt;COLUMN id=&quot;124&quot; visible=&quot;1&quot; width=&quot;59&quot;/&gt;&lt;COLUMN id=&quot;131&quot; visible=&quot;1&quot; width=&quot;59&quot;/&gt;&lt;COLUMN id=&quot;549&quot; visible=&quot;1&quot; width=&quot;59&quot;/&gt;&lt;COLUMN id=&quot;546&quot; visible=&quot;1&quot; width=&quot;59&quot;/&gt;&lt;COLUMN id=&quot;550&quot; visible=&quot;1&quot; width=&quot;99&quot;/&gt;&lt;COLUMN id=&quot;18&quot; visible=&quot;1&quot; width=&quot;59&quot;/&gt;&lt;COLUMN id=&quot;19&quot; visible=&quot;1&quot; width=&quot;59&quot;/&gt;&lt;/TABLELAYOUT&gt;"
       panelModulatorListCsvDelimiter="," panelModulatorListXmlRoot="ctrlrModulatorList"
       panelModulatorListXmlModulator="ctrlrModulator" panelModulatorListSortOption="0"
       panelGlobalVariables="0:0:-1:0:0:-1:-1:-1:0:0:-1:-1:0:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:0:-1:-1:-1:-1:-1:0:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:0:-1:0:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:0:-1:-1:-1"
       panelResources="-- None" panelPropertyDisplayIDs="0" ctrlrMenuItemBackgroundColour="ffffdb44"
       ctrlrMenuItemTextColour="ff000000" ctrlrMenuItemHighlightedTextColour="ffffffff"
       ctrlrMenuItemHighlightColour="ffffae44" ctrlrMenuItemFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
       ctrlrMenuItemSeparatorColour="44000000" ctrlrMenuItemHeaderColour="ff000000"
       ctrlrMenuBarBackgroundColour1="ffffdb44" ctrlrMenuBarBackgroundColour2="ffffae44"
       ctrlrMenuBarTextColour="ff000000" ctrlrMenuBarHighlightedTextColour="ffffffff"
       ctrlrMenuBarHighlightColour="1cffffff" ctrlrMenuBarFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
       ctrlrUseEditorWrapper="0" panelIndex="0" uiPanelModulatorListViewTree="0"
       uiLuaConsoleSnips="">
  <uiWindowManager>
    <uiChildWindow uiChildWindowName="LuaMethodEditor" uiChildWindowState="-9 159 1556 970">
      <uiChildWindowContentState luaMethodEditor="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;&#10;&#13;&#10;&lt;OPEN id=&quot;LUA&quot; scrollPos=&quot;0&quot;&gt;&#13;&#10;  &lt;OPEN id=&quot;panel&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;shared&quot;/&gt;&#13;&#10;  &lt;SELECTED id=&quot;/LUA/panel/MIDIrec&quot;/&gt;&#13;&#10;&lt;/OPEN&gt;&#13;&#10;;d72d38d987f74aa483b9b4af0a91c7bc:6ab93b4fd673472d9e986a31e8f2df34:a1ce4f62566045bdbc97a5e971d9267b:cd22a5d9f9ab4cc898202ca17b251733:f4595a1c06d1448faff90a2a0b9e0168:5cb697b6a1b64568a7afb7aff841d3fd:35d2daf5715548179200f58ade025d3a:ae735daf526d4e9aa8a55749a2e3169e:03be187d5f914bbd9feb8e0365840beb:ba5137c222c8437cb4630f3e99d16e19:d52723a80eb6489db9be505de12d7f02"/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="ModulatorList" uiChildWindowState="-1 141 936 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="LuaConsole" uiChildWindowState="1177 637 974 597">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="LayerEditor" uiChildWindowState="1576 620 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="MIDILibrary" uiChildWindowState="591 290 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
  </uiWindowManager>
  <midiLibrary uuid="c655f1a5a4584ad6b0a6e995e4953c22" luaTransInfo="-- None"
               midiLibraryParameterIndexProperty="modulatorCustomIndex" midiLibraryMidiProgramChangeControl="0"
               midiLibrarySendSnapAfterPChg="0" midiLibraryDefaultBankName="New Bank - %H:%M:%S"
               midiLibraryDefaultProgramName="New Program - %H:%M:%S" midiLibraryDefaultSnapshotName="Snapshot - %H:%M:%S"
               midiLibraryCustomRequests="">
    <midiLibrarySnapshots name="Snapshots"/>
    <midiLibraryFirmware name="Firmware"/>
    <midiLibraryEditBuffer name="Edit buffer"/>
    <midiLibraryTransactions name="Transactions">
      <trans name="Request Identity" enabled="1" internal="1" transCap="midiLibrary"
             timeout="1000" transReqFormulaPrefix="F0 7E 7F 06 01" transReqFormulaSuffix="F7"
             transRespSizeCheck="0" transReqDataLen="0" transReqExists="1"
             transConfExists="0" transRespFormulaPrefix="F0 7E 7F 06 02" transRespFormulaSuffix="F7"
             transRespDataLen="8" transRespDataCheck="1" transRespExists="1"/>
      <trans name="Request Identity [LUA]" enabled="1" internal="1" transCap="midiLibrary"
             timeout="1000" transReqFormulaPrefix="" transReqFormulaSuffix=""
             transReqDataLen="0" transReqExists="1" transConfExists="0" transRespFormulaPrefix=""
             transRespFormulaSuffix="" transRespDataLen="8" transRespDataCheck="0"
             transRespSizeCheck="0" transRespExists="1" luaTransRequest="transIdReq"
             luaTransProcess="transIdProc"/>
      <trans name="Send SYX file" enabled="1" internal="1" transCap="midiLibrary"
             timeout="1000" transReqFormulaPrefix="" transReqFormulaSuffix=""
             transReqDataLen="0" transReqExists="1" transConfExists="0" transRespFormulaPrefix=""
             transRespFormulaSuffix="" transRespDataLen="0" transRespDataCheck="0"
             transRespExists="0" luaTransRequest="transSYXSendReq"/>
      <trans name="Recieve SYX file" enabled="1" internal="1" transCap="midiLibrary"
             timeout="1000" transReqFormulaPrefix="" transReqFormulaSuffix=""
             transReqDataLen="0" transReqExists="1" transConfExists="0" transRespFormulaPrefix=""
             transRespFormulaSuffix="" transRespDataLen="0" transRespDataCheck="0"
             transRespExists="1" luaTransRequest="transSYXRcvReq" luaTransProcess="transSYXRcvProc"/>
    </midiLibraryTransactions>
  </midiLibrary>
  <luaManager>
    <luaManagerMethods>
      <luaMethodGroup name="Built-In" uuid="f721307d44a944798df8075c5537837c">
        <luaMethod luaMethodName="table_dump" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print table contents&#13;&#10;--&#13;&#10;function table_dump(table)&#13;&#10;&#9;for key,value in ipairs(table) do&#13;&#10;&#9;&#9;_DBG (&quot;KEY= [&quot;..key..&quot;]&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if (type(value) == &quot;table&quot;) then&#13;&#10;&#9;&#9;&#9;table_dump(value)&#13;&#10;&#9;&#9;elseif (type(value) == &quot;nil&quot;) then&#13;&#10;&#9;&#9;&#9;_DBG (&quot; = NIL&quot;)&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;what (value)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000001"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="what" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print methods for an object&#13;&#10;--&#13;&#10;function what(o)&#13;&#10;&#9;info = class_info(o)&#13;&#10;&#9;if info ~= nil then&#13;&#10;&#9;&#9;ret = &quot;Object type [&quot; .. info.name .. &quot;]\n-----------------------------------------------------------------\n\n&quot;..&quot;Members:\n&quot;&#13;&#10;&#13;&#10;&#9;&#9;if info.name == &quot;table&quot; then&#13;&#10;&#9;&#9;&#9;table_dump(o)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;for k, v in pairs(info.methods) do&#13;&#10;&#9;&#9;&#9;ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;ret = ret .. &quot;\n\nAttributes:\n&quot;&#13;&#10;&#9;&#9;for k, v in pairs(info.attributes) do&#13;&#10;&#9;&#9;&#9;ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;_DBG (ret)&#13;&#10;&#9;return ret&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000002"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="how" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print all available classes&#13;&#10;--&#13;&#10;function how()&#13;&#10;&#9;ret = &quot;Available classes:\n&quot;&#13;&#10;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;for i,v in ipairs(class_names()) do&#13;&#10;&#9;&#9;ret = ret .. &quot;\t&quot;.. v .. &quot;\n&quot;&#13;&#10;&#9;end&#13;&#10;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;_DBG (ret)&#13;&#10;&#9;return ret&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000003"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="json4lua" luaMethodCode="-----------------------------------------------------------------------------&#13;&#10;-- JSON4Lua: JSON encoding / decoding support for the Lua language.&#13;&#10;-- json Module.&#13;&#10;-- Author: Craig Mason-Jones&#13;&#10;-- Homepage: http://json.luaforge.net/&#13;&#10;-- Version: 0.9.40&#13;&#10;-- This module is released under the MIT License (MIT).&#13;&#10;-- Please see LICENCE.txt for details.&#13;&#10;--&#13;&#10;-- USAGE:&#13;&#10;-- This module exposes two functions:&#13;&#10;--   encode(o)&#13;&#10;--     Returns the table / string / boolean / number / nil / json.null value as a JSON-encoded string.&#13;&#10;--   decode(json_string)&#13;&#10;--     Returns a Lua object populated with the data encoded in the JSON string json_string.&#13;&#10;--&#13;&#10;-- REQUIREMENTS:&#13;&#10;--   compat-5.1 if using Lua 5.0&#13;&#10;--&#13;&#10;-- CHANGELOG&#13;&#10;--   0.9.20 Introduction of local Lua functions for private functions (removed _ function prefix). &#13;&#10;--          Fixed Lua 5.1 compatibility issues.&#13;&#10;--   &#9;&#9;Introduced json.null to have null values in associative arrays.&#13;&#10;--          encode() performance improvement (more than 50%) through table.concat rather than ..&#13;&#10;--          Introduced decode ability to ignore /**/ comments in the JSON string.&#13;&#10;--   0.9.10 Fix to array encoding / decoding to correctly manage nil/null values in arrays.&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- Imports and dependencies&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;local math = require('math')&#13;&#10;local string = require(&quot;string&quot;)&#13;&#10;local table = require(&quot;table&quot;)&#13;&#10;&#13;&#10;local base = _G&#13;&#10;&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- Module declaration&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;module(&quot;json&quot;)&#13;&#10;&#13;&#10;-- Public functions&#13;&#10;&#13;&#10;-- Private functions&#13;&#10;local decode_scanArray&#13;&#10;local decode_scanComment&#13;&#10;local decode_scanConstant&#13;&#10;local decode_scanNumber&#13;&#10;local decode_scanObject&#13;&#10;local decode_scanString&#13;&#10;local decode_scanWhitespace&#13;&#10;local encodeString&#13;&#10;local isArray&#13;&#10;local isEncodable&#13;&#10;&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- PUBLIC FUNCTIONS&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;--- Encodes an arbitrary Lua object / variable.&#13;&#10;-- @param v The Lua object / variable to be JSON encoded.&#13;&#10;-- @return String containing the JSON encoding in internal Lua string format (i.e. not unicode)&#13;&#10;function encode (v)&#13;&#10;  -- Handle nil values&#13;&#10;  if v==nil then&#13;&#10;    return &quot;null&quot;&#13;&#10;  end&#13;&#10;  &#13;&#10;  local vtype = base.type(v)  &#13;&#10;&#13;&#10;  -- Handle strings&#13;&#10;  if vtype=='string' then    &#13;&#10;    return '&quot;' .. encodeString(v) .. '&quot;'&#9;    -- Need to handle encoding in string&#13;&#10;  end&#13;&#10;  &#13;&#10;  -- Handle booleans&#13;&#10;  if vtype=='number' or vtype=='boolean' then&#13;&#10;    return base.tostring(v)&#13;&#10;  end&#13;&#10;  &#13;&#10;  -- Handle tables&#13;&#10;  if vtype=='table' then&#13;&#10;    local rval = {}&#13;&#10;    -- Consider arrays separately&#13;&#10;    local bArray, maxCount = isArray(v)&#13;&#10;    if bArray then&#13;&#10;      for i = 1,maxCount do&#13;&#10;        table.insert(rval, encode(v[i]))&#13;&#10;      end&#13;&#10;    else&#9;-- An object, not an array&#13;&#10;      for i,j in base.pairs(v) do&#13;&#10;        if isEncodable(i) and isEncodable(j) then&#13;&#10;          table.insert(rval, '&quot;' .. encodeString(i) .. '&quot;:' .. encode(j))&#13;&#10;        end&#13;&#10;      end&#13;&#10;    end&#13;&#10;    if bArray then&#13;&#10;      return '[' .. table.concat(rval,',') ..']'&#13;&#10;    else&#13;&#10;      return '{' .. table.concat(rval,',') .. '}'&#13;&#10;    end&#13;&#10;  end&#13;&#10;  &#13;&#10;  -- Handle null values&#13;&#10;  if vtype=='function' and v==null then&#13;&#10;    return 'null'&#13;&#10;  end&#13;&#10;  &#13;&#10;  base.assert(false,'encode attempt to encode unsupported type ' .. vtype .. ':' .. base.tostring(v))&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;--- Decodes a JSON string and returns the decoded value as a Lua data structure / value.&#13;&#10;-- @param s The string to scan.&#13;&#10;-- @param [startPos] Optional starting position where the JSON string is located. Defaults to 1.&#13;&#10;-- @param Lua object, number The object that was scanned, as a Lua table / string / number / boolean or nil,&#13;&#10;-- and the position of the first character after&#13;&#10;-- the scanned JSON object.&#13;&#10;function decode(s, startPos)&#13;&#10;  startPos = startPos and startPos or 1&#13;&#10;  startPos = decode_scanWhitespace(s,startPos)&#13;&#10;  base.assert(startPos&lt;=string.len(s), 'Unterminated JSON encoded object found at position in [' .. s .. ']')&#13;&#10;  local curChar = string.sub(s,startPos,startPos)&#13;&#10;  -- Object&#13;&#10;  if curChar=='{' then&#13;&#10;    return decode_scanObject(s,startPos)&#13;&#10;  end&#13;&#10;  -- Array&#13;&#10;  if curChar=='[' then&#13;&#10;    return decode_scanArray(s,startPos)&#13;&#10;  end&#13;&#10;  -- Number&#13;&#10;  if string.find(&quot;+-0123456789.e&quot;, curChar, 1, true) then&#13;&#10;    return decode_scanNumber(s,startPos)&#13;&#10;  end&#13;&#10;  -- String&#13;&#10;  if curChar==[[&quot;]] or curChar==[[']] then&#13;&#10;    return decode_scanString(s,startPos)&#13;&#10;  end&#13;&#10;  if string.sub(s,startPos,startPos+1)=='/*' then&#13;&#10;    return decode(s, decode_scanComment(s,startPos))&#13;&#10;  end&#13;&#10;  -- Otherwise, it must be a constant&#13;&#10;  return decode_scanConstant(s,startPos)&#13;&#10;end&#13;&#10;&#13;&#10;--- The null function allows one to specify a null value in an associative array (which is otherwise&#13;&#10;-- discarded if you set the value with 'nil' in Lua. Simply set t = { first=json.null }&#13;&#10;function null()&#13;&#10;  return null -- so json.null() will also return null ;-)&#13;&#10;end&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- Internal, PRIVATE functions.&#13;&#10;-- Following a Python-like convention, I have prefixed all these 'PRIVATE'&#13;&#10;-- functions with an underscore.&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;&#13;&#10;--- Scans an array from JSON into a Lua object&#13;&#10;-- startPos begins at the start of the array.&#13;&#10;-- Returns the array and the next starting position&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The starting position for the scan.&#13;&#10;-- @return table, int The scanned array as a table, and the position of the next character to scan.&#13;&#10;function decode_scanArray(s,startPos)&#13;&#10;  local array = {}&#9;-- The return value&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  base.assert(string.sub(s,startPos,startPos)=='[','decode_scanArray called but array does not start at position ' .. startPos .. ' in string:\n'..s )&#13;&#10;  startPos = startPos + 1&#13;&#10;  -- Infinite loop for array elements&#13;&#10;  repeat&#13;&#10;    startPos = decode_scanWhitespace(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen,'JSON String ended unexpectedly scanning array.')&#13;&#10;    local curChar = string.sub(s,startPos,startPos)&#13;&#10;    if (curChar==']') then&#13;&#10;      return array, startPos+1&#13;&#10;    end&#13;&#10;    if (curChar==',') then&#13;&#10;      startPos = decode_scanWhitespace(s,startPos+1)&#13;&#10;    end&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON String ended unexpectedly scanning array.')&#13;&#10;    object, startPos = decode(s,startPos)&#13;&#10;    table.insert(array,object)&#13;&#10;  until false&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a comment and discards the comment.&#13;&#10;-- Returns the position of the next character following the comment.&#13;&#10;-- @param string s The JSON string to scan.&#13;&#10;-- @param int startPos The starting position of the comment&#13;&#10;function decode_scanComment(s, startPos)&#13;&#10;  base.assert( string.sub(s,startPos,startPos+1)=='/*', &quot;decode_scanComment called but comment does not start at position &quot; .. startPos)&#13;&#10;  local endPos = string.find(s,'*/',startPos+2)&#13;&#10;  base.assert(endPos~=nil, &quot;Unterminated comment in string at &quot; .. startPos)&#13;&#10;  return endPos+2  &#13;&#10;end&#13;&#10;&#13;&#10;--- Scans for given constants: true, false or null&#13;&#10;-- Returns the appropriate Lua type, and the position of the next character to read.&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The position in the string at which to start scanning.&#13;&#10;-- @return object, int The object (true, false or nil) and the position at which the next character should be &#13;&#10;-- scanned.&#13;&#10;function decode_scanConstant(s, startPos)&#13;&#10;  local consts = { [&quot;true&quot;] = true, [&quot;false&quot;] = false, [&quot;null&quot;] = nil }&#13;&#10;  local constNames = {&quot;true&quot;,&quot;false&quot;,&quot;null&quot;}&#13;&#10;&#13;&#10;  for i,k in base.pairs(constNames) do&#13;&#10;    --print (&quot;[&quot; .. string.sub(s,startPos, startPos + string.len(k) -1) ..&quot;]&quot;, k)&#13;&#10;    if string.sub(s,startPos, startPos + string.len(k) -1 )==k then&#13;&#10;      return consts[k], startPos + string.len(k)&#13;&#10;    end&#13;&#10;  end&#13;&#10;  base.assert(nil, 'Failed to scan constant from string ' .. s .. ' at starting position ' .. startPos)&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a number from the JSON encoded string.&#13;&#10;-- (in fact, also is able to scan numeric +- eqns, which is not&#13;&#10;-- in the JSON spec.)&#13;&#10;-- Returns the number, and the position of the next character&#13;&#10;-- after the number.&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The position at which to start scanning.&#13;&#10;-- @return number, int The extracted number and the position of the next character to scan.&#13;&#10;function decode_scanNumber(s,startPos)&#13;&#10;  local endPos = startPos+1&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  local acceptableChars = &quot;+-0123456789.e&quot;&#13;&#10;  while (string.find(acceptableChars, string.sub(s,endPos,endPos), 1, true)&#13;&#10;&#9;and endPos&lt;=stringLen&#13;&#10;&#9;) do&#13;&#10;    endPos = endPos + 1&#13;&#10;  end&#13;&#10;  local stringValue = 'return ' .. string.sub(s,startPos, endPos-1)&#13;&#10;  local stringEval = base.loadstring(stringValue)&#13;&#10;  base.assert(stringEval, 'Failed to scan number [ ' .. stringValue .. '] in JSON string at position ' .. startPos .. ' : ' .. endPos)&#13;&#10;  return stringEval(), endPos&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a JSON object into a Lua object.&#13;&#10;-- startPos begins at the start of the object.&#13;&#10;-- Returns the object and the next starting position.&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The starting position of the scan.&#13;&#10;-- @return table, int The scanned object as a table and the position of the next character to scan.&#13;&#10;function decode_scanObject(s,startPos)&#13;&#10;  local object = {}&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  local key, value&#13;&#10;  base.assert(string.sub(s,startPos,startPos)=='{','decode_scanObject called but object does not start at position ' .. startPos .. ' in string:\n' .. s)&#13;&#10;  startPos = startPos + 1&#13;&#10;  repeat&#13;&#10;    startPos = decode_scanWhitespace(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly while scanning object.')&#13;&#10;    local curChar = string.sub(s,startPos,startPos)&#13;&#10;    if (curChar=='}') then&#13;&#10;      return object,startPos+1&#13;&#10;    end&#13;&#10;    if (curChar==',') then&#13;&#10;      startPos = decode_scanWhitespace(s,startPos+1)&#13;&#10;    end&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly scanning object.')&#13;&#10;    -- Scan the key&#13;&#10;    key, startPos = decode(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly searching for value of key ' .. key)&#13;&#10;    startPos = decode_scanWhitespace(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly searching for value of key ' .. key)&#13;&#10;    base.assert(string.sub(s,startPos,startPos)==':','JSON object key-value assignment mal-formed at ' .. startPos)&#13;&#10;    startPos = decode_scanWhitespace(s,startPos+1)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly searching for value of key ' .. key)&#13;&#10;    value, startPos = decode(s,startPos)&#13;&#10;    object[key]=value&#13;&#10;  until false&#9;-- infinite loop while key-value pairs are found&#13;&#10;end&#13;&#10;&#13;&#10;-- START SoniEx2&#13;&#10;-- Initialize some things used by decode_scanString&#13;&#10;-- You know, for efficiency&#13;&#10;local escapeSequences = {&#13;&#10;  [&quot;\\t&quot;] = &quot;\t&quot;,&#13;&#10;  [&quot;\\f&quot;] = &quot;\f&quot;,&#13;&#10;  [&quot;\\r&quot;] = &quot;\r&quot;,&#13;&#10;  [&quot;\\n&quot;] = &quot;\n&quot;,&#13;&#10;  [&quot;\\b&quot;] = &quot;\b&quot;&#13;&#10;}&#13;&#10;base.setmetatable(escapeSequences, {__index = function(t,k)&#13;&#10;  -- skip &quot;\&quot; aka strip escape&#13;&#10;  return string.sub(k,2)&#13;&#10;end})&#13;&#10;-- END SoniEx2&#13;&#10;&#13;&#10;--- Scans a JSON string from the opening inverted comma or single quote to the&#13;&#10;-- end of the string.&#13;&#10;-- Returns the string extracted as a Lua string,&#13;&#10;-- and the position of the next non-string character&#13;&#10;-- (after the closing inverted comma or single quote).&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The starting position of the scan.&#13;&#10;-- @return string, int The extracted string as a Lua string, and the next character to parse.&#13;&#10;function decode_scanString(s,startPos)&#13;&#10;  base.assert(startPos, 'decode_scanString(..) called without start position')&#13;&#10;  local startChar = string.sub(s,startPos,startPos)&#13;&#10;  -- START SoniEx2&#13;&#10;  -- PS: I don't think single quotes are valid JSON&#13;&#10;  base.assert(startChar == [[&quot;]] or startChar == [[']],'decode_scanString called for a non-string')&#13;&#10;  --base.assert(startPos, &quot;String decoding failed: missing closing &quot; .. startChar .. &quot; for string at position &quot; .. oldStart)&#13;&#10;  local t = {}&#13;&#10;  local i,j = startPos,startPos&#13;&#10;  while string.find(s, startChar, j+1) ~= j+1 do&#13;&#10;    local oldj = j&#13;&#10;    i,j = string.find(s, &quot;\\.&quot;, j+1)&#13;&#10;    local x,y = string.find(s, startChar, oldj+1)&#13;&#10;    if not i or x &lt; i then&#13;&#10;      base.print(s, startPos, string.sub(s,startPos,oldj))&#13;&#10;      i,j = x,y-1&#13;&#10;      if not x then base.print(s, startPos, string.sub(s,startPos,oldj)) end&#13;&#10;    end&#13;&#10;    table.insert(t, string.sub(s, oldj+1, i-1))&#13;&#10;    if string.sub(s, i, j) == &quot;\\u&quot; then&#13;&#10;      local a = string.sub(s,j+1,j+4)&#13;&#10;      j = j + 4&#13;&#10;      local n = base.tonumber(a, 16)&#13;&#10;      base.assert(n, &quot;String decoding failed: bad Unicode escape &quot; .. a .. &quot; at position &quot; .. i .. &quot; : &quot; .. j)&#13;&#10;      -- math.floor(x/2&#94;y) == lazy right shift&#13;&#10;      -- a % 2&#94;b == bitwise_and(a, (2&#94;b)-1)&#13;&#10;      -- 64 = 2&#94;6&#13;&#10;      -- 4096 = 2&#94;12 (or 2&#94;6 * 2&#94;6)&#13;&#10;      local x&#13;&#10;      if n &lt; 0x80 then&#13;&#10;        x = string.char(n % 0x80)&#13;&#10;      elseif n &lt; 0x800 then&#13;&#10;        -- [110x xxxx] [10xx xxxx]&#13;&#10;        x = string.char(0xC0 + (math.floor(n/64) % 0x20), 0x80 + (n % 0x40))&#13;&#10;      else&#13;&#10;        -- [1110 xxxx] [10xx xxxx] [10xx xxxx]&#13;&#10;        x = string.char(0xE0 + (math.floor(n/4096) % 0x10), 0x80 + (math.floor(n/64) % 0x40), 0x80 + (n % 0x40))&#13;&#10;      end&#13;&#10;      table.insert(t, x)&#13;&#10;    else&#13;&#10;      table.insert(t, escapeSequences[string.sub(s, i, j)])&#13;&#10;    end&#13;&#10;  end&#13;&#10;  table.insert(t,string.sub(j, j+1))&#13;&#10;  base.assert(string.find(s, startChar, j+1), &quot;String decoding failed: missing closing &quot; .. startChar .. &quot; at position &quot; .. j .. &quot;(for string at position &quot; .. startPos .. &quot;)&quot;)&#13;&#10;  return table.concat(t,&quot;&quot;), j+2&#13;&#10;  -- END SoniEx2&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a JSON string skipping all whitespace from the current start position.&#13;&#10;-- Returns the position of the first non-whitespace character, or nil if the whole end of string is reached.&#13;&#10;-- @param s The string being scanned&#13;&#10;-- @param startPos The starting position where we should begin removing whitespace.&#13;&#10;-- @return int The first position where non-whitespace was encountered, or string.len(s)+1 if the end of string&#13;&#10;-- was reached.&#13;&#10;function decode_scanWhitespace(s,startPos)&#13;&#10;  local whitespace=&quot; \n\r\t&quot;&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  while ( string.find(whitespace, string.sub(s,startPos,startPos), 1, true)  and startPos &lt;= stringLen) do&#13;&#10;    startPos = startPos + 1&#13;&#10;  end&#13;&#10;  return startPos&#13;&#10;end&#13;&#10;&#13;&#10;--- Encodes a string to be JSON-compatible.&#13;&#10;-- This just involves back-quoting inverted commas, back-quotes and newlines, I think ;-)&#13;&#10;-- @param s The string to return as a JSON encoded (i.e. backquoted string)&#13;&#10;-- @return The string appropriately escaped.&#13;&#10;&#13;&#10;local escapeList = {&#13;&#10;    ['&quot;']  = '\\&quot;',&#13;&#10;    ['\\'] = '\\\\',&#13;&#10;    ['/']  = '\\/', &#13;&#10;    ['\b'] = '\\b',&#13;&#10;    ['\f'] = '\\f',&#13;&#10;    ['\n'] = '\\n',&#13;&#10;    ['\r'] = '\\r',&#13;&#10;    ['\t'] = '\\t'&#13;&#10;}&#13;&#10;&#13;&#10;function encodeString(s)&#13;&#10; return s:gsub(&quot;.&quot;, function(c) return escapeList[c] end) -- SoniEx2: 5.0 compat&#13;&#10;end&#13;&#10;&#13;&#10;-- Determines whether the given Lua type is an array or a table / dictionary.&#13;&#10;-- We consider any table an array if it has indexes 1..n for its n items, and no&#13;&#10;-- other data in the table.&#13;&#10;-- I think this method is currently a little 'flaky', but can't think of a good way around it yet...&#13;&#10;-- @param t The table to evaluate as an array&#13;&#10;-- @return boolean, number True if the table can be represented as an array, false otherwise. If true,&#13;&#10;-- the second returned value is the maximum&#13;&#10;-- number of indexed elements in the array. &#13;&#10;function isArray(t)&#13;&#10;  -- Next we count all the elements, ensuring that any non-indexed elements are not-encodable &#13;&#10;  -- (with the possible exception of 'n')&#13;&#10;  local maxIndex = 0&#13;&#10;  for k,v in base.pairs(t) do&#13;&#10;    if (base.type(k)=='number' and math.floor(k)==k and 1&lt;=k) then&#9;-- k,v is an indexed pair&#13;&#10;      if (not isEncodable(v)) then return false end&#9;-- All array elements must be encodable&#13;&#10;      maxIndex = math.max(maxIndex,k)&#13;&#10;    else&#13;&#10;      if (k=='n') then&#13;&#10;        if v ~= table.getn(t) then return false end  -- False if n does not hold the number of elements&#13;&#10;      else -- Else of (k=='n')&#13;&#10;        if isEncodable(v) then return false end&#13;&#10;      end  -- End of (k~='n')&#13;&#10;    end -- End of k,v not an indexed pair&#13;&#10;  end  -- End of loop across all pairs&#13;&#10;  return true, maxIndex&#13;&#10;end&#13;&#10;&#13;&#10;--- Determines whether the given Lua object / table / variable can be JSON encoded. The only&#13;&#10;-- types that are JSON encodable are: string, boolean, number, nil, table and json.null.&#13;&#10;-- In this implementation, all other types are ignored.&#13;&#10;-- @param o The object to examine.&#13;&#10;-- @return boolean True if the object should be JSON encoded, false if it should be ignored.&#13;&#10;function isEncodable(o)&#13;&#10;  local t = base.type(o)&#13;&#10;  return (t=='string' or t=='boolean' or t=='number' or t=='nil' or t=='table') or (t=='function' and o==null) &#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000004"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="debugger.lua" luaMethodCode="--{{{  history&#13;&#10;&#13;&#10;--15/03/06 DCN Created based on RemDebug&#13;&#10;--28/04/06 DCN Update for Lua 5.1&#13;&#10;--01/06/06 DCN Fix command argument parsing&#13;&#10;--             Add step/over N facility&#13;&#10;--             Add trace lines facility&#13;&#10;--05/06/06 DCN Add trace call/return facility&#13;&#10;--06/06/06 DCN Make it behave when stepping through the creation of a coroutine&#13;&#10;--06/06/06 DCN Integrate the simple debugger into the main one&#13;&#10;--07/06/06 DCN Provide facility to step into coroutines&#13;&#10;--13/06/06 DCN Fix bug that caused the function environment to get corrupted with the global one&#13;&#10;--14/06/06 DCN Allow 'sloppy' file names when setting breakpoints&#13;&#10;--04/08/06 DCN Allow for no space after command name&#13;&#10;--11/08/06 DCN Use io.write not print&#13;&#10;--30/08/06 DCN Allow access to array elements in 'dump'&#13;&#10;--10/10/06 DCN Default to breakfile for all commands that require a filename and give '-'&#13;&#10;--06/12/06 DCN Allow for punctuation characters in DUMP variable names&#13;&#10;--03/01/07 DCN Add pause on/off facility&#13;&#10;--19/06/07 DCN Allow for duff commands being typed in the debugger (thanks to Michael.Bringmann@lsi.com)&#13;&#10;--             Allow for case sensitive file systems               (thanks to Michael.Bringmann@lsi.com)&#13;&#10;--04/08/09 DCN Add optional line count param to pause&#13;&#10;--05/08/09 DCN Reset the debug hook in Pause() even if we think we're started&#13;&#10;--30/09/09 DCN Re-jig to not use co-routines (makes debugging co-routines awkward)&#13;&#10;--01/10/09 DCN Add ability to break on reaching any line in a file&#13;&#10;--24/07/13 TWW Added code for emulating setfenv/getfenv in Lua 5.2 as per&#13;&#10;--             http://lua-users.org/lists/lua-l/2010-06/msg00313.html&#13;&#10;--25/07/13 TWW Copied Alex Parrill's fix for errors when tracing back across a C frame&#13;&#10;--             (https://github.com/ColonelThirtyTwo/clidebugger, 26/01/12)&#13;&#10;--25/07/13 DCN Allow for windows and unix file name conventions in has_breakpoint&#13;&#10;--26/07/13 DCN Allow for \ being interpreted as an escape inside a [] pattern in 5.2&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  description&#13;&#10;&#13;&#10;--A simple command line debug system for Lua written by Dave Nichols of&#13;&#10;--Match-IT Limited. Its public domain software. Do with it as you wish.&#13;&#10;&#13;&#10;--This debugger was inspired by:&#13;&#10;-- RemDebug 1.0 Beta&#13;&#10;-- Copyright Kepler Project 2005 (http://www.keplerproject.org/remdebug)&#13;&#10;&#13;&#10;--Usage:&#13;&#10;--  require('debugger')        --load the debug library&#13;&#10;--  pause(message)             --start/resume a debug session&#13;&#10;&#13;&#10;--An assert() failure will also invoke the debugger.&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;local IsWindows = string.find(string.lower(os.getenv('OS') or ''),'&#94;windows')&#13;&#10;&#13;&#10;local coro_debugger&#13;&#10;local events = { BREAK = 1, WATCH = 2, STEP = 3, SET = 4 }&#13;&#10;breakpoints = {}&#13;&#10;local watches = {}&#13;&#10;local step_into   = false&#13;&#10;local step_over   = false&#13;&#10;local step_lines  = 0&#13;&#10;local step_level  = {main=0}&#13;&#10;local stack_level = {main=0}&#13;&#10;local trace_level = {main=0}&#13;&#10;local trace_calls = false&#13;&#10;local trace_returns = false&#13;&#10;local trace_lines = false&#13;&#10;local ret_file, ret_line, ret_name&#13;&#10;local current_thread = 'main'&#13;&#10;local started = false&#13;&#10;local pause_off = false&#13;&#10;local _g      = _G&#13;&#10;local cocreate, cowrap = coroutine.create, coroutine.wrap&#13;&#10;local pausemsg = 'pause'&#13;&#10;&#13;&#10;--{{{  make Lua 5.2 compatible&#13;&#10;&#13;&#10;if not setfenv then -- Lua 5.2&#13;&#10;  --[[&#13;&#10;  As far as I can see, the only missing detail of these functions (except&#13;&#10;  for occasional bugs) to achieve 100% compatibility is the case of&#13;&#10;  'getfenv' over a function that does not have an _ENV variable (that is,&#13;&#10;  it uses no globals).&#13;&#10;&#13;&#10;  We could use a weak table to keep the environments of these functions&#13;&#10;  when set by setfenv, but that still misses the case of a function&#13;&#10;  without _ENV that was not subjected to setfenv.&#13;&#10;&#13;&#10;  -- Roberto&#13;&#10;  ]]--&#13;&#10;&#13;&#10;  setfenv = setfenv or function(f, t)&#13;&#10;    f = (type(f) == 'function' and f or debug.getinfo(f + 1, 'f').func)&#13;&#10;    local name&#13;&#10;    local up = 0&#13;&#10;    repeat&#13;&#10;      up = up + 1&#13;&#10;      name = debug.getupvalue(f, up)&#13;&#10;    until name == '_ENV' or name == nil&#13;&#10;    if name then&#13;&#10;      debug.upvaluejoin(f, up, function() return name end, 1) -- use unique upvalue&#13;&#10;      debug.setupvalue(f, up, t)&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  getfenv = getfenv or function(f)&#13;&#10;    f = (type(f) == 'function' and f or debug.getinfo(f + 1, 'f').func)&#13;&#10;    local name, val&#13;&#10;    local up = 0&#13;&#10;    repeat&#13;&#10;      up = up + 1&#13;&#10;      name, val = debug.getupvalue(f, up)&#13;&#10;    until name == '_ENV' or name == nil&#13;&#10;    return val&#13;&#10;  end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  local hints -- command help&#13;&#10;--The format in here is name=summary|description&#13;&#10;local hints = {&#13;&#10;&#13;&#10;pause =   [[&#13;&#10;pause(msg[,lines][,force]) -- start/resume a debugger session|&#13;&#10;&#13;&#10;This can only be used in your code or from the console as a means to&#13;&#10;start/resume a debug session.&#13;&#10;If msg is given that is shown when the session starts/resumes. Useful to&#13;&#10;give a context if you've instrumented your code with pause() statements.&#13;&#10;&#13;&#10;If lines is given, the script pauses after that many lines, else it pauses&#13;&#10;immediately.&#13;&#10;&#13;&#10;If force is true, the pause function is honoured even if poff has been used.&#13;&#10;This is useful when in an interactive console session to regain debugger&#13;&#10;control.&#13;&#10;]],&#13;&#10;&#13;&#10;poff =    [[&#13;&#10;poff                -- turn off pause() command|&#13;&#10;&#13;&#10;This causes all pause() commands to be ignored. This is useful if you have&#13;&#10;instrumented your code in a busy loop and want to continue normal execution&#13;&#10;with no further interruption.&#13;&#10;]],&#13;&#10;&#13;&#10;pon =     [[&#13;&#10;pon                 -- turn on pause() command|&#13;&#10;&#13;&#10;This re-instates honouring the pause() commands you may have instrumented&#13;&#10;your code with.&#13;&#10;]],&#13;&#10;&#13;&#10;setb =    [[&#13;&#10;setb [line file]    -- set a breakpoint to line/file|, line 0 means 'any'&#13;&#10;&#13;&#10;If file is omitted or is &quot;-&quot; the breakpoint is set at the file for the&#13;&#10;currently set level (see &quot;set&quot;). Execution pauses when this line is about&#13;&#10;to be executed and the debugger session is re-activated.&#13;&#10;&#13;&#10;The file can be given as the fully qualified name, partially qualified or&#13;&#10;just the file name. E.g. if file is set as &quot;myfile.lua&quot;, then whenever&#13;&#10;execution reaches any file that ends with &quot;myfile.lua&quot; it will pause. If&#13;&#10;no extension is given, any extension will do.&#13;&#10;&#13;&#10;If the line is given as 0, then reaching any line in the file will do.&#13;&#10;]],&#13;&#10;&#13;&#10;delb =    [[&#13;&#10;delb [line file]    -- removes a breakpoint|&#13;&#10;&#13;&#10;If file is omitted or is &quot;-&quot; the breakpoint is removed for the file of the&#13;&#10;currently set level (see &quot;set&quot;).&#13;&#10;]],&#13;&#10;&#13;&#10;delallb = [[&#13;&#10;delallb             -- removes all breakpoints|&#13;&#10;]],&#13;&#10;&#13;&#10;setw =    [[&#13;&#10;setw &lt;exp&gt;          -- adds a new watch expression|&#13;&#10;&#13;&#10;The expression is evaluated before each line is executed. If the expression&#13;&#10;yields true then execution is paused and the debugger session re-activated.&#13;&#10;The expression is executed in the context of the line about to be executed.&#13;&#10;]],&#13;&#10;&#13;&#10;delw =    [[&#13;&#10;delw &lt;index&gt;        -- removes the watch expression at index|&#13;&#10;&#13;&#10;The index is that returned when the watch expression was set by setw.&#13;&#10;]],&#13;&#10;&#13;&#10;delallw = [[&#13;&#10;delallw             -- removes all watch expressions|&#13;&#10;]],&#13;&#10;&#13;&#10;run     = [[&#13;&#10;run                 -- run until next breakpoint or watch expression|&#13;&#10;]],&#13;&#10;&#13;&#10;step    = [[&#13;&#10;step [N]            -- run next N lines, stepping into function calls|&#13;&#10;&#13;&#10;If N is omitted, use 1.&#13;&#10;]],&#13;&#10;&#13;&#10;over    = [[&#13;&#10;over [N]            -- run next N lines, stepping over function calls|&#13;&#10;&#13;&#10;If N is omitted, use 1.&#13;&#10;]],&#13;&#10;&#13;&#10;out     = [[&#13;&#10;out [N]             -- run lines until stepped out of N functions|&#13;&#10;&#13;&#10;If N is omitted, use 1.&#13;&#10;If you are inside a function, using &quot;out 1&quot; will run until you return&#13;&#10;from that function to the caller.&#13;&#10;]],&#13;&#10;&#13;&#10;gotoo   = [[&#13;&#10;gotoo [line file]    -- step to line in file|&#13;&#10;&#13;&#10;This is equivalent to 'setb line file', followed by 'run', followed&#13;&#10;by 'delb line file'.&#13;&#10;]],&#13;&#10;&#13;&#10;listb   = [[&#13;&#10;listb               -- lists breakpoints|&#13;&#10;]],&#13;&#10;&#13;&#10;listw   = [[&#13;&#10;listw               -- lists watch expressions|&#13;&#10;]],&#13;&#10;&#13;&#10;set     = [[&#13;&#10;set [level]         -- set context to stack level, omitted=show|&#13;&#10;&#13;&#10;If level is omitted it just prints the current level set.&#13;&#10;This sets the current context to the level given. This affects the&#13;&#10;context used for several other functions (e.g. vars). The possible&#13;&#10;levels are those shown by trace.&#13;&#10;]],&#13;&#10;&#13;&#10;vars    = [[&#13;&#10;vars [depth]        -- list context locals to depth, omitted=1|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Lists all non-nil local variables and all non-nil upvalues in the&#13;&#10;currently set context. For variables that are tables, lists all fields&#13;&#10;to the given depth.&#13;&#10;]],&#13;&#10;&#13;&#10;fenv    = [[&#13;&#10;fenv [depth]        -- list context function env to depth, omitted=1|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Lists all function environment variables in the currently set context.&#13;&#10;For variables that are tables, lists all fields to the given depth.&#13;&#10;]],&#13;&#10;&#13;&#10;glob    = [[&#13;&#10;glob [depth]        -- list globals to depth, omitted=1|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Lists all global variables.&#13;&#10;For variables that are tables, lists all fields to the given depth.&#13;&#10;]],&#13;&#10;&#13;&#10;ups     = [[&#13;&#10;ups                 -- list all the upvalue names|&#13;&#10;&#13;&#10;These names will also be in the &quot;vars&quot; list unless their value is nil.&#13;&#10;This provides a means to identify which vars are upvalues and which are&#13;&#10;locals. If a name is both an upvalue and a local, the local value takes&#13;&#10;precedance.&#13;&#10;]],&#13;&#10;&#13;&#10;locs    = [[&#13;&#10;locs                -- list all the locals names|&#13;&#10;&#13;&#10;These names will also be in the &quot;vars&quot; list unless their value is nil.&#13;&#10;This provides a means to identify which vars are upvalues and which are&#13;&#10;locals. If a name is both an upvalue and a local, the local value takes&#13;&#10;precedance.&#13;&#10;]],&#13;&#10;&#13;&#10;dump    = [[&#13;&#10;dump &lt;var&gt; [depth]  -- dump all fields of variable to depth|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Prints the value of &lt;var&gt; in the currently set context level. If &lt;var&gt;&#13;&#10;is a table, lists all fields to the given depth. &lt;var&gt; can be just a&#13;&#10;name, or name.field or name.# to any depth, e.g. t.1.f accesses field&#13;&#10;'f' in array element 1 in table 't'.&#13;&#10;&#13;&#10;Can also be called from a script as dump(var,depth).&#13;&#10;]],&#13;&#10;&#13;&#10;tron    = [[&#13;&#10;tron [crl]          -- turn trace on for (c)alls, (r)etuns, (l)lines|&#13;&#10;&#13;&#10;If no parameter is given then tracing is turned off.&#13;&#10;When tracing is turned on a line is printed to the console for each&#13;&#10;debug 'event' selected. c=function calls, r=function returns, l=lines.&#13;&#10;]],&#13;&#10;&#13;&#10;trace   = [[&#13;&#10;trace               -- dumps a stack trace|&#13;&#10;&#13;&#10;Format is [level] = file,line,name&#13;&#10;The level is a candidate for use by the 'set' command.&#13;&#10;]],&#13;&#10;&#13;&#10;info    = [[&#13;&#10;info                -- dumps the complete debug info captured|&#13;&#10;&#13;&#10;Only useful as a diagnostic aid for the debugger itself. This information&#13;&#10;can be HUGE as it dumps all variables to the maximum depth, so be careful.&#13;&#10;]],&#13;&#10;&#13;&#10;show    = [[&#13;&#10;show line file X Y  -- show X lines before and Y after line in file|&#13;&#10;&#13;&#10;If line is omitted or is '-' then the current set context line is used.&#13;&#10;If file is omitted or is '-' then the current set context file is used.&#13;&#10;If file is not fully qualified and cannot be opened as specified, then&#13;&#10;a search for the file in the package[path] is performed using the usual&#13;&#10;&quot;require&quot; searching rules. If no file extension is given, .lua is used.&#13;&#10;Prints the lines from the source file around the given line.&#13;&#10;]],&#13;&#10;&#13;&#10;exit    = [[&#13;&#10;exit                -- exits debugger, re-start it using pause()|&#13;&#10;]],&#13;&#10;&#13;&#10;help    = [[&#13;&#10;help [command]      -- show this list or help for command|&#13;&#10;]],&#13;&#10;&#13;&#10;[&quot;&lt;statement&gt;&quot;] = [[&#13;&#10;&lt;statement&gt;         -- execute a statement in the current context|&#13;&#10;&#13;&#10;The statement can be anything that is legal in the context, including&#13;&#10;assignments. Such assignments affect the context and will be in force&#13;&#10;immediately. Any results returned are printed. Use '=' as a short-hand&#13;&#10;for 'return', e.g. &quot;=func(arg)&quot; will call 'func' with 'arg' and print&#13;&#10;the results, and &quot;=var&quot; will just print the value of 'var'.&#13;&#10;]],&#13;&#10;&#13;&#10;what    = [[&#13;&#10;what &lt;func&gt;         -- show where &lt;func&gt; is defined (if known)|&#13;&#10;]],&#13;&#10;&#13;&#10;}&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{ Local function to get table size&#13;&#10;local function tsize(t)&#13;&#10;    local count=0&#13;&#10;&#13;&#10;    for k,v in pairs(t) do&#13;&#10;        count = count + 1&#13;&#10;    end&#13;&#10;&#13;&#10;    return count&#13;&#10;end&#13;&#10;---}}}&#13;&#10;&#13;&#10;---{{{ Global utility function to set breakpoints, used inside Ctrlr&#13;&#10;function setBreakpoint(line, file, shouldBeSet)&#13;&#10;    if not breakpoints[line] then&#13;&#10;        breakpoints[line] = {}&#13;&#10;    end&#13;&#10;&#13;&#10;    if shouldBeSet then&#13;&#10;        breakpoints[line][file] = true&#13;&#10;    else&#13;&#10;        breakpoints[line] = nil&#13;&#10;    end&#13;&#10;end&#13;&#10;---}}}&#13;&#10;&#13;&#10;&#13;&#10;--{{{  local function getinfo(level,field)&#13;&#10;&#13;&#10;--like debug.getinfo but copes with no activation record at the given level&#13;&#10;--and knows how to get 'field'. 'field' can be the name of any of the&#13;&#10;--activation record fields or any of the 'what' names or nil for everything.&#13;&#10;--only valid when using the stack level to get info, not a function name.&#13;&#10;&#13;&#10;local function getinfo(level,field)&#13;&#10;  level = level + 1  --to get to the same relative level as the caller&#13;&#10;  if not field then return debug.getinfo(level) end&#13;&#10;  local what&#13;&#10;  if field == 'name' or field == 'namewhat' then&#13;&#10;    what = 'n'&#13;&#10;  elseif field == 'what' or field == 'source' or field == 'linedefined' or field == 'lastlinedefined' or field == 'short_src' then&#13;&#10;    what = 'S'&#13;&#10;  elseif field == 'currentline' then&#13;&#10;    what = 'l'&#13;&#10;  elseif field == 'nups' then&#13;&#10;    what = 'u'&#13;&#10;  elseif field == 'func' then&#13;&#10;    what = 'f'&#13;&#10;  else&#13;&#10;    return debug.getinfo(level,field)&#13;&#10;  end&#13;&#10;  local ar = debug.getinfo(level,what)&#13;&#10;  if ar then return ar[field] else return nil end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function indented( level, ... )&#13;&#10;&#13;&#10;local function indented( level, ... )&#13;&#10;  ctrlrDebugger:write( string.format (&quot;%s%s\n&quot;, string.rep('  ',level), table.concat({...}) ))&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function dumpval( level, name, value, limit )&#13;&#10;&#13;&#10;local dumpvisited&#13;&#10;&#13;&#10;local function dumpval( level, name, value, limit )&#13;&#10;    local index&#13;&#10;&#13;&#10;    if type(name) == 'number' then&#13;&#10;        index = string.format(&quot;%q,&quot;,name)&#13;&#10;    elseif type(name) == 'string' and (name == '__VARSLEVEL__' or name == '__ENVIRONMENT__' or name == '__GLOBALS__' or name == '__UPVALUES__' or name == '__LOCALS__') then&#13;&#10;        --ignore these, they are debugger generated&#13;&#10;        return&#13;&#10;    elseif type(name) == 'string' and string.find(name,'&#94;[_%a][_.%w]*$') then&#13;&#10;        index = string.format (&quot;%q: &quot;, name);&#13;&#10;    else&#13;&#10;        index = string.format (&quot;%q,&quot;, tostring(name))&#13;&#10;    end&#13;&#10;&#13;&#10;    if type(value) == 'table' then&#13;&#10;        if dumpvisited[value] then&#13;&#10;            indented (level, index, string.format(&quot;%q&quot;, dumpvisited[value]))&#13;&#10;        else&#13;&#10;            dumpvisited[value] = string.format (&quot;\&quot;table\&quot;: \&quot;%d\&quot;,&quot;, tsize (value))&#13;&#10;            if (limit or 0) &gt; 0 and level+1 &gt;= limit then&#13;&#10;                indented (level, index, string.format (&quot;{%s&quot;, string.gsub(dumpvisited[value], &quot;,&quot;, &quot;},&quot;)))&#13;&#10;            else&#13;&#10;                indented (level, index, &quot;{\n&quot;, dumpvisited[value])&#13;&#10;&#13;&#10;                for n,v in pairs(value) do&#13;&#10;                    dumpval (level+1, n, v, limit)&#13;&#10;                end&#13;&#10;&#13;&#10;                indented (level, &quot;}&quot;)&#13;&#10;            end&#13;&#10;        end&#13;&#10;    else&#13;&#10;        if type(value) == 'string' then&#13;&#10;            indented (level, index, string.format(&quot;{\&quot;string\&quot;: %q}&quot;,value), ',')&#13;&#10;        end&#13;&#10;&#13;&#10;        if type(value) == 'userdata' then&#13;&#10;            info = class_info (value)&#13;&#10;            indented (level, index, string.format (&quot;{\&quot;userdata\&quot;: %q}&quot;, info.name) , ',')&#13;&#10;        end&#13;&#10;&#13;&#10;        if type(value) == 'number' then&#13;&#10;            indented (level, index, string.format (&quot;{\&quot;number\&quot;: %q}&quot;,tostring(value)), ',')&#13;&#10;        end&#13;&#10;    end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function dumpvar( value, limit, name )&#13;&#10;&#13;&#10;local function dumpvar( value, limit, name )&#13;&#10;  ctrlrDebugger:write (&quot;\n::start dumpvar\n&quot;)&#13;&#10;  dumpvisited = {}&#13;&#10;  dumpval( 0, name or tostring(value), value, limit )&#13;&#10;  ctrlrDebugger:write (&quot;::end\n&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function show(file,line,before,after)&#13;&#10;&#13;&#10;--show +/-N lines of a file around line M&#13;&#10;&#13;&#10;local function show(file,line,before,after)&#13;&#10;&#13;&#10;  line   = tonumber(line   or 1)&#13;&#10;  before = tonumber(before or 10)&#13;&#10;  after  = tonumber(after  or before)&#13;&#10;&#13;&#10;  if not string.find(file,'%.') then file = file..'.lua' end&#13;&#10;&#13;&#10;  local f = io.open(file,'r')&#13;&#10;  if not f then&#13;&#10;    --{{{  try to find the file in the path&#13;&#10;&#13;&#10;    --&#13;&#10;    -- looks for a file in the package path&#13;&#10;    --&#13;&#10;    local path = package.path or LUA_PATH or ''&#13;&#10;    for c in string.gmatch (path, &quot;[&#94;;]+&quot;) do&#13;&#10;      local c = string.gsub (c, &quot;%?%.lua&quot;, file)&#13;&#10;      f = io.open (c,'r')&#13;&#10;      if f then&#13;&#10;        break&#13;&#10;      end&#13;&#10;    end&#13;&#10;&#13;&#10;    --}}}&#13;&#10;    if not f then&#13;&#10;      ctrlrDebugger:write('Cannot find '..file..'\n')&#13;&#10;      return&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  local i = 0&#13;&#10;  for l in f:lines() do&#13;&#10;    i = i + 1&#13;&#10;    if i &gt;= (line-before) then&#13;&#10;      if i &gt; (line+after) then break end&#13;&#10;      if i == line then&#13;&#10;        ctrlrDebugger:write(i..'***\t'..l..'\n')&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(i..'\t'..l..'\n')&#13;&#10;      end&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  f:close()&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function tracestack(l)&#13;&#10;&#13;&#10;local function gi( i )&#13;&#10;  return function() i=i+1 return debug.getinfo(i),i end&#13;&#10;end&#13;&#10;&#13;&#10;local function gl( level, j )&#13;&#10;  return function() j=j+1 return debug.getlocal( level, j ) end&#13;&#10;end&#13;&#10;&#13;&#10;local function gu( func, k )&#13;&#10;  return function() k=k+1 return debug.getupvalue( func, k ) end&#13;&#10;end&#13;&#10;&#13;&#10;local  traceinfo&#13;&#10;&#13;&#10;local function tracestack(l)&#13;&#10;  local l = l + 1                        --NB: +1 to get level relative to caller&#13;&#10;  traceinfo = {}&#13;&#10;  traceinfo.pausemsg = pausemsg&#13;&#10;  for ar,i in gi(l) do&#13;&#10;    table.insert( traceinfo, ar )&#13;&#10;    if ar.what ~= 'C' then&#13;&#10;      local names  = {}&#13;&#10;      local values = {}&#13;&#10;      for n,v in gl(i,0) do&#13;&#10;        if string.sub(n,1,1) ~= '(' then   --ignore internal control variables&#13;&#10;          table.insert( names, n )&#13;&#10;          table.insert( values, v )&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if #names &gt; 0 then&#13;&#10;        ar.lnames  = names&#13;&#10;        ar.lvalues = values&#13;&#10;      end&#13;&#10;    end&#13;&#10;    if ar.func then&#13;&#10;      local names  = {}&#13;&#10;      local values = {}&#13;&#10;      for n,v in gu(ar.func,0) do&#13;&#10;        if string.sub(n,1,1) ~= '(' then   --ignore internal control variables&#13;&#10;          table.insert( names, n )&#13;&#10;          table.insert( values, v )&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if #names &gt; 0 then&#13;&#10;        ar.unames  = names&#13;&#10;        ar.uvalues = values&#13;&#10;      end&#13;&#10;    end&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function trace()&#13;&#10;&#13;&#10;local function trace(set)&#13;&#10;  ctrlrDebugger:write (&quot;\n::start trace\n&quot;)&#13;&#10;  local mark&#13;&#10;  for level,ar in ipairs(traceinfo) do&#13;&#10;    if level == set then&#13;&#10;      mark = '***'&#13;&#10;    else&#13;&#10;      mark = ''&#13;&#10;    end&#13;&#10;    ctrlrDebugger:write('['..level..']'..mark..'\t'..(ar.name or ar.what)..' in '..ar.short_src..':'..ar.currentline..'\n')&#13;&#10;  end&#13;&#10;&#13;&#10;  ctrlrDebugger:write (&quot;::end\n&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function info()&#13;&#10;&#13;&#10;local function info()&#13;&#10;    dumpvar( traceinfo, 0, 'traceinfo' )&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  local function set_breakpoint(file, line, once)&#13;&#10;&#13;&#10;local function set_breakpoint(file, line, once)&#13;&#10;  if not breakpoints[line] then&#13;&#10;    breakpoints[line] = {}&#13;&#10;  end&#13;&#10;  if once then&#13;&#10;    breakpoints[line][file] = 1&#13;&#10;  else&#13;&#10;    breakpoints[line][file] = true&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function remove_breakpoint(file, line)&#13;&#10;&#13;&#10;local function remove_breakpoint(file, line)&#13;&#10;  if breakpoints[line] then&#13;&#10;    breakpoints[line][file] = nil&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function has_breakpoint(file, line)&#13;&#10;&#13;&#10;--allow for 'sloppy' file names&#13;&#10;--search for file and all variations walking up its directory hierachy&#13;&#10;--ditto for the file with no extension&#13;&#10;--a breakpoint can be permenant or once only, if once only its removed&#13;&#10;--after detection here, these are used for temporary breakpoints in the&#13;&#10;--debugger loop when executing the 'gotoo' command&#13;&#10;--a breakpoint on line 0 of a file means any line in that file&#13;&#10;&#13;&#10;local function has_breakpoint(file, line)&#13;&#10;  local isLine = breakpoints[line]&#13;&#10;  local isZero = breakpoints[0]&#13;&#10;  if not isLine and not isZero then return false end&#13;&#10;  local noext = string.gsub(file,&quot;(%..-)$&quot;,'',1)&#13;&#10;  if noext == file then noext = nil end&#13;&#10;  while file do&#13;&#10;    if isLine and isLine[file] then&#13;&#10;      if isLine[file] == 1 then isLine[file] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if isZero and isZero[file] then&#13;&#10;      if isZero[file] == 1 then isZero[file] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if IsWindows then&#13;&#10;      file = string.match(file,&quot;[:/\\](.+)$&quot;)&#13;&#10;    else&#13;&#10;      file = string.match(file,&quot;[:/](.+)$&quot;)&#13;&#10;    end&#13;&#10;  end&#13;&#10;  while noext do&#13;&#10;    if isLine and isLine[noext] then&#13;&#10;      if isLine[noext] == 1 then isLine[noext] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if isZero and isZero[noext] then&#13;&#10;      if isZero[noext] == 1 then isZero[noext] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if IsWindows then&#13;&#10;      noext = string.match(noext,&quot;[:/\\](.+)$&quot;)&#13;&#10;    else&#13;&#10;      noext = string.match(noext,&quot;[:/](.+)$&quot;)&#13;&#10;    end&#13;&#10;  end&#13;&#10;  return false&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function capture_vars(ref,level,line)&#13;&#10;&#13;&#10;local function capture_vars(ref,level,line)&#13;&#10;  --get vars, file and line for the given level relative to debug_hook offset by ref&#13;&#10;&#13;&#10;  local lvl = ref + level                --NB: This includes an offset of +1 for the call to here&#13;&#10;&#13;&#10;  --{{{  capture variables&#13;&#10;&#13;&#10;  local ar = debug.getinfo(lvl, &quot;f&quot;)&#13;&#10;  if not ar then return {},'?',0 end&#13;&#10;&#13;&#10;  local vars = {__UPVALUES__={}, __LOCALS__={}}&#13;&#10;  local i&#13;&#10;&#13;&#10;  local func = ar.func&#13;&#10;  if func then&#13;&#10;    i = 1&#13;&#10;    while true do&#13;&#10;      local name, value = debug.getupvalue(func, i)&#13;&#10;      if not name then break end&#13;&#10;      if string.sub(name,1,1) ~= '(' then  --NB: ignoring internal control variables&#13;&#10;        vars[name] = value&#13;&#10;        vars.__UPVALUES__[i] = name&#13;&#10;      end&#13;&#10;      i = i + 1&#13;&#10;    end&#13;&#10;    vars.__ENVIRONMENT__ = getfenv(func)&#13;&#10;  end&#13;&#10;&#13;&#10;  vars.__GLOBALS__ = getfenv(0)&#13;&#10;&#13;&#10;  i = 1&#13;&#10;  while true do&#13;&#10;    local name, value = debug.getlocal(lvl, i)&#13;&#10;    if not name then break end&#13;&#10;    if string.sub(name,1,1) ~= '(' then    --NB: ignoring internal control variables&#13;&#10;      vars[name] = value&#13;&#10;      vars.__LOCALS__[i] = name&#13;&#10;    end&#13;&#10;    i = i + 1&#13;&#10;  end&#13;&#10;&#13;&#10;  vars.__VARSLEVEL__ = level&#13;&#10;&#13;&#10;  if func then&#13;&#10;    --NB: Do not do this until finished filling the vars table&#13;&#10;    setmetatable(vars, { __index = getfenv(func), __newindex = getfenv(func) })&#13;&#10;  end&#13;&#10;&#13;&#10;  --NB: Do not read or write the vars table anymore else the metatable functions will get invoked!&#13;&#10;&#13;&#10;  --}}}&#13;&#10;&#13;&#10;  local file = getinfo(lvl, &quot;source&quot;)&#13;&#10;  if string.find(file, &quot;@&quot;) == 1 then&#13;&#10;    file = string.sub(file, 2)&#13;&#10;  end&#13;&#10;  if IsWindows then file = string.lower(file) end&#13;&#10;&#13;&#10;  if not line then&#13;&#10;    line = getinfo(lvl, &quot;currentline&quot;)&#13;&#10;  end&#13;&#10;&#13;&#10;  return vars,file,line&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function restore_vars(ref,vars)&#13;&#10;&#13;&#10;local function restore_vars(ref,vars)&#13;&#10;&#13;&#10;  if type(vars) ~= 'table' then return end&#13;&#10;&#13;&#10;  local level = vars.__VARSLEVEL__       --NB: This level is relative to debug_hook offset by ref&#13;&#10;  if not level then return end&#13;&#10;&#13;&#10;  level = level + ref                    --NB: This includes an offset of +1 for the call to here&#13;&#10;&#13;&#10;  local i&#13;&#10;  local written_vars = {}&#13;&#10;&#13;&#10;  i = 1&#13;&#10;  while true do&#13;&#10;    local name, value = debug.getlocal(level, i)&#13;&#10;    if not name then break end&#13;&#10;    if vars[name] and string.sub(name,1,1) ~= '(' then     --NB: ignoring internal control variables&#13;&#10;      debug.setlocal(level, i, vars[name])&#13;&#10;      written_vars[name] = true&#13;&#10;    end&#13;&#10;    i = i + 1&#13;&#10;  end&#13;&#10;&#13;&#10;  local ar = debug.getinfo(level, &quot;f&quot;)&#13;&#10;  if not ar then return end&#13;&#10;&#13;&#10;  local func = ar.func&#13;&#10;  if func then&#13;&#10;&#13;&#10;    i = 1&#13;&#10;    while true do&#13;&#10;      local name, value = debug.getupvalue(func, i)&#13;&#10;      if not name then break end&#13;&#10;      if vars[name] and string.sub(name,1,1) ~= '(' then   --NB: ignoring internal control variables&#13;&#10;        if not written_vars[name] then&#13;&#10;          debug.setupvalue(func, i, vars[name])&#13;&#10;        end&#13;&#10;        written_vars[name] = true&#13;&#10;      end&#13;&#10;      i = i + 1&#13;&#10;    end&#13;&#10;&#13;&#10;  end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function trace_event(event, line, level)&#13;&#10;&#13;&#10;local function print_trace(level,depth,event,file,line,name)&#13;&#10;&#13;&#10;  --NB: level here is relative to the caller of trace_event, so offset by 2 to get to there&#13;&#10;  level = level + 2&#13;&#10;&#13;&#10;  local file = file or getinfo(level,'short_src')&#13;&#10;  local line = line or getinfo(level,'currentline')&#13;&#10;  local name = name or getinfo(level,'name')&#13;&#10;&#13;&#10;  local prefix = ''&#13;&#10;  if current_thread ~= 'main' then prefix = '['..tostring(current_thread)..'] ' end&#13;&#10;&#13;&#10;  ctrlrDebugger:write(prefix..&#13;&#10;           string.format('%08.2f:%02i.',os.clock(),depth)..&#13;&#10;           string.rep('.',depth%32)..&#13;&#10;           (file or '')..' ('..(line or '')..') '..&#13;&#10;           (name or '')..&#13;&#10;           ' ('..event..')\n')&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;local function trace_event(event, line, level)&#13;&#10;&#13;&#10;  if event == 'return' and trace_returns then&#13;&#10;    --note the line info for later&#13;&#10;    ret_file = getinfo(level+1,'short_src')&#13;&#10;    ret_line = getinfo(level+1,'currentline')&#13;&#10;    ret_name = getinfo(level+1,'name')&#13;&#10;  end&#13;&#10;&#13;&#10;  if event ~= 'line' then return end&#13;&#10;&#13;&#10;  local slevel = stack_level[current_thread]&#13;&#10;  local tlevel = trace_level[current_thread]&#13;&#10;&#13;&#10;  if trace_calls and slevel &gt; tlevel then&#13;&#10;    --we are now in the function called, so look back 1 level further to find the calling file and line&#13;&#10;    print_trace(level+1,slevel-1,'c',nil,nil,getinfo(level+1,'name'))&#13;&#10;  end&#13;&#10;&#13;&#10;  if trace_returns and slevel &lt; tlevel then&#13;&#10;    print_trace(level,slevel,'r',ret_file,ret_line,ret_name)&#13;&#10;  end&#13;&#10;&#13;&#10;  if trace_lines then&#13;&#10;    print_trace(level,slevel,'l')&#13;&#10;  end&#13;&#10;&#13;&#10;  trace_level[current_thread] = stack_level[current_thread]&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function report(ev, vars, file, line, idx_watch)&#13;&#10;&#13;&#10;local function report(ev, vars, file, line, idx_watch)&#13;&#10;  local vars = vars or {}&#13;&#10;  local file = file or '?'&#13;&#10;  local line = line or 0&#13;&#10;  local prefix = ''&#13;&#10;  if current_thread ~= 'main' then prefix = '['..tostring(current_thread)..'] ' end&#13;&#10;  if ev == events.STEP then&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..' ('..stack_level[current_thread]..')\n')&#13;&#10;  elseif ev == events.BREAK then&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..' ('..stack_level[current_thread]..') (breakpoint)\n')&#13;&#10;  elseif ev == events.WATCH then&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..' ('..stack_level[current_thread]..')'..&quot; (watch expression &quot;..idx_watch.. &quot;: [&quot;..watches[idx_watch].exp..&quot;])\n&quot;)&#13;&#10;  elseif ev == events.SET then&#13;&#10;    --do nothing&#13;&#10;  else&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Error in application: &quot;..file..&quot; line &quot;..line..&quot;\n&quot;)&#13;&#10;  end&#13;&#10;  if ev ~= events.SET then&#13;&#10;    if pausemsg and pausemsg ~= '' then ctrlrDebugger:write('Message: '..pausemsg..'\n') end&#13;&#10;    pausemsg = ''&#13;&#10;  end&#13;&#10;  return vars, file, line&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  local function debugger_loop(ev, vars, file, line, idx_watch)&#13;&#10;&#13;&#10;local function debugger_loop(ev, vars, file, line, idx_watch)&#13;&#10;&#13;&#10;  local eval_env  = vars or {}&#13;&#10;  local breakfile = file or '?'&#13;&#10;  local breakline = line or 0&#13;&#10;&#13;&#10;  local command, args&#13;&#10;&#13;&#10;  --{{{  local function getargs(spec)&#13;&#10;&#13;&#10;  --get command arguments according to the given spec from the args string&#13;&#10;  --the spec has a single character for each argument, arguments are separated&#13;&#10;  --by white space, the spec characters can be one of:&#13;&#10;  -- F for a filename    (defaults to breakfile if - given in args)&#13;&#10;  -- L for a line number (defaults to breakline if - given in args)&#13;&#10;  -- N for a number&#13;&#10;  -- V for a variable name&#13;&#10;  -- S for a string&#13;&#10;&#13;&#10;  local function getargs(spec)&#13;&#10;    local res={}&#13;&#10;    local char,arg&#13;&#10;    local ptr=1&#13;&#10;    for i=1,string.len(spec) do&#13;&#10;      char = string.sub(spec,i,i)&#13;&#10;      if     char == 'F' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '-' end&#13;&#10;        if arg == '-' then arg = breakfile end&#13;&#10;      elseif char == 'L' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '-' end&#13;&#10;        if arg == '-' then arg = breakline end&#13;&#10;        arg = tonumber(arg) or 0&#13;&#10;      elseif char == 'N' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '0' end&#13;&#10;        arg = tonumber(arg) or 0&#13;&#10;      elseif char == 'V' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '' end&#13;&#10;      elseif char == 'S' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '' end&#13;&#10;      else&#13;&#10;        arg = ''&#13;&#10;      end&#13;&#10;      table.insert(res,arg or '')&#13;&#10;    end&#13;&#10;    return unpack(res)&#13;&#10;  end&#13;&#10;&#13;&#10;  --}}}&#13;&#10;&#13;&#10;  while true do&#13;&#10;    -- io.write(&quot;[DEBUG]&gt; &quot;)&#13;&#10;    ctrlrDebugger:write(&quot;[DEBUG]&gt; &quot;)&#13;&#10;    -- local line = io.read(&quot;*line&quot;)&#13;&#10;    local line = ctrlrDebugger:read()&#13;&#10;    if line == nil then ctrlrDebugger:write('\n'); line = 'exit' end&#13;&#10;&#13;&#10;    if string.find(line, &quot;&#94;[a-z]+&quot;) then&#13;&#10;      command = string.sub(line, string.find(line, &quot;&#94;[a-z]+&quot;))&#13;&#10;      args    = string.gsub(line,&quot;&#94;[a-z]+%s*&quot;,'',1)            --strip command off line&#13;&#10;    else&#13;&#10;      command = ''&#13;&#10;    end&#13;&#10;&#13;&#10;    if command == &quot;setb&quot; then&#13;&#10;      --{{{  set breakpoint&#13;&#10;&#13;&#10;      local line, filename  = getargs('LF')&#13;&#10;      if filename ~= '' and line ~= '' then&#13;&#10;        set_breakpoint(filename,line)&#13;&#10;        ctrlrDebugger:write(&quot;Breakpoint set in file &quot;..filename..' line '..line..'\n')&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delb&quot; then&#13;&#10;      --{{{  delete breakpoint&#13;&#10;&#13;&#10;      local line, filename = getargs('LF')&#13;&#10;      if filename ~= '' and line ~= '' then&#13;&#10;        remove_breakpoint(filename, line)&#13;&#10;        ctrlrDebugger:write(&quot;Breakpoint deleted from file &quot;..filename..' line '..line..&quot;\n&quot;)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delallb&quot; then&#13;&#10;      --{{{  delete all breakpoints&#13;&#10;      breakpoints = {}&#13;&#10;      ctrlrDebugger:write('All breakpoints deleted\n')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;listb&quot; then&#13;&#10;      --{{{  list breakpoints&#13;&#10;      for i, v in pairs(breakpoints) do&#13;&#10;        for ii, vv in pairs(v) do&#13;&#10;          ctrlrDebugger:write(&quot;Break at: &quot;..i..' in '..ii..'\n')&#13;&#10;        end&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;setw&quot; then&#13;&#10;      --{{{  set watch expression&#13;&#10;&#13;&#10;      if args and args ~= '' then&#13;&#10;        local func = loadstring(&quot;return(&quot; .. args .. &quot;)&quot;)&#13;&#10;        local newidx = #watches + 1&#13;&#10;        watches[newidx] = {func = func, exp = args}&#13;&#10;        ctrlrDebugger:write(&quot;Set watch exp no. &quot; .. newidx..'\n')&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delw&quot; then&#13;&#10;      --{{{  delete watch expression&#13;&#10;&#13;&#10;      local index = tonumber(args)&#13;&#10;      if index then&#13;&#10;        watches[index] = nil&#13;&#10;        ctrlrDebugger:write(&quot;Watch expression deleted\n&quot;)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delallw&quot; then&#13;&#10;      --{{{  delete all watch expressions&#13;&#10;      watches = {}&#13;&#10;      ctrlrDebugger:write('All watch expressions deleted\n')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;listw&quot; then&#13;&#10;      --{{{  list watch expressions&#13;&#10;      for i, v in pairs(watches) do&#13;&#10;        ctrlrDebugger:write(&quot;Watch exp. &quot; .. i .. &quot;: &quot; .. v.exp..'\n')&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;run&quot; then&#13;&#10;      --{{{  run until breakpoint&#13;&#10;      step_into = false&#13;&#10;      step_over = false&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;step&quot; then&#13;&#10;      --{{{  step N lines (into functions)&#13;&#10;      local N = tonumber(args) or 1&#13;&#10;      step_over  = false&#13;&#10;      step_into  = true&#13;&#10;      step_lines = tonumber(N or 1)&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;over&quot; then&#13;&#10;      --{{{  step N lines (over functions)&#13;&#10;      local N = tonumber(args) or 1&#13;&#10;      step_into  = false&#13;&#10;      step_over  = true&#13;&#10;      step_lines = tonumber(N or 1)&#13;&#10;      step_level[current_thread] = stack_level[current_thread]&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;out&quot; then&#13;&#10;      --{{{  step N lines (out of functions)&#13;&#10;      local N = tonumber(args) or 1&#13;&#10;      step_into  = false&#13;&#10;      step_over  = true&#13;&#10;      step_lines = 1&#13;&#10;      step_level[current_thread] = stack_level[current_thread] - tonumber(N or 1)&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;gotoo&quot; then&#13;&#10;      --{{{  step until reach line&#13;&#10;      local line, filename = getargs('LF')&#13;&#10;      if line ~= '' then&#13;&#10;        step_over  = false&#13;&#10;        step_into  = false&#13;&#10;        if has_breakpoint(filename,line) then&#13;&#10;          return 'cont'&#13;&#10;        else&#13;&#10;          set_breakpoint(filename,line,true)&#13;&#10;          return 'cont'&#13;&#10;        end&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;set&quot; then&#13;&#10;      --{{{  set/show context level&#13;&#10;      local level = args&#13;&#10;      if level and level == '' then level = nil end&#13;&#10;      if level then return level end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;vars&quot; then&#13;&#10;      --{{{  list context variables&#13;&#10;      local depth = args&#13;&#10;      if depth and depth == '' then depth = nil end&#13;&#10;      depth = tonumber(depth) or 1&#13;&#10;      dumpvar(eval_env, depth+1, 'variables')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;glob&quot; then&#13;&#10;      --{{{  list global variables&#13;&#10;      local depth = args&#13;&#10;      if depth and depth == '' then depth = nil end&#13;&#10;      depth = tonumber(depth) or 1&#13;&#10;      dumpvar(eval_env.__GLOBALS__,depth+1,'globals')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;fenv&quot; then&#13;&#10;      --{{{  list function environment variables&#13;&#10;      local depth = args&#13;&#10;      if depth and depth == '' then depth = nil end&#13;&#10;      depth = tonumber(depth) or 1&#13;&#10;      dumpvar(eval_env.__ENVIRONMENT__,depth+1,'environment')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;ups&quot; then&#13;&#10;      --{{{  list upvalue names&#13;&#10;      dumpvar(eval_env.__UPVALUES__,2,'upvalues')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;locs&quot; then&#13;&#10;      --{{{  list locals names&#13;&#10;      dumpvar(eval_env.__LOCALS__,2,'upvalues')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;what&quot; then&#13;&#10;      --{{{  show where a function is defined&#13;&#10;      if args and args ~= '' then&#13;&#10;        local v = eval_env&#13;&#10;        local n = nil&#13;&#10;        for w in string.gmatch(args,&quot;[%w_]+&quot;) do&#13;&#10;          v = v[w]&#13;&#10;          if n then n = n..'.'..w else n = w end&#13;&#10;          if not v then break end&#13;&#10;        end&#13;&#10;        if type(v) == 'function' then&#13;&#10;          local def = debug.getinfo(v,'S')&#13;&#10;          if def then&#13;&#10;            ctrlrDebugger:write(def.what..' in '..def.short_src..' '..def.linedefined..'..'..def.lastlinedefined..'\n')&#13;&#10;          else&#13;&#10;            ctrlrDebugger:write('Cannot get info for '..v..'\n')&#13;&#10;          end&#13;&#10;        else&#13;&#10;          ctrlrDebugger:write(v..' is not a function\n')&#13;&#10;        end&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;dump&quot; then&#13;&#10;      --{{{  dump a variable&#13;&#10;      local name, depth = getargs('VN')&#13;&#10;      if name ~= '' then&#13;&#10;        if depth == '' or depth == 0 then depth = nil end&#13;&#10;        depth = tonumber(depth or 1)&#13;&#10;        local v = eval_env&#13;&#10;        local n = nil&#13;&#10;        for w in string.gmatch(name,&quot;[&#94;%.]+&quot;) do     --get everything between dots&#13;&#10;          if tonumber(w) then&#13;&#10;            v = v[tonumber(w)]&#13;&#10;          else&#13;&#10;            v = v[w]&#13;&#10;          end&#13;&#10;          if n then n = n..'.'..w else n = w end&#13;&#10;          if not v then break end&#13;&#10;        end&#13;&#10;        dumpvar(v,depth+1,n)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;show&quot; then&#13;&#10;      --{{{  show file around a line or the current breakpoint&#13;&#10;&#13;&#10;      local line, file, before, after = getargs('LFNN')&#13;&#10;      if before == 0 then before = 10     end&#13;&#10;      if after  == 0 then after  = before end&#13;&#10;&#13;&#10;      if file ~= '' and file ~= &quot;=stdin&quot; then&#13;&#10;        show(file,line,before,after)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write('Nothing to show\n')&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;poff&quot; then&#13;&#10;      --{{{  turn pause command off&#13;&#10;      pause_off = true&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;pon&quot; then&#13;&#10;      --{{{  turn pause command on&#13;&#10;      pause_off = false&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;tron&quot; then&#13;&#10;      --{{{  turn tracing on/off&#13;&#10;      local option = getargs('S')&#13;&#10;      trace_calls   = false&#13;&#10;      trace_returns = false&#13;&#10;      trace_lines   = false&#13;&#10;      if string.find(option,'c') then trace_calls   = true end&#13;&#10;      if string.find(option,'r') then trace_returns = true end&#13;&#10;      if string.find(option,'l') then trace_lines   = true end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;trace&quot; then&#13;&#10;      --{{{  dump a stack trace&#13;&#10;      trace(eval_env.__VARSLEVEL__)&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;info&quot; then&#13;&#10;      --{{{  dump all debug info captured&#13;&#10;      info()&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;pause&quot; then&#13;&#10;      --{{{  not allowed in here&#13;&#10;      ctrlrDebugger:write('pause() should only be used in the script you are debugging\n')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;help&quot; then&#13;&#10;      --{{{  help&#13;&#10;      local command = getargs('S')&#13;&#10;      if command ~= '' and hints[command] then&#13;&#10;        ctrlrDebugger:write(hints[command]..'\n')&#13;&#10;      else&#13;&#10;        for _,v in pairs(hints) do&#13;&#10;          local _,_,h = string.find(v,&quot;(.+)|&quot;)&#13;&#10;          ctrlrDebugger:write(h..'\n')&#13;&#10;        end&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;exit&quot; then&#13;&#10;      --{{{  exit debugger&#13;&#10;      return 'stop'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif line ~= '' then&#13;&#10;      --{{{  just execute whatever it is in the current context&#13;&#10;&#13;&#10;      --map line starting with &quot;=...&quot; to &quot;return ...&quot;&#13;&#10;      if string.sub(line,1,1) == '=' then line = string.gsub(line,'=','return ',1) end&#13;&#10;&#13;&#10;      local ok, func = pcall(loadstring,line)&#13;&#10;      if func == nil then                             --Michael.Bringmann@lsi.com&#13;&#10;        ctrlrDebugger:write(&quot;Compile error: &quot;..line..'\n')&#13;&#10;      elseif not ok then&#13;&#10;        ctrlrDebugger:write(&quot;Compile error: &quot;..func..'\n')&#13;&#10;      else&#13;&#10;        setfenv(func, eval_env)&#13;&#10;        local res = {pcall(func)}&#13;&#10;        if res[1] then&#13;&#10;          if res[2] then&#13;&#10;            table.remove(res,1)&#13;&#10;            for _,v in ipairs(res) do&#13;&#10;              ctrlrDebugger:write(tostring(v))&#13;&#10;              ctrlrDebugger:write('\t')&#13;&#10;            end&#13;&#10;            ctrlrDebugger:write('\n')&#13;&#10;          end&#13;&#10;          --update in the context&#13;&#10;          return 0&#13;&#10;        else&#13;&#10;          ctrlrDebugger:write(&quot;Run error: &quot;..res[2]..'\n')&#13;&#10;        end&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function debug_hook(event, line, level, thread)&#13;&#10;&#13;&#10;local function debug_hook(event, line, level, thread)&#13;&#10;  if not started then debug.sethook(); coro_debugger = nil; return end&#13;&#10;  current_thread = thread or 'main'&#13;&#10;  local level = level or 2&#13;&#10;  trace_event(event,line,level)&#13;&#10;  if event == &quot;call&quot; then&#13;&#10;    stack_level[current_thread] = stack_level[current_thread] + 1&#13;&#10;  elseif event == &quot;return&quot; then&#13;&#10;    stack_level[current_thread] = stack_level[current_thread] - 1&#13;&#10;    if stack_level[current_thread] &lt; 0 then stack_level[current_thread] = 0 end&#13;&#10;  else&#13;&#10;    local vars,file,line = capture_vars(level,1,line)&#13;&#10;    local stop, ev, idx = false, events.STEP, 0&#13;&#10;    while true do&#13;&#10;      for index, value in pairs(watches) do&#13;&#10;        setfenv(value.func, vars)&#13;&#10;        local status, res = pcall(value.func)&#13;&#10;        if status and res then&#13;&#10;          ev, idx = events.WATCH, index&#13;&#10;          stop = true&#13;&#10;          break&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if stop then break end&#13;&#10;      if (step_into)&#13;&#10;      or (step_over and (stack_level[current_thread] &lt;= step_level[current_thread] or stack_level[current_thread] == 0)) then&#13;&#10;        step_lines = step_lines - 1&#13;&#10;        if step_lines &lt; 1 then&#13;&#10;          ev, idx = events.STEP, 0&#13;&#10;          break&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if has_breakpoint(file, line) then&#13;&#10;        ev, idx = events.BREAK, 0&#13;&#10;        break&#13;&#10;      end&#13;&#10;      return&#13;&#10;    end&#13;&#10;    if not coro_debugger then&#13;&#10;      ctrlrDebugger:write(&quot;Lua Debugger\n&quot;)&#13;&#10;      vars, file, line = report(ev, vars, file, line, idx)&#13;&#10;      ctrlrDebugger:write(&quot;Type 'help' for commands\n&quot;)&#13;&#10;      coro_debugger = true&#13;&#10;    else&#13;&#10;      vars, file, line = report(ev, vars, file, line, idx)&#13;&#10;    end&#13;&#10;    tracestack(level)&#13;&#10;    local last_next = 1&#13;&#10;    local next = 'ask'&#13;&#10;    local silent = false&#13;&#10;    while true do&#13;&#10;      if next == 'ask' then&#13;&#10;        next = debugger_loop(ev, vars, file, line, idx)&#13;&#10;      elseif next == 'cont' then&#13;&#10;        return&#13;&#10;      elseif next == 'stop' then&#13;&#10;        started = false&#13;&#10;        debug.sethook()&#13;&#10;        coro_debugger = nil&#13;&#10;        return&#13;&#10;      elseif tonumber(next) then --get vars for given level or last level&#13;&#10;        next = tonumber(next)&#13;&#10;        if next == 0 then silent = true; next = last_next else silent = false end&#13;&#10;        last_next = next&#13;&#10;        restore_vars(level,vars)&#13;&#10;        vars, file, line = capture_vars(level,next)&#13;&#10;        if not silent then&#13;&#10;          if vars and vars.__VARSLEVEL__ then&#13;&#10;            ctrlrDebugger:write('Level: '..vars.__VARSLEVEL__..'\n')&#13;&#10;          else&#13;&#10;            ctrlrDebugger:write('No level set\n')&#13;&#10;          end&#13;&#10;        end&#13;&#10;        ev = events.SET&#13;&#10;        next = 'ask'&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write('Unknown command from debugger_loop: '..tostring(next)..'\n')&#13;&#10;        ctrlrDebugger:write('Stopping debugger\n')&#13;&#10;        next = 'stop'&#13;&#10;      end&#13;&#10;    end&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  coroutine.create&#13;&#10;&#13;&#10;--This function overrides the built-in for the purposes of propagating&#13;&#10;--the debug hook settings from the creator into the created coroutine.&#13;&#10;&#13;&#10;_G.coroutine.create = function(f)&#13;&#10;  local thread&#13;&#10;  local hook, mask, count = debug.gethook()&#13;&#10;  if hook then&#13;&#10;    local function thread_hook(event,line)&#13;&#10;      hook(event,line,3,thread)&#13;&#10;    end&#13;&#10;    thread = cocreate(function(...)&#13;&#10;                        stack_level[thread] = 0&#13;&#10;                        trace_level[thread] = 0&#13;&#10;                        step_level [thread] = 0&#13;&#10;                        debug.sethook(thread_hook,mask,count)&#13;&#10;                        return f(...)&#13;&#10;                      end)&#13;&#10;    return thread&#13;&#10;  else&#13;&#10;    return cocreate(f)&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  coroutine.wrap&#13;&#10;&#13;&#10;--This function overrides the built-in for the purposes of propagating&#13;&#10;--the debug hook settings from the creator into the created coroutine.&#13;&#10;&#13;&#10;_G.coroutine.wrap = function(f)&#13;&#10;  local thread&#13;&#10;  local hook, mask, count = debug.gethook()&#13;&#10;  if hook then&#13;&#10;    local function thread_hook(event,line)&#13;&#10;      hook(event,line,3,thread)&#13;&#10;    end&#13;&#10;    thread = cowrap(function(...)&#13;&#10;                      stack_level[thread] = 0&#13;&#10;                      trace_level[thread] = 0&#13;&#10;                      step_level [thread] = 0&#13;&#10;                      debug.sethook(thread_hook,mask,count)&#13;&#10;                      return f(...)&#13;&#10;                    end)&#13;&#10;    return thread&#13;&#10;  else&#13;&#10;    return cowrap(f)&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  function pause(x,l,f)&#13;&#10;&#13;&#10;--&#13;&#10;-- Starts/resumes a debug session&#13;&#10;--&#13;&#10;&#13;&#10;function pause(x,l,f)&#13;&#10;  if not f and pause_off then return end       --being told to ignore pauses&#13;&#10;  pausemsg = x or 'pause'&#13;&#10;  local lines&#13;&#10;  local src = getinfo(2,'short_src')&#13;&#10;  if l then&#13;&#10;    lines = l   --being told when to stop&#13;&#10;  elseif src == &quot;stdin&quot; then&#13;&#10;    lines = 1   --if in a console session, stop now&#13;&#10;  else&#13;&#10;    lines = 2   --if in a script, stop when get out of pause()&#13;&#10;  end&#13;&#10;  if started then&#13;&#10;    --we'll stop now 'cos the existing debug hook will grab us&#13;&#10;    step_lines = lines&#13;&#10;    step_into  = true&#13;&#10;    debug.sethook(debug_hook, &quot;crl&quot;)         --reset it in case some external agent fiddled with it&#13;&#10;  else&#13;&#10;    --set to stop when get out of pause()&#13;&#10;    trace_level[current_thread] = 0&#13;&#10;    step_level [current_thread] = 0&#13;&#10;    stack_level[current_thread] = 1&#13;&#10;    step_lines = lines&#13;&#10;    step_into  = true&#13;&#10;    started    = true&#13;&#10;    debug.sethook(debug_hook, &quot;crl&quot;)         --NB: this will cause an immediate entry to the debugger_loop&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  function dump(v,depth)&#13;&#10;&#13;&#10;--shows the value of the given variable, only really useful&#13;&#10;--when the variable is a table&#13;&#10;--see dump debug command hints for full semantics&#13;&#10;&#13;&#10;function dump(v,depth)&#13;&#10;  dumpvar(v,(depth or 1)+1,tostring(v))&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  function debug.traceback(x)&#13;&#10;&#13;&#10;local _traceback = debug.traceback       --note original function&#13;&#10;&#13;&#10;--override standard function&#13;&#10;debug.traceback = function(x)&#13;&#10;  local assertmsg = _traceback(x)        --do original function&#13;&#10;  pause(x)                               --let user have a look at stuff&#13;&#10;  return assertmsg                       --carry on&#13;&#10;end&#13;&#10;&#13;&#10;_TRACEBACK = debug.traceback             --Lua 5.0 function&#13;&#10;&#13;&#10;--}}}"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000005"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="inspect" luaMethodCode="function getInspect()&#13;&#10;local inspect ={&#13;&#10;  _VERSION = 'inspect.lua 3.0.0',&#13;&#10;  _URL     = 'http://github.com/kikito/inspect.lua',&#13;&#10;  _DESCRIPTION = 'human-readable representations of tables',&#13;&#10;  _LICENSE = [[&#13;&#10;    MIT LICENSE&#13;&#10;&#13;&#10;    Copyright (c) 2013 Enrique Garc&#237;a Cota&#13;&#10;&#13;&#10;    Permission is hereby granted, free of charge, to any person obtaining a&#13;&#10;    copy of this software and associated documentation files (the&#13;&#10;    &quot;Software&quot;), to deal in the Software without restriction, including&#13;&#10;    without limitation the rights to use, copy, modify, merge, publish,&#13;&#10;    distribute, sublicense, and/or sell copies of the Software, and to&#13;&#10;    permit persons to whom the Software is furnished to do so, subject to&#13;&#10;    the following conditions:&#13;&#10;&#13;&#10;    The above copyright notice and this permission notice shall be included&#13;&#10;    in all copies or substantial portions of the Software.&#13;&#10;&#13;&#10;    THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS&#13;&#10;    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF&#13;&#10;    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.&#13;&#10;    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY&#13;&#10;    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,&#13;&#10;    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE&#13;&#10;    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&#13;&#10;  ]]&#13;&#10;}&#13;&#10;&#13;&#10;inspect.KEY       = setmetatable({}, {__tostring = function() return 'inspect.KEY' end})&#13;&#10;inspect.METATABLE = setmetatable({}, {__tostring = function() return 'inspect.METATABLE' end})&#13;&#10;&#13;&#10;-- Apostrophizes the string if it has quotes, but not aphostrophes&#13;&#10;-- Otherwise, it returns a regular quoted string&#13;&#10;local function smartQuote(str)&#13;&#10;  if str:match('&quot;') and not str:match(&quot;'&quot;) then&#13;&#10;    return &quot;'&quot; .. str .. &quot;'&quot;&#13;&#10;  end&#13;&#10;  return '&quot;' .. str:gsub('&quot;', '\\&quot;') .. '&quot;'&#13;&#10;end&#13;&#10;&#13;&#10;local controlCharsTranslation = {&#13;&#10;  [&quot;\a&quot;] = &quot;\\a&quot;,  [&quot;\b&quot;] = &quot;\\b&quot;, [&quot;\f&quot;] = &quot;\\f&quot;,  [&quot;\n&quot;] = &quot;\\n&quot;,&#13;&#10;  [&quot;\r&quot;] = &quot;\\r&quot;,  [&quot;\t&quot;] = &quot;\\t&quot;, [&quot;\v&quot;] = &quot;\\v&quot;&#13;&#10;}&#13;&#10;&#13;&#10;local function escape(str)&#13;&#10;  local result = str:gsub(&quot;\\&quot;, &quot;\\\\&quot;):gsub(&quot;(%c)&quot;, controlCharsTranslation)&#13;&#10;  return result&#13;&#10;end&#13;&#10;&#13;&#10;local function isIdentifier(str)&#13;&#10;  return type(str) == 'string' and str:match( &quot;&#94;[_%a][_%a%d]*$&quot; )&#13;&#10;end&#13;&#10;&#13;&#10;local function isSequenceKey(k, length)&#13;&#10;  return type(k) == 'number'&#13;&#10;     and 1 &lt;= k&#13;&#10;     and k &lt;= length&#13;&#10;     and math.floor(k) == k&#13;&#10;end&#13;&#10;&#13;&#10;local defaultTypeOrders = {&#13;&#10;  ['number']   = 1, ['boolean']  = 2, ['string'] = 3, ['table'] = 4,&#13;&#10;  ['function'] = 5, ['userdata'] = 6, ['thread'] = 7&#13;&#10;}&#13;&#10;&#13;&#10;local function sortKeys(a, b)&#13;&#10;  local ta, tb = type(a), type(b)&#13;&#10;&#13;&#10;  -- strings and numbers are sorted numerically/alphabetically&#13;&#10;  if ta == tb and (ta == 'string' or ta == 'number') then return a &lt; b end&#13;&#10;&#13;&#10;  local dta, dtb = defaultTypeOrders[ta], defaultTypeOrders[tb]&#13;&#10;  -- Two default types are compared according to the defaultTypeOrders table&#13;&#10;  if dta and dtb then return defaultTypeOrders[ta] &lt; defaultTypeOrders[tb]&#13;&#10;  elseif dta     then return true  -- default types before custom ones&#13;&#10;  elseif dtb     then return false -- custom types after default ones&#13;&#10;  end&#13;&#10;&#13;&#10;  -- custom types are sorted out alphabetically&#13;&#10;  return ta &lt; tb&#13;&#10;end&#13;&#10;&#13;&#10;local function getNonSequentialKeys(t)&#13;&#10;  local keys, length = {}, #t&#13;&#10;  for k,_ in pairs(t) do&#13;&#10;    if not isSequenceKey(k, length) then table.insert(keys, k) end&#13;&#10;  end&#13;&#10;  table.sort(keys, sortKeys)&#13;&#10;  return keys&#13;&#10;end&#13;&#10;&#13;&#10;local function getToStringResultSafely(t, mt)&#13;&#10;  local __tostring = type(mt) == 'table' and rawget(mt, '__tostring')&#13;&#10;  local str, ok&#13;&#10;  if type(__tostring) == 'function' then&#13;&#10;    ok, str = pcall(__tostring, t)&#13;&#10;    str = ok and str or 'error: ' .. tostring(str)&#13;&#10;  end&#13;&#10;  if type(str) == 'string' and #str &gt; 0 then return str end&#13;&#10;end&#13;&#10;&#13;&#10;local maxIdsMetaTable = {&#13;&#10;  __index = function(self, typeName)&#13;&#10;    rawset(self, typeName, 0)&#13;&#10;    return 0&#13;&#10;  end&#13;&#10;}&#13;&#10;&#13;&#10;local idsMetaTable = {&#13;&#10;  __index = function (self, typeName)&#13;&#10;    local col = setmetatable({}, {__mode = &quot;kv&quot;})&#13;&#10;    rawset(self, typeName, col)&#13;&#10;    return col&#13;&#10;  end&#13;&#10;}&#13;&#10;&#13;&#10;local function countTableAppearances(t, tableAppearances)&#13;&#10;  tableAppearances = tableAppearances or setmetatable({}, {__mode = &quot;k&quot;})&#13;&#10;&#13;&#10;  if type(t) == 'table' then&#13;&#10;    if not tableAppearances[t] then&#13;&#10;      tableAppearances[t] = 1&#13;&#10;      for k,v in pairs(t) do&#13;&#10;        countTableAppearances(k, tableAppearances)&#13;&#10;        countTableAppearances(v, tableAppearances)&#13;&#10;      end&#13;&#10;      countTableAppearances(getmetatable(t), tableAppearances)&#13;&#10;    else&#13;&#10;      tableAppearances[t] = tableAppearances[t] + 1&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  return tableAppearances&#13;&#10;end&#13;&#10;&#13;&#10;local copySequence = function(s)&#13;&#10;  local copy, len = {}, #s&#13;&#10;  for i=1, len do copy[i] = s[i] end&#13;&#10;  return copy, len&#13;&#10;end&#13;&#10;&#13;&#10;local function makePath(path, ...)&#13;&#10;  local keys = {...}&#13;&#10;  local newPath, len = copySequence(path)&#13;&#10;  for i=1, #keys do&#13;&#10;    newPath[len + i] = keys[i]&#13;&#10;  end&#13;&#10;  return newPath&#13;&#10;end&#13;&#10;&#13;&#10;local function processRecursive(process, item, path)&#13;&#10;  if item == nil then return nil end&#13;&#10;&#13;&#10;  local processed = process(item, path)&#13;&#10;  if type(processed) == 'table' then&#13;&#10;    local processedCopy = {}&#13;&#10;    local processedKey&#13;&#10;&#13;&#10;    for k,v in pairs(processed) do&#13;&#10;      processedKey = processRecursive(process, k, makePath(path, k, inspect.KEY))&#13;&#10;      if processedKey ~= nil then&#13;&#10;        processedCopy[processedKey] = processRecursive(process, v, makePath(path, processedKey))&#13;&#10;      end&#13;&#10;    end&#13;&#10;&#13;&#10;    local mt  = processRecursive(process, getmetatable(processed), makePath(path, inspect.METATABLE))&#13;&#10;    setmetatable(processedCopy, mt)&#13;&#10;    processed = processedCopy&#13;&#10;  end&#13;&#10;  return processed&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;-------------------------------------------------------------------&#13;&#10;&#13;&#10;local Inspector = {}&#13;&#10;local Inspector_mt = {__index = Inspector}&#13;&#10;&#13;&#10;function Inspector:puts(...)&#13;&#10;  local args   = {...}&#13;&#10;  local buffer = self.buffer&#13;&#10;  local len    = #buffer&#13;&#10;  for i=1, #args do&#13;&#10;    len = len + 1&#13;&#10;    buffer[len] = tostring(args[i])&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:down(f)&#13;&#10;  self.level = self.level + 1&#13;&#10;  f()&#13;&#10;  self.level = self.level - 1&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:tabify()&#13;&#10;  self:puts(self.newline, string.rep(self.indent, self.level))&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:alreadyVisited(v)&#13;&#10;  return self.ids[type(v)][v] ~= nil&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:getId(v)&#13;&#10;  local tv = type(v)&#13;&#10;  local id = self.ids[tv][v]&#13;&#10;  if not id then&#13;&#10;    id              = self.maxIds[tv] + 1&#13;&#10;    self.maxIds[tv] = id&#13;&#10;    self.ids[tv][v] = id&#13;&#10;  end&#13;&#10;  return id&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:putKey(k)&#13;&#10;  if isIdentifier(k) then return self:puts(k) end&#13;&#10;  self:puts(&quot;[&quot;)&#13;&#10;  self:putValue(k)&#13;&#10;  self:puts(&quot;]&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:putTable(t)&#13;&#10;  if t == inspect.KEY or t == inspect.METATABLE then&#13;&#10;    self:puts(tostring(t))&#13;&#10;  elseif self:alreadyVisited(t) then&#13;&#10;    self:puts('&lt;table ', self:getId(t), '&gt;')&#13;&#10;  elseif self.level &gt;= self.depth then&#13;&#10;    self:puts('{...}')&#13;&#10;  else&#13;&#10;    if self.tableAppearances[t] &gt; 1 then self:puts('&lt;', self:getId(t), '&gt;') end&#13;&#10;&#13;&#10;    local nonSequentialKeys = getNonSequentialKeys(t)&#13;&#10;    local length            = #t&#13;&#10;    local mt                = getmetatable(t)&#13;&#10;    local toStringResult    = getToStringResultSafely(t, mt)&#13;&#10;&#13;&#10;    self:puts('{')&#13;&#10;    self:down(function()&#13;&#10;      if toStringResult then&#13;&#10;        self:puts(' -- ', escape(toStringResult))&#13;&#10;        if length &gt;= 1 then self:tabify() end&#13;&#10;      end&#13;&#10;&#13;&#10;      local count = 0&#13;&#10;      for i=1, length do&#13;&#10;        if count &gt; 0 then self:puts(',') end&#13;&#10;        self:puts(' ')&#13;&#10;        self:putValue(t[i])&#13;&#10;        count = count + 1&#13;&#10;      end&#13;&#10;&#13;&#10;      for _,k in ipairs(nonSequentialKeys) do&#13;&#10;        if count &gt; 0 then self:puts(',') end&#13;&#10;        self:tabify()&#13;&#10;        self:putKey(k)&#13;&#10;        self:puts(' = ')&#13;&#10;        self:putValue(t[k])&#13;&#10;        count = count + 1&#13;&#10;      end&#13;&#10;&#13;&#10;      if mt then&#13;&#10;        if count &gt; 0 then self:puts(',') end&#13;&#10;        self:tabify()&#13;&#10;        self:puts('&lt;metatable&gt; = ')&#13;&#10;        self:putValue(mt)&#13;&#10;      end&#13;&#10;    end)&#13;&#10;&#13;&#10;    if #nonSequentialKeys &gt; 0 or mt then -- result is multi-lined. Justify closing }&#13;&#10;      self:tabify()&#13;&#10;    elseif length &gt; 0 then -- array tables have one extra space before closing }&#13;&#10;      self:puts(' ')&#13;&#10;    end&#13;&#10;&#13;&#10;    self:puts('}')&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:putValue(v)&#13;&#10;  local tv = type(v)&#13;&#10;&#13;&#10;  if tv == 'string' then&#13;&#10;    self:puts(smartQuote(escape(v)))&#13;&#10;  elseif tv == 'number' or tv == 'boolean' or tv == 'nil' then&#13;&#10;    self:puts(tostring(v))&#13;&#10;  elseif tv == 'table' then&#13;&#10;    self:putTable(v)&#13;&#10;  else&#13;&#10;    self:puts('&lt;',tv,' ',self:getId(v),'&gt;')&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;-------------------------------------------------------------------&#13;&#10;&#13;&#10;function inspect.inspect(root, options)&#13;&#10;  options       = options or {}&#13;&#10;&#13;&#10;  local depth   = options.depth   or math.huge&#13;&#10;  local newline = options.newline or '\n'&#13;&#10;  local indent  = options.indent  or '  '&#13;&#10;  local process = options.process&#13;&#10;&#13;&#10;  if process then&#13;&#10;    root = processRecursive(process, root, {})&#13;&#10;  end&#13;&#10;&#13;&#10;  local inspector = setmetatable({&#13;&#10;    depth            = depth,&#13;&#10;    buffer           = {},&#13;&#10;    level            = 0,&#13;&#10;    ids              = setmetatable({}, idsMetaTable),&#13;&#10;    maxIds           = setmetatable({}, maxIdsMetaTable),&#13;&#10;    newline          = newline,&#13;&#10;    indent           = indent,&#13;&#10;    tableAppearances = countTableAppearances(root)&#13;&#10;  }, Inspector_mt)&#13;&#10;&#13;&#10;  inspector:putValue(root)&#13;&#10;&#13;&#10;  return table.concat(inspector.buffer)&#13;&#10;end&#13;&#10;&#13;&#10;setmetatable(inspect, { __call = function(_, ...) return inspect.inspect(...) end })&#13;&#10;&#13;&#10;return inspect&#13;&#10;end&#13;&#10;&#13;&#10;inspect = getInspect()"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000006"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="panel" uuid="e2d51de57054404c983d6bd11a389909">
        <luaMethod luaMethodName="Panel_Dtb" luaMethodCode="--&#10;-- Called when the panel is created, no modulators will exist at this point&#10;-- consider this the panels constructor&#10;--&#10;Panel_Dtb = function()&#10;PITCH = { &quot;C0&quot;,&quot;C#0&quot;,&quot;D0&quot;,&quot;D#0&quot;&#13;&#10;         ,&quot;E0&quot;,&quot;F0&quot;,&quot;F#0&quot;,&quot;G0&quot;,&quot;G#0&quot;,&quot;A0&quot;,&quot;A#0&quot;,&quot;B0&quot;&#13;&#10;         ,&quot;C1&quot;,&quot;C#1&quot;,&quot;D1&quot;,&quot;D#1&quot;,&quot;E1&quot;,&quot;F1&quot;,&quot;F#1&quot;,&quot;G1&quot;&#13;&#10;         ,&quot;G#1&quot;,&quot;A1&quot;,&quot;A#1&quot;,&quot;B1&quot;,&quot;C2&quot;,&quot;C#2&quot;,&quot;D2&quot;,&quot;D#2&quot;&#13;&#10;         ,&quot;E2&quot;,&quot;F2&quot;,&quot;F#2&quot;,&quot;G2&quot;,&quot;G#2&quot;,&quot;A2&quot;,&quot;A#2&quot;,&quot;B2&quot;&#13;&#10;         ,&quot;C3&quot;,&quot;C#3&quot;,&quot;D3&quot;,&quot;D#3&quot;,&quot;E3&quot;,&quot;F3&quot;,&quot;F#3&quot;,&quot;G3&quot;&#13;&#10;         ,&quot;G#3&quot;,&quot;A3&quot;,&quot;A#3&quot;,&quot;B3&quot;,&quot;C4&quot;,&quot;C#4&quot;,&quot;D4&quot;,&quot;D#4&quot;&#13;&#10;         ,&quot;E4&quot;,&quot;F4&quot;,&quot;F#4&quot;,&quot;G4&quot;,&quot;G#4&quot;,&quot;A4&quot;,&quot;A#4&quot;,&quot;B4&quot;&#13;&#10;         ,&quot;C5&quot;,&quot;C#5&quot;,&quot;D5&quot;,&quot;D#5&quot;,&quot;E5&quot;,&quot;F5&quot;,&quot;F#5&quot;,&quot;G5&quot;&#13;&#10;         ,&quot;G#5&quot;,&quot;A5&quot;,&quot;A#5&quot;,&quot;B5&quot;,&quot;C6&quot;,&quot;C#6&quot;,&quot;D6&quot;,&quot;D#6&quot;&#13;&#10;         ,&quot;E6&quot;,&quot;F6&quot;,&quot;F#6&quot;,&quot;G6&quot;,&quot;G#6&quot;,&quot;A6&quot;,&quot;A#6&quot;,&quot;B6&quot;&#13;&#10;         ,&quot;C7&quot;,&quot;C#7&quot;,&quot;D7&quot;,&quot;D#7&quot;,&quot;E7&quot;,&quot;F7&quot;,&quot;F#7&quot;,&quot;G7&quot;&#13;&#10;         ,&quot;G#7&quot;,&quot;A7&quot;,&quot;A#7&quot;,&quot;B7&quot;,&quot;C8&quot;,&quot;C#8&quot;,&quot;D8&quot;,&quot;D#8&quot;&#13;&#10;         ,&quot;E8&quot;,&quot;F8&quot;,&quot;F#8&quot;,&quot;G8&quot;,&quot;G#8&quot;,&quot;A8&quot;,&quot;A#8&quot;,&quot;B8&quot;&#13;&#10;         ,&quot;C9&quot;,&quot;C#9&quot;,&quot;D9&quot;,&quot;D#9&quot;,&quot;E9&quot;,&quot;F9&quot;,&quot;F#9&quot;,&quot;G9&quot;&#13;&#10;         ,&quot;G#9&quot;,&quot;A9&quot;,&quot;A#9&quot;,&quot;B9&quot;,&quot;C10&quot;}                                                         &#13;&#10;panel:setPropertyInt(&quot;panelMidiPauseOut&quot;,1)                                                    &#13;&#10;synclfo = {0,0,0,0,0,0,0,0,0,2.5,5,10,15,25,35,70}                                             &#13;&#10;lfostp = {&quot;32&quot;,&quot;16&quot;,&quot;8&quot;,&quot;6&quot;,&quot;4&quot;,&quot;3&quot;,&quot;2&quot;,&quot;1,5&quot;,&quot;1&quot;,&quot;2/3&quot;,&quot;1/2&quot;,&quot;1/3&quot;,&quot;1/4&quot;,&quot;1/6&quot;,&quot;1/8&quot;,&quot;1/16&quot;}  &#13;&#10;shtxt = {&quot;Off&quot;,&quot;Saw&quot;,&quot;Tri&quot;,&quot;Tr+Sa&quot;,&quot;Pulse&quot;}                                                    &#13;&#10;sh2 = {&quot;Tri&quot;,&quot;RSaw&quot;,&quot;Saw&quot;,&quot;Sqr&quot;,&quot;Rnd&quot;}                                                         &#13;&#10;modmax = {127,254,164,120,100,  4,166,103,  5, 12,250, 24,  1,  2,  3,16}                                           &#13;&#10;m_sens = {300,500,400,400,400,300,300,300,300,300,400,300,300,300,300,300}&#13;&#10;fbmIdx = {28,29,30,31,36,37,38,39,65,66,67,68}                                                  &#13;&#10;kx = {0,64,128,192,0,64,128,192,0,64,128,192}                                               &#13;&#10;ky = {0,0,0,0,88,88,88,88,176,176,176,176}                                                      &#13;&#10;kname = {&quot;Attack&quot;,&quot;Decay&quot;,&quot;Sustain&quot;,&quot;Release&quot;}                                                    &#13;&#10;kx2 = {}                                                                                           &#13;&#10;kx2[41] = 0&#13;&#10;kx2[46] = 64&#13;&#10;kx2[51] = 128&#13;&#10;kx2[56] = 192&#13;&#10;kx2[71] = 0&#13;&#10;kx2[74] = 64&#13;&#10;kx2[77] = 128&#13;&#10;kx2[80] = 192&#13;&#10;MQ9t = &quot;MQ9 LiquidCrystalText&quot;              &#13;&#10;cmbText  = Font (10, Font.plain)                &#13;&#10;cmbText:setTypefaceName(MQ9t)                   &#13;&#10;Shapetxt  = Font (9, Font.bold)&#13;&#10;Shapetxt:setTypefaceName(MQ9t)&#13;&#10;StText  = Font (9, Font.plain)&#13;&#10;StText:setTypefaceName(MQ9t)&#13;&#10;Shapetxt2 = Font (14, Font.bold)&#13;&#10;Shapetxt2:setTypefaceName(MQ9t)&#13;&#10;lfrqf =  Font (8, Font.bold)&#13;&#10;lfrqf:setTypefaceName(MQ9t)&#13;&#10;lfrqf2 =  Font (16, Font.plain)&#13;&#10;lfrqf2:setTypefaceName(MQ9t)&#13;&#10;fbtxt = Font (10, Font.bold)&#13;&#10;fbtxt:setTypefaceName(MQ9t)&#13;&#10;prtxt =  Font (12, Font.plain)      &#13;&#10;prtxt:setTypefaceName(MQ9t)&#13;&#10;LOGO = Font(18.0,1)&#13;&#10;LOGO:setHorizontalScale(0.87)&#13;&#10;cLED = Colour(0xFF15CACA) &#13;&#10;cBLK = Colour(0xFF000000)&#13;&#10;cORA = Colour(0xFFFFAE44)&#13;&#10;cEMB = Colour(0x10F6F6F6)&#13;&#10;cYEL = Colour(0xFFFFDB44)&#13;&#10;BLANK = Colour(0x00000000)&#13;&#10;cGR1 = Colour(0x70000000)&#13;&#10;cGR2 = Colour(0x30000000)&#13;&#10;cGR3 = Colour(0xEAFFFFFF)&#13;&#10;cGR4 = Colour(0xABFFFFFF)&#13;&#10;cGR5 = Colour(0xFF3D444A)&#13;&#10;cGR6 = Colour(0xFF212425)&#13;&#10;cGR7 = Colour(0x38FFFFFF)&#13;&#10;cGR8 = Colour(0x69FFFFFF)&#13;&#10;cGR9 = Colour(0x30FFFFFF)                   &#13;&#10;SQctlrs = {{a = &quot;Seq&quot;,b = &quot;Trigger&quot;},{a = &quot;BPM&quot;,b = &quot;Clock&quot;},{a = &quot;Arp&quot;,b = &quot;Mode&quot;}}&#13;&#10;SEQpos = {{a = &quot;Seq&quot;,b = 0,c = 0},{a = &quot;Synth&quot;,b = 84,c = 504}} --TK&#13;&#10;NAME1 = {{a = &quot;4 Poles&quot;,b = 16,c = 256},{a = &quot;Envelope&quot;,b = 20,c = 358},{a = &quot;Delay&quot;,b = 20,c = 370},{a = &quot;Cutoff&quot;,b = 96,c = 256},          &#13;&#10;         {a = &quot;Envelope&quot;,b = 96,c = 358},{a = &quot;Amount&quot;,b = 96,c = 370},{a = &quot;Resonance&quot;,b = 176,c = 256},{a = &quot;Attack&quot;,b = 176,c = 360}, &#13;&#10;         {a = &quot;Keyboard&quot;,b = 256,c = 254},{a = &quot;Amount&quot;,b = 256,c = 266},{a = &quot;Decay&quot;,b = 256,c = 360},{a = &quot;Audio&quot;,b = 336,c = 254},&#13;&#10;         {a = &quot;Mod&quot;,b = 336,c = 266},{a = &quot;Sustain&quot;,b = 336,c = 360},{a = &quot;Velocity&quot;,b = 416,c = 254},{a = &quot;Amount&quot;,b = 416,c = 266},&#13;&#10;         {a = &quot;Release&quot;,b = 416,c = 360}} &#13;&#10;NAME2 = {{a = &quot;Velocity&quot;,b = 512,c = 302},{a = &quot;Amount&quot;,b = 512,c = 314},{a = &quot;Initial&quot;,b = 592,c = 254},{a = &quot;Level&quot;,b = 592,c = 266},          &#13;&#10;         {a = &quot;Attack&quot;,b = 592,c = 360},{a = &quot;Voice&quot;,b = 672,c = 254},{a = &quot;Volume&quot;,b = 672,c = 266},{a = &quot;Decay&quot;,b = 672,c = 360}, &#13;&#10;         {a = &quot;Envelope&quot;,b = 752,c = 254},{a = &quot;Delay&quot;,b = 752,c = 266},{a = &quot;Sustain&quot;,b = 752,c = 360},{a = &quot;Envelope&quot;,b = 832,c = 254},&#13;&#10;         {a = &quot;Amount&quot;,b = 832,c = 266},{a = &quot;Release&quot;,b = 832,c = 360}} &#13;&#10;NAME3 = {{a = &quot;Velocity&quot;,b = 928,c = 302},{a = &quot;Amount&quot;,b = 928,c = 314},{a = &quot;Attack&quot;,b = 1008,c = 256},{a = &quot;Delay&quot;,b = 1008,c = 360},          &#13;&#10;         {a = &quot;Decay&quot;,b = 1088,c = 256},{a = &quot;Amount&quot;,b = 1088,c = 360},{a = &quot;Sustain&quot;,b = 1168,c = 256},{a = &quot;Destination&quot;,b = 1168,c = 360}, &#13;&#10;         {a = &quot;Release&quot;,b = 1248,c = 256},{a = &quot;Repeat&quot;,b = 1248,c = 360}} &#13;&#10;NAME4 = {{a = &quot;Osc&quot;,b = &quot;Slope&quot;,c = 238},{a = &quot;Bend&quot;,b = &quot;Range&quot;,c = 342},{a = &quot;Key Assign&quot;,b = &quot;Mode&quot;,c = 468},&#13;&#10;         {a = &quot;Glide&quot;,b = &quot;Mode&quot;,c = 552},{a = &quot;Noise&quot;,b = &quot;Level&quot;,c = 654},{a = &quot;Input&quot;,b = &quot;Level&quot;,c = 758}}&#13;&#10;CmnNm1 = {{a = &quot;Master&quot;,b = &quot;Transpose&quot; },{a = &quot;Master&quot;,b = &quot;Fine Tune&quot; },{a = &quot;Audio&quot;,b = &quot;Out&quot; }}&#13;&#10;CmnNm2 = {&quot;Velocity&quot;,&quot;Mode&quot;,&quot;Note&quot;}&#13;&#10;CmnNm3 = {}&#13;&#10;CmnNm3[1] = {a = &quot;MIDI&quot;,b = &quot;Channel&quot;}  &#13;&#10;CmnNm3[2] = {a = &quot;Sysex&quot;}&#13;&#10;CmnNm3[3] = {a = &quot;NRPN&quot;}&#13;&#10;CmnNm3[4] = {a = &quot;Parameter&quot;,b = &quot;Receive&quot;}&#13;&#10;CmnNm3[5] = {a = &quot;Parameter&quot;,b = &quot;Send&quot;}&#13;&#10;CmnNm3[8] = {a = &quot;MIDI&quot;,b = &quot;THRU&quot;}&#13;&#10;KAnm = {&quot;Low&quot;,&quot;High&quot;,&quot;Last&quot;} &#13;&#10;GLnm = {&quot;Fix.Rate&quot;,&quot;Fix.Time&quot;} &#13;&#10;sqrcts = {{a = 10,b = 26},{a= 594,b = 26},{a = 10,b = 402},{a = 594,b = 402}} &#13;&#10;CbBg1 = Rectangle(72,32) &#13;&#10;CbBg2 = Rectangle(70,31)&#13;&#10;CENTRE = Justification(Justification.centred)&#13;&#10;GAUCHE = Justification(Justification.left)&#13;&#10;Rct1x = {1168,24,288,552,816,184,448,712,976 ,1248,416,992,416,992}&#13;&#10;Rct1y = {320,448,448,448,448,448,448,448,448  ,448,584,584,720,720}&#13;&#10;Rct2x = {10,762,666,10,506,922,10,274,538,802,1066,10,586,10,586, 1338}&#13;&#10;Rct2y = {26,26,42,162,162,162,402,402,402,402,402,530,530,666,666,162}&#13;&#10;Rct3x = {17,769,17,593,17,593,256,832,256,832,1369,1369}&#13;&#10;Rct3y = {49,49,553,553,689,689,559,559,695,695,377,503}&#13;&#10;GrpBg = {} &#13;&#10;GrpBg[1] = Rectangle(644,124) &#13;&#10;GrpBg[2] = Rectangle(714,124)&#13;&#10;GrpBg[3] = Rectangle(84,108)&#13;&#10;GrpBg[4] = Rectangle(484,228)&#13;&#10;BTNr = Rectangle(56,32)&#13;&#10;LEDr = Rectangle(22,5)&#13;&#10;LED2r = Rectangle(18,5)&#13;&#10;embrects = {{a=584,b=81},{a=1336,b=81},{a=1408,b=81},{a=24,b=217},{a=1256,b=321},{a=504,b=585},{a=504,b=721},{a=1080,b=585},{a=1080,b=721}}&#13;&#10;GRADI1 = {{a = 1168,b = 328,c = 350},{a = 96,b = 456,c = 483},{a = 360,b = 456,c = 483},{a = 624,b = 456,c = 483},{a = 888,b = 456,c = 483},&#13;&#10;          {a = 186,b = 456,c = 483},{a = 450,b = 456,c = 483},{a = 714,b = 456,c = 483},{a = 978,b = 456,c = 483},{a = 1244,b = 456,c = 483},&#13;&#10;          {a = 416,b = 592,c = 619},{a = 992,b = 592,c = 619},{a = 416,b = 728,c = 755},{a = 992,b = 728,c = 755}}&#13;&#10;MdulNmes = {&quot;OSCILLATOR 1&quot;,&quot;OSCILLATOR 2&quot;,nil,&quot;LOW-PASS FILTER&quot;,&quot;VCA&quot;,&quot;ENVELOPE 3&quot;,&quot;MODULATOR 1&quot;,&quot;MODULATOR 2&quot;,&quot;MODULATOR 3&quot;,&quot;MODULATOR 4&quot;,&quot;CONTROL&quot;,&quot;LFO 1&quot;,&quot;LFO 2&quot;,&quot;LFO 3&quot;,&quot;LFO 4&quot;}&#13;&#10;ctrlNam = { &quot;ModWheel&quot;,&quot;Pressure&quot;,&quot;Velocity&quot;,&quot;Foot&quot;,&quot;Breath&quot;}&#13;&#10;clktxt = {&quot;1/2&quot;,&quot;1/4&quot;,&quot;1/8&quot;,&quot;1/8&quot;,&quot;1/8&quot;,&quot;1/8 T&quot;,&quot;1/16&quot;,&quot;1/16&quot;,&quot;1/16&quot;,&quot;1/16 T&quot;,&quot;1/32&quot;,&quot;1/32 T&quot;,&quot;1/64 T&quot;}&#13;&#10;trgtxt = {&quot;Normal&quot;,&quot;Normal&quot;,&quot;No Gate&quot;,&quot;No Gate&quot;,&quot;Key Step&quot;,&quot;Audio In&quot;}&#13;&#10;OthBg = {}&#13;&#10;for k = 1,2 do&#13;&#10;OthBg[k] = Rectangle(230,90)&#13;&#10;end&#13;&#10;for l = 3,6 do&#13;&#10;OthBg[l] = Rectangle(152,90)&#13;&#10;end&#13;&#10;for m = 7,10 do&#13;&#10;OthBg[m] = Rectangle(71,60)&#13;&#10;end&#13;&#10;OthBg[11] = Rectangle(70,91)&#13;&#10;OthBg[12] = Rectangle(70,49)&#13;&#10;&#13;&#10;for r = 5,6 do &#13;&#10;GrpBg[r] = Rectangle(404,228)&#13;&#10;end&#13;&#10;for s = 7,10 do&#13;&#10;GrpBg[s] = Rectangle(252,116)&#13;&#10;end&#13;&#10;GrpBg[11] = Rectangle(260,116)&#13;&#10;for t = 12,15 do&#13;&#10;GrpBg[t] = Rectangle(564,124)&#13;&#10;end&#13;&#10;GrpBg[16] = Rectangle(130,628)&#13;&#10;--program&#13;&#10;prc1 = Rectangle(1034,832,128,16)&#13;&#10;prc2 = Rectangle(1104,832,128,16)&#13;&#10;prc3 = Rectangle(1016,824,216,62)&#13;&#10;--knob&#13;&#10;KNBPROP = {25.9,52.0,33.1,24.7,20.3}&#13;&#10;KNBPROP[9]  = 1.02 &#13;&#10;KNBPROP[10] = 2.45&#13;&#10;cKN1 = Colour(0xFF7F7F7F)&#13;&#10;cKN2 = Colour(0x20FFFFFF)&#13;&#10;cKN3 = Colour(0x60000000)&#13;&#10;cKN4 = Colour(0x18FFFFFF)&#13;&#10;GRD1 = ColourGradient(Colour(0x37000000),36,0, Colour(0xFF000000),36,36, true)&#13;&#10;GRD2 = ColourGradient(Colour(0x60FFFFFF),36,0, Colour(0x00000000),36,36, true)&#13;&#10;GRD3 = ColourGradient(Colour(0x30000000),36,72, Colour(0x00000000),36,36, true)&#13;&#10;linpath = Path()&#13;&#10;linpath:addRectangle(31,3,10,13) &#13;&#10;linpath2 = Path()&#13;&#10;linpath2:addRectangle(31,3,10,6)&#13;&#10;linpath3 = Path()&#13;&#10;linpath3:addRectangle(31,3,10,1.5)&#13;&#10;fatpath = Path()&#13;&#10;fatpath:startNewSubPath( 36,36) &#13;&#10;fatpath:addArc(0,0,72,72, - 1.05,1.05 ,false )&#13;&#10;fatpath:closeSubPath()&#13;&#10;fatpath:startNewSubPath( 36,36) &#13;&#10;fatpath:addArc(0,0,72,72, - 2.30,- 1.35 ,false )&#13;&#10;fatpath:closeSubPath()&#13;&#10;fatpath:startNewSubPath( 36,36) &#13;&#10;fatpath:addArc(0,0,72,72,  1.35,2.30 ,false )&#13;&#10;fatpath:closeSubPath()&#13;&#10;fatpath:startNewSubPath( 36,36) &#13;&#10;fatpath:addArc(0,0,72,72, - 2.625, - 3.675 ,false )&#13;&#10;fatpath:closeSubPath()&#13;&#10;end"
                   luaMethodLinkedProperty="luaPanelBeforeLoad" luaMethodSource="0"
                   uuid="ae735daf526d4e9aa8a55749a2e3169e" luaMethodValid="1"/>
        <luaMethod luaMethodName="Starting" luaMethodCode="--&#10;-- Called when the panel has finished loading&#10;--&#10;Starting = function()&#10;function RestMidCallback(timerId)&#13;&#10;           if timer:isTimerRunning(1) &#13;&#10;         then timer:stopTimer(1)&#13;&#10;          end&#13;&#10;         panel:setPropertyInt(&quot;panelMidiPauseOut&quot;,0)&#13;&#10;          for r = 14,15 &#13;&#10;           do t = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,r):getComponent()&#13;&#10;              t:setPropertyInt(&quot;uiButtonTriggerOnMouseDown&quot;,1)                  &#13;&#10;          end    &#13;&#10;         lf = LookAndFeel()&#13;&#10;&#9;&#9; lf:setImplementation (lookAndFeelImpl)&#13;&#10;         for m = 0,91 &#13;&#10;          do o = panel:getModulatorWithProperty(&quot;vstIndex&quot;,m):getComponent()&#13;&#10;             e = o:getProperty(&quot;uiType&quot;)&#13;&#10;             if e  == &quot;uiSlider&quot;&#13;&#10;&#9;  &#9;   then o:setCustomLookAndFeel(lf)&#13;&#10;            end&#13;&#10;         end        &#13;&#10;     end&#13;&#10;     -- Repair &quot;trigger buttons&quot; :) &#13;&#10;     for i = 14,15 &#13;&#10;      do s = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,i):getComponent()&#13;&#10;         s:setPropertyInt(&quot;uiButtonTriggerOnMouseDown&quot;,0)                  &#13;&#10;     end     &#13;&#10;     -- Prevent &quot;out of range&quot; values for customcomp (happening when other panels are open ! ) TO REBUILT &#167;&#167;&#13;&#10;    for u = 0,183  &#13;&#10;     do n = panel:getModulatorWithProperty(&quot;vstIndex&quot;,u):getProperty(&quot;modulatorCustomIndexGroup&quot;)      &#13;&#10;             for v = 1,16 &#13;&#10;              do &#13;&#10;                 if  string.format(&quot;%s&quot;,n) == string.format(&quot;%s&quot;,v)&#13;&#10;               then  h = panel:getModulatorWithProperty(&quot;vstIndex&quot;,u):getValue()&#13;&#10;                     console(string.format(&quot;VST%s&quot;,u))&#13;&#10;                     console(string.format(&quot;val%s&quot;,h))&#13;&#10;                       if h &gt; modmax[v]&#13;&#10;                     then panel:getModulatorWithProperty(&quot;vstIndex&quot;,u):setModulatorValue(modmax[v],false,false,false)&#13;&#10;                          console(&quot;Changed !&quot;)&#13;&#10;                   end&#13;&#10;                     panel:getModulatorWithProperty(&quot;vstIndex&quot;,u):setPropertyInt(&quot;modulatorMax&quot;,modmax[v])&#13;&#10;                end&#13;&#10;             end&#13;&#10;     end&#13;&#10; &#13;&#10;         timer:setCallback (1,RestMidCallback)&#13;&#10;         timer:startTimer(1,1000)&#13;&#10;end"
                   luaMethodLinkedProperty="luaPanelLoaded" luaMethodSource="0"
                   uuid="fd5cedc554464a89adafab2860181765" luaMethodValid="1"/>
        <luaMethod luaMethodName="MIDIrec" luaMethodCode="--&#10;-- Called when a panel receives a midi message (does not need to match any modulator mask)&#10;-- @midi   CtrlrMidiMessage object&#10;--&#10;&#10;MIDIrec = function( midi)&#10; local MIDdta = midi:getLuaData()&#13;&#10; local PC = MIDdta:getByte(0) &#13;&#10;    if PC == 192  &#13;&#10;  then local pcVal =  MIDdta:getByte(1) &#13;&#10;       panel:setPropertyInt(&quot;panelMidiProgram&quot;,pcVal)&#13;&#10;       panel:getCanvas():repaint()&#13;&#10;   end&#13;&#10;    if PC == 240&#13;&#10;  then if MIDdta:getByte(1) == 1&#13;&#10;     then if MIDdta:getByte(2) ==  37 &#13;&#10;        then if MIDdta:getByte(3) == 3&#13;&#10;           then  local Read = utils.unpackDsiData (MIDdta:getRange(4,293))&#13;&#10;                 panel:setPropertyInt(&quot;panelMidiPauseOut&quot;,1) &#13;&#10;                 for t = 1,104 &#13;&#10;                  do panel:getModulatorWithProperty(&quot;vstIndex&quot;,t):setModulatorValue( Read:getByte(t),false,false,false)  &#13;&#10;                 end&#13;&#10;                 for t = 120,183&#13;&#10;                  do panel:getModulatorWithProperty(&quot;vstIndex&quot;,t-15):setModulatorValue( Read:getByte(t),false,false,false)&#13;&#10;                 end&#13;&#10;                 panel:setPropertyInt(&quot;panelMidiPauseOut&quot;,0) &#13;&#10;                 pnEdit = &quot;&quot;..Read:getRange(184,16):toString()&#13;&#10;                 panel:getCanvas():repaint()&#13;&#10;                 panel:getModulatorWithProperty(&quot;vstIndex&quot;,0):setModulatorValue( Read:getByte(0),false,false,false)&#13;&#10;            end&#13;&#10;         end&#13;&#10;      end&#13;&#10;   end&#13;&#10;&#13;&#10;---0,7,15,23,31,39,47,55,63,71,79,87,95,&#13;&#10;end"
                   luaMethodLinkedProperty="luaPanelMidiReceived" luaMethodSource="0"
                   uuid="d72d38d987f74aa483b9b4af0a91c7bc" luaMethodValid="1"/>
        <luaMethod luaMethodName="viewbtn" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;viewbtn = function(mod, value)&#10;panel:getCanvas():repaint()&#13;&#10;V1B = value + 1&#13;&#10;mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;,SEQpos[V1B].a)&#13;&#10;panel:getComponent(&quot;LED12&quot;):setTopLeftPosition(1176 + SEQpos[V1B].b,512 - SEQpos[V1B].c)&#13;&#10;panel:getComponent(&quot;gatedSeq&quot;):setTopLeftPosition(1176 + SEQpos[V1B].b,560 - SEQpos[V1B].c)&#13;&#10;panel:getComponent(&quot;seqTrigger&quot;):setTopLeftPosition(1248 + SEQpos[V1B].b,560 - SEQpos[V1B].c)&#13;&#10;panel:getComponent(&quot;bpmTempo&quot;):setTopLeftPosition(1168 + SEQpos[V1B].b,632 - SEQpos[V1B].c)&#13;&#10;panel:getComponent(&quot;clockDivide&quot;):setTopLeftPosition(1248 + SEQpos[V1B].b,632 - SEQpos[V1B].c)&#13;&#10;panel:getComponent(&quot;LED13&quot;):setTopLeftPosition(1176 + SEQpos[V1B].b,672 - SEQpos[V1B].c)&#13;&#10;panel:getComponent(&quot;arpOffOn&quot;):setTopLeftPosition(1176 + SEQpos[V1B].b,720 - SEQpos[V1B].c) &#13;&#10;panel:getComponent(&quot;arpeggiatorMode&quot;):setTopLeftPosition(1248 + SEQpos[V1B].b,720 - SEQpos[V1B].c)&#13;&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="ba5137c222c8437cb4630f3e99d16e19" luaMethodValid="1"/>
        <luaMethod luaMethodName="view2btn" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;view2btn = function(mod, value)&#10;    if value == 0 then  V2B = &quot;Push It!&quot;&#13;&#10;elseif value == 1 then  V2B = &quot;Global&quot;&#13;&#10;   end &#13;&#10;mod:getComponent():setPropertyString(&quot;componentVisibleName&quot;,V2B)&#13;&#10;end&#13;&#10;"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="c9cbad661d96466d83c1c0555febea07" luaMethodValid="1"/>
        <luaMethod luaMethodName="NewPanelPaint" luaMethodCode="--&#10;-- Called when the panel background needs repainting&#10;--&#10;&#10;NewPanelPaint = function(canvas,g)&#10;fond = panel:getModulatorByName(&quot;View&quot;):getValue()&#13;&#10;PIGLB = panel:getModulatorByName(&quot;GlbSelect&quot;):getValue()&#13;&#10;g:setColour(cYEL)&#13;&#10;g:fillRect(0,0,1484,906)&#13;&#10;&#13;&#10;    if fond == 0 &#13;&#10;  then g:setColour(cORA)&#13;&#10;       g:fillEllipse(643,20,128,128)&#13;&#10;       g:setFont(Font(14.0,1)) &#13;&#10;       for j = 0,16  &#13;&#10;        do g:drawEllipse (627 -(j*(j*32)/2),4 - ((j*(j*32))/2),160+(j*(j*32))+(j*6),160+(j*(j*32)),16+(j*14)) -- :D &#13;&#10;       end&#13;&#10;    -- group backgrounds&#13;&#10;       for i = 1,16  &#13;&#10;        do g:setGradientFill(ColourGradient(cGR5,Rct2x[i]+ (GrpBg[i]:getWidth()/2) ,Rct2y[i]+ (GrpBg[i]:getHeight()/2) ,cGR6,Rct2x[i]+ (GrpBg[i]:getWidth()/2),Rct2y[i] - 80, true)) &#13;&#10;           GrpBg[i]:setPosition(Rct2x[i],Rct2y[i])&#13;&#10;           g:fillRoundedRectangle(GrpBg[i]:toFloat(),2.0)&#13;&#10;           NWi1 = GrpBg[i]:getWidth() - 2&#13;&#10;           NHe1 = GrpBg[i]:getHeight() - 2&#13;&#10;           OutR1 = Rectangle(NWi1 ,NHe1)       &#13;&#10;           NWi2 = GrpBg[i]:getWidth() + 2&#13;&#10;           NHe2 = GrpBg[i]:getHeight() + 2&#13;&#10;           OutR2 = Rectangle(NWi2 ,NHe2) &#13;&#10;           OutR1:setPosition(Rct2x[i]+1,Rct2y[i]+1)       &#13;&#10;           g:setGradientFill(ColourGradient(cGR1,Rct2x[i]+ (GrpBg[i]:getWidth()/2) ,Rct2y[i],cGR2,Rct2x[i]+ (GrpBg[i]:getWidth()/2),Rct2y[i]+ GrpBg[i]:getHeight(),false))           &#13;&#10;           g:drawRoundedRectangle(OutR1:toFloat(),2.0,1.0)&#13;&#10;           OutR2:setPosition(Rct2x[i]-1,Rct2y[i]-1)       &#13;&#10;           g:setGradientFill(ColourGradient(cGR7,Rct2x[i]+ (GrpBg[i]:getWidth()/2) ,Rct2y[i],cGR8,Rct2x[i]+ (GrpBg[i]:getWidth()/2),Rct2y[i]+ GrpBg[i]:getHeight(),false))           &#13;&#10;           g:drawRoundedRectangle(OutR2:toFloat(),2.0,2.0)&#13;&#10;           g:setGradientFill(ColourGradient(cGR3,Rct2x[i]+ (GrpBg[i]:getWidth()/2) ,Rct2y[i]+ (GrpBg[i]:getHeight()/2) ,cGR4,Rct2x[i]+ (GrpBg[i]:getWidth()/2),Rct2y[i] - 80, true)) &#13;&#10;           -- texts&#13;&#10;           g:setFont(Font(14.0,1))&#13;&#10;            if MdulNmes[i] ~= nil  &#13;&#10;          then g:drawText(MdulNmes[i],Rct2x[i]+8,Rct2y[i]+2,128,16,GAUCHE,false)&#13;&#10;           end&#13;&#10;           g:setFont(Font(12.0,1))&#13;&#10;            if i == 1 or i == 2  &#13;&#10;          then if i == 1 &#13;&#10;             then j = 0&#13;&#10;             else j = 752 &#13;&#10;                  g:drawText(&quot;Osc1 Sync&quot;,1388,120,96,16,CENTRE,false)&#13;&#10;              end          &#13;&#10;               g:drawText(&quot;Frequency&quot;,j+244,120,96,16,CENTRE,false)&#13;&#10;               g:drawText(&quot;Fine&quot;,j+ 324,120,96,16,CENTRE,false)&#13;&#10;               g:drawText(&quot;Glide&quot;,j+ 404,120,96,16,CENTRE,false)&#13;&#10;               g:drawText(&quot;Sub&quot;,j+ 484,120,96,16,CENTRE,false)&#13;&#10;               g:drawText(&quot;Keyboard&quot;,j+ 564,120,96,16,CENTRE,false)&#13;&#10;        elseif i == 3&#13;&#10;          then g:drawText(&quot;&lt;-Mix-&gt;&quot;,672,120,72,16,CENTRE,false)&#13;&#10;        elseif i == 4&#13;&#10;          then for l = 1,17 &#13;&#10;                do g:drawText(NAME1[l].a,NAME1[l].b,NAME1[l].c,72,16,CENTRE,false)&#13;&#10;               end         &#13;&#10;        elseif i == 5&#13;&#10;          then for m = 1,14 &#13;&#10;                do g:drawText(NAME2[m].a,NAME2[m].b,NAME2[m].c,72,16,CENTRE,false)&#13;&#10;               end&#13;&#10;        elseif i == 6&#13;&#10;          then for n = 1,10 &#13;&#10;                do g:drawText(NAME3[n].a,NAME3[n].b,NAME3[n].c,72,16,CENTRE,false)&#13;&#10;               end&#13;&#10;        elseif i == 7 or i == 8 or i == 9 or i == 10 or i == 11&#13;&#10;          then if i == 11 &#13;&#10;             then v = 8&#13;&#10;                  for q = 0,4&#13;&#10;                   do g:drawText(ctrlNam[q+1],1065,424+(q*16),128,16,CENTRE,false)&#13;&#10;                  end&#13;&#10;             else v = 0&#13;&#10;                  g:drawText(&quot;Source&quot;,((i - 7)*264) - 4,488,128,16,CENTRE,false)&#13;&#10;              end&#13;&#10;               g:drawText(&quot;Amount&quot;,((i - 7)*264)+76 + v,488,128,16,CENTRE,false)&#13;&#10;               g:drawText(&quot;Destination&quot;,((i - 7)*264)+156 + v,488,128,16,CENTRE,false)&#13;&#10;        elseif i == 12 or i == 13 or i == 14 or i == 15&#13;&#10;          then g:drawText(&quot;Frequency&quot;,Rct2x[i]+178,Rct2y[i]+94,128,16,CENTRE,false)&#13;&#10;               g:drawText(&quot;Amount&quot;,Rct2x[i]+298,Rct2y[i]+94,128,16,CENTRE,false)&#13;&#10;               g:drawText(&quot;Destination&quot;,Rct2x[i]+378,Rct2y[i]+94,128,16,CENTRE,false)&#13;&#10;               g:drawText(&quot;Key Sync&quot;,Rct2x[i]+457,Rct2y[i]+94,128,16,CENTRE,false)&#13;&#10;        elseif i == 16&#13;&#10;          then for z = 1,6 &#13;&#10;                do g:drawText(NAME4[z].a,1340,NAME4[z].c,128,16,CENTRE,false)&#13;&#10;                   g:drawText(NAME4[z].b,1340,NAME4[z].c + 12,128,16,CENTRE,false)&#13;&#10;               end&#13;&#10;           end&#13;&#10;       end&#13;&#10;   -- combo backgrounds&#13;&#10;       for z = 1,14 do  &#13;&#10;           g:setColour(cEMB)&#13;&#10;           CbBg1:setPosition(Rct1x[z],Rct1y[z]+1)&#13;&#10;           g:drawRoundedRectangle(CbBg1:toFloat(),2.0,1.0)&#13;&#10;           g:setColour(cBLK)&#13;&#10;           CbBg2:setPosition(Rct1x[z]+1,Rct1y[z]+1)&#13;&#10;           g:fillRoundedRectangle(CbBg2:toFloat(),2.0)&#13;&#10;           g:setGradientFill(  ColourGradient(cGR9,GRADI1[z].a,GRADI1[z].b,BLANK ,GRADI1[z].a,GRADI1[z].c, true))&#13;&#10;           g:fillRoundedRectangle(Rct1x[z]+2,Rct1y[z]+2,CbBg2:getWidth()-2,CbBg2:getHeight()-2,1.0)&#13;&#10;           g:setGradientFill(  ColourGradient(cGR9,GRADI1[z].a,GRADI1[z].b,BLANK ,GRADI1[z].a,GRADI1[z].c+100, true))&#13;&#10;           g:drawRoundedRectangle(Rct1x[z]+2,Rct1y[z]+2,CbBg2:getWidth()-2,CbBg2:getHeight()-2,1.0,1.0)&#13;&#10;       end&#13;&#10;   -- others backgrounds&#13;&#10;      for w = 1,12  &#13;&#10;       do  g:setColour(cBLK)&#13;&#10;           OthBg[w]:setPosition(Rct3x[w],Rct3y[w])&#13;&#10;           g:fillRoundedRectangle(OthBg[w]:toFloat(),2.0)   &#13;&#10;           g:setColour(cEMB)&#13;&#10;           g:drawRoundedRectangle(Rct3x[w]-1,Rct3y[w],OthBg[w]:getWidth()+2,OthBg[w]:getHeight()+1,2.0,1.0)&#13;&#10;       end&#13;&#10;   -- led btn border emboss&#13;&#10;       for s = 1,9  &#13;&#10;        do BTNr:setPosition(embrects[s].a,embrects[s].b)&#13;&#10;           LEDr:setPosition(embrects[s].a+17,embrects[s].b - 14)&#13;&#10;           g:drawRoundedRectangle(BTNr:toFloat(),3.0,1.0)&#13;&#10;           g:drawRoundedRectangle(LEDr:toFloat(),1.0,1.0)&#13;&#10;       end&#13;&#10;       for t = 0,4&#13;&#10;        do LED2r:setPosition(1073,431+(t*16))&#13;&#10;           g:drawRoundedRectangle(LED2r:toFloat(),1.0,1.0)&#13;&#10;       end&#13;&#10;elseif fond == 1 &#13;&#10;  then g:setColour(cORA)&#13;&#10;        g:fillEllipse(520,328,128,128)&#13;&#10;        g:setFont(Font(14.0,1)) &#13;&#10;        for j = 0,16  &#13;&#10;         do g:drawEllipse (504 -(j*(j*32)/2),312 - ((j*(j*32))/2),160+(j*(j*32))+(j*6),160+(j*(j*32)),16+(j*14))&#13;&#10;        end&#13;&#10;        for m = 1,4 &#13;&#10;         do g:setGradientFill(ColourGradient(cGR5,sqrcts[m].a + 248,sqrcts[m].b + 179,cGR6,sqrcts[m].a + 248,sqrcts[m].b + 388, true))  &#13;&#10;            g:fillRoundedRectangle(sqrcts[m].a,sqrcts[m].b,566,358,2.0)&#13;&#10;            g:setGradientFill(ColourGradient(cGR1,sqrcts[m].a +233,sqrcts[m].b,cGR2,sqrcts[m].a +233,sqrcts[m].b + 566,false))&#13;&#10;            g:drawRoundedRectangle(sqrcts[m].a + 1,sqrcts[m].b + 1,564,356,2.0,1.0)&#13;&#10;            g:setGradientFill(ColourGradient(cGR7,sqrcts[m].a +233,sqrcts[m].b,cGR8,sqrcts[m].a +233,sqrcts[m].b + 566,false))  &#13;&#10;            g:drawRoundedRectangle(sqrcts[m].a - 1,sqrcts[m].b - 1,568,360,2.0,2.0)&#13;&#10;            g:setColour(cEMB)&#13;&#10;            CbBg1:setPosition(sqrcts[m].a + 482,sqrcts[m].b +259)&#13;&#10;            g:drawRoundedRectangle(CbBg1:toFloat(),2.0,1.0)&#13;&#10;            g:drawRoundedRectangle(sqrcts[m].a + 10,sqrcts[m].b + 23,460,326,2.0,1.0)&#13;&#10;            g:setColour(cBLK)&#13;&#10;            CbBg2:setPosition(sqrcts[m].a + 483,sqrcts[m].b +259)&#13;&#10;            g:fillRoundedRectangle(CbBg2:toFloat(),2.0)&#13;&#10;            g:fillRoundedRectangle(sqrcts[m].a + 10,sqrcts[m].b + 22,460,326,2.0)&#13;&#10;            g:setGradientFill(ColourGradient(cGR9,sqrcts[m].a + 484,sqrcts[m].b +260+8,BLANK,sqrcts[m].a + 484+16,sqrcts[m].b +260+8, true))&#13;&#10;            g:fillRoundedRectangle(sqrcts[m].a + 484,sqrcts[m].b +260,CbBg2:getWidth()-2,CbBg2:getHeight()-2,1.0)&#13;&#10;            g:setGradientFill(ColourGradient(cGR9,sqrcts[m].a + 484,sqrcts[m].b +260+8,BLANK,sqrcts[m].a + 484+124,sqrcts[m].b +260+8, true))&#13;&#10;            g:drawRoundedRectangle(sqrcts[m].a + 484,sqrcts[m].b +260,CbBg2:getWidth()-2,CbBg2:getHeight()-2,1.0,1.0)&#13;&#10;            g:setGradientFill(ColourGradient(cGR3,sqrcts[m].a + 248,sqrcts[m].b + 179,cGR4,sqrcts[m].a + 248,sqrcts[m].b + 358, true)) &#13;&#10;            g:setFont(Font(12.0,1))&#13;&#10;            g:drawText(&quot;Destination&quot;,sqrcts[m].a + 486,sqrcts[m].b +298,128,16,GAUCHE,false)&#13;&#10;            g:setFont(Font(14.0,1))&#13;&#10;            g:drawText(&quot;SEQUENCER &quot;..m,sqrcts[m].a + 8,sqrcts[m].b + 2,128,16,GAUCHE,false)  &#13;&#10;        end&#13;&#10;        g:setGradientFill(ColourGradient(cGR5,1329,531,cGR6,1524,531, true))  &#13;&#10;        g:fillRoundedRectangle(1184,302,290,458,2.0)&#13;&#10;        g:setGradientFill(ColourGradient(cGR1,1329,456,cGR2,1329,758,false))&#13;&#10;        g:drawRoundedRectangle(1185,303,288,456,2.0,1.0)&#13;&#10;        g:setGradientFill(ColourGradient(cGR7,1329,456,cGR8,1329,758,false))  &#13;&#10;        g:drawRoundedRectangle(1183,301,292,460,2.0,2.0)&#13;&#10;        g:setGradientFill(ColourGradient(cGR3,1329,531,cGR4,1524,531, true)) &#13;&#10;        g:setFont(Font(14.0,1))&#13;&#10;        g:drawText(&quot;ENVELOPES&quot;,1192,304,128,16,GAUCHE,false)&#13;&#10;        g:drawText(&quot;MOD AMOUNT&quot;,1192,592,128,16,GAUCHE,false)&#13;&#10;        g:drawText(&quot;LFO SPEED&quot;,1192,680,128,16,GAUCHE,false)&#13;&#10;        g:setFont(Font(12.0,1))&#13;&#10;        g:drawText(&quot;Filter&quot; ,1265,380,128,16,CENTRE,false)&#13;&#10;        g:drawText(&quot;VCA&quot;,1265,468,128,16,CENTRE,false)&#13;&#10;        g:drawText(&quot;Envelope 3&quot; ,1265,556,128,16,CENTRE,false)&#13;&#10;   end&#13;&#10;--logo&#13;&#10;g:setColour(cBLK)&#13;&#10;g:setFont(LOGO ) &#13;&#10;g:drawText(&quot;MOnoPHOnic SYNTHESIZER&quot;,1256,792,202,28,CENTRE,false)&#13;&#10;--program&#13;&#10;g:setFont(Font(14.0,1))           &#13;&#10;g:setGradientFill(ColourGradient(cGR5,1124,802,cGR6,1240,848, true))  &#13;&#10;g:fillRoundedRectangle(1008,802,232,92,2.0)&#13;&#10;g:setGradientFill(ColourGradient(cGR1,1124,802,cGR2,1124,894,false))&#13;&#10;g:drawRoundedRectangle(1009,803,230,90,2.0,1.0)&#13;&#10;g:setGradientFill(ColourGradient(cGR7,1124,802,cGR8,1124,894,false))  &#13;&#10;g:drawRoundedRectangle(1007,801,234,94,2.0,2.0)&#13;&#10;g:setGradientFill(ColourGradient(cGR3,1124,802,cGR4,1240,848, true))&#13;&#10;g:drawText(&quot;PROGRAM&quot;,1016,804,128,16,GAUCHE,false)&#13;&#10;g:setColour(cEMB)&#13;&#10;g:drawRoundedRectangle(prc3:toFloat(),2.0,2.0)&#13;&#10;g:setColour(cBLK)&#13;&#10;g:fillRoundedRectangle(prc3:toFloat(),2.0)&#13;&#10;g:setFont(prtxt) &#13;&#10;g:setColour(cLED)&#13;&#10;g:drawText(&quot;Bank:&quot;..panel:getProperty(&quot;panelMidiBankLsb&quot;) + 1,prc1,GAUCHE,false)&#13;&#10;g:drawText(&quot;Program:&quot;..panel:getProperty(&quot;panelMidiProgram&quot;) + 1,prc2,GAUCHE,false)&#13;&#10;    if pnEdit ~= nil  &#13;&#10;  then g:drawText(&quot;&quot;..pnEdit,1016,860,216,16,CENTRE,false)&#13;&#10;   end &#13;&#10;g:setGradientFill(ColourGradient(cGR9,1124,830, BLANK,1124,900, true))&#13;&#10;g:fillRoundedRectangle(1017,825,216- 2,62 - 2,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,1124,830,BLANK,1124,1040, true))&#13;&#10;g:drawRoundedRectangle(1017,825,216 - 2,62 - 2,1.0,1.0)&#13;&#10;--seqsettings&#13;&#10;g:setFont(Font(12.0,1))&#13;&#10;g:setGradientFill(ColourGradient(cGR5,1244+ SEQpos[fond+1].b,660- SEQpos[fond+1].c,cGR6,1400+ SEQpos[fond+1].b,660- SEQpos[fond+1].c, true))  &#13;&#10;g:fillRoundedRectangle(1162+ SEQpos[fond+1].b,530- SEQpos[fond+1].c,164,260,2.0)&#13;&#10;g:setGradientFill(ColourGradient(cGR1,1244+ SEQpos[fond+1].b,530- SEQpos[fond+1].c,cGR2,1244+ SEQpos[fond+1].b,790- SEQpos[fond+1].c,false))&#13;&#10;g:drawRoundedRectangle(1163+ SEQpos[fond+1].b,531- SEQpos[fond+1].c,162,258,2.0,1.0)&#13;&#10;g:setGradientFill(ColourGradient(cGR7,1244+ SEQpos[fond+1].b,530- SEQpos[fond+1].c,cGR8,1244+ SEQpos[fond+1].b,790- SEQpos[fond+1].c,false))  &#13;&#10;g:drawRoundedRectangle(1161+SEQpos[fond+1].b,529- SEQpos[fond+1].c,166,262,2.0,2.0)&#13;&#10;   for m = 1,3&#13;&#10;    do if m &lt; 3 &#13;&#10;     then d = m*72&#13;&#10;   elseif m == 3         &#13;&#10;     then d = 232&#13;&#10;      end&#13;&#10;       g:setGradientFill(ColourGradient(cGR3,1244 + SEQpos[fond+1].b,660 - SEQpos[fond+1].c,cGR4,1400 + SEQpos[fond+1].b,660 - SEQpos[fond+1].c, true)) &#13;&#10;       g:drawText(SQctlrs[m].a,1140 + SEQpos[fond+1].b ,d+528 - SEQpos[fond+1].c,128,16,CENTRE,false)&#13;&#10;       g:drawText(SQctlrs[m].b,1220 + SEQpos[fond+1].b ,d+528 - SEQpos[fond+1].c,128,16,CENTRE,false)&#13;&#10;       g:setColour(cEMB)&#13;&#10;       if m == 1 then g:drawRoundedRectangle(1168 + SEQpos[fond+1].b,144+489 - SEQpos[fond+1].c,72,32,2.0,1.0) end&#13;&#10;       g:drawRoundedRectangle(1248 + SEQpos[fond+1].b,d+489 - SEQpos[fond+1].c,72,32,2.0,1.0)          &#13;&#10;       g:setColour(cBLK)&#13;&#10;       if m == 1 then g:fillRoundedRectangle(1169 + SEQpos[fond+1].b,144+489 - SEQpos[fond+1].c,70,31,2.0) end&#13;&#10;       g:fillRoundedRectangle(1249 + SEQpos[fond+1].b,d+489 - SEQpos[fond+1].c,70,31,2.0)&#13;&#10;   end&#13;&#10;   for i = 0,1 &#13;&#10;    do g:setColour(cEMB)&#13;&#10;       BTNr:setPosition(1176 + SEQpos[fond+1].b,561+ (i*160) - SEQpos[fond+1].c)&#13;&#10;       LEDr:setPosition(1193 + SEQpos[fond+1].b,547+ (i*160) - SEQpos[fond+1].c)&#13;&#10;       g:drawRoundedRectangle(BTNr:toFloat(),3.0,1.0)&#13;&#10;       g:drawRoundedRectangle(LEDr:toFloat(),1.0,1.0)&#13;&#10;   end&#13;&#10;--global/push it &#13;&#10;       g:setFont(Font(14.0,1))&#13;&#10;    if PIGLB == 0  &#13;&#10;  then PInam = &quot;GLOBAL&quot; &#13;&#10;       mamX = 16 &#13;&#10;       posX = 10&#13;&#10;       glbW = 884&#13;&#10;       radx = 496&#13;&#10;elseif PIGLB == 1&#13;&#10;  then PInam = &quot;PUSH IT !&quot;&#13;&#10;       mamX = 656&#13;&#10;       posX = 650&#13;&#10;       glbW = 244&#13;&#10;       radx = 772&#13;&#10;   end&#13;&#10;g:setGradientFill(ColourGradient(cGR5,radx,848,cGR6,972,848, true))  &#13;&#10;g:fillRoundedRectangle(posX,802,glbW ,92,2.0)&#13;&#10;g:setGradientFill(ColourGradient(cGR1,496,802,cGR2,496,894,false))&#13;&#10;g:drawRoundedRectangle(posX +1,803,glbW - 2,90,2.0,1.0)&#13;&#10;g:setGradientFill(ColourGradient(cGR7,496,802, cGR8,496,894,false))  &#13;&#10;g:drawRoundedRectangle(posX - 1,801,glbW + 2,94,2.0,2.0)&#13;&#10;g:setGradientFill(ColourGradient(cGR3,radx,848,cGR4,972,848, true))&#13;&#10;g:drawText(PInam,mamX,804,128,16,GAUCHE,false)&#13;&#10;g:setFont(Font(12.0,1))  &#13;&#10;   for h = 0,2 do &#13;&#10;       if PIGLB == 0   &#13;&#10;     then g:drawText(CmnNm1[h+1].a,mamX + 612 + (h*80) ,858,128,16,CENTRE,false)&#13;&#10;          g:drawText(CmnNm1[h+1].b,mamX + 612 + (h*80),870,128,16,CENTRE,false)&#13;&#10;   elseif PIGLB == 1&#13;&#10;     then g:drawText(CmnNm2[h+1],mamX - 28 + (h*80) ,864,128,16,CENTRE,false)&#13;&#10;      end&#13;&#10;   end&#13;&#10;   for f = 0,160,80 do &#13;&#10;        g:setColour(cEMB)&#13;&#10;        g:drawRoundedRectangle(656 +f ,824,72,32,2.0,1.0)&#13;&#10;        g:setColour(cBLK)&#13;&#10;        g:fillRoundedRectangle(657 +f ,825,70,31,2.0)&#13;&#10;   end&#13;&#10;    if PIGLB == 0 &#13;&#10;  then g:setColour(cEMB)&#13;&#10;       g:drawRoundedRectangle(16,824,72,33,2.0,1.0)&#13;&#10;       g:setColour(cBLK)&#13;&#10;       g:fillRoundedRectangle(17,825,70,31,2.0) &#13;&#10;       for i = 0,4 &#13;&#10;        do if i ~= 3 &#13;&#10;         then if  i == 2 &#13;&#10;            then j = 152&#13;&#10;            else j = 72 &#13;&#10;             end &#13;&#10;              g:setColour(cEMB)&#13;&#10;              g:drawRoundedRectangle(256+(i*80),824,j,33,2.0,1.0)&#13;&#10;              g:setColour(cBLK)&#13;&#10;              g:fillRoundedRectangle(257+(i*80),825,j-2,31,2.0)&#13;&#10;          end&#13;&#10;       end&#13;&#10;       g:setGradientFill(ColourGradient(cGR3,496,848,cGR4,972,848, true))&#13;&#10;       for k = 0,7&#13;&#10;        do if k == 1 or k == 2 &#13;&#10;         then g:drawText(CmnNm3[k+1].a,mamX - 28 + (k*80) ,864,128,16,CENTRE,false)&#13;&#10;       elseif  k == 0 or k == 3 or k == 4 or k == 7&#13;&#10;         then g:drawText(CmnNm3[k+1].a,mamX - 28 + (k*80) ,858,128,16,CENTRE,false)&#13;&#10;              g:drawText(CmnNm3[k+1].b,mamX - 28 + (k*80) ,870,128,16,CENTRE,false)&#13;&#10;          end&#13;&#10;       end&#13;&#10;       g:drawText(&quot;MIDI Clock&quot;,mamX + 412 ,864,128,16,CENTRE,false)&#13;&#10;   end&#13;&#10;   for b = 0,1 &#13;&#10;    do g:setColour(cEMB)&#13;&#10;       BTNr:setPosition(104+(b*80),825)&#13;&#10;       LEDr:setPosition(121+(b*80),811)&#13;&#10;       g:drawRoundedRectangle(BTNr:toFloat(),3.0,1.0)&#13;&#10;       g:drawRoundedRectangle(LEDr:toFloat(),1.0,1.0)&#13;&#10;   end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="f4595a1c06d1448faff90a2a0b9e0168"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="savdat" luaMethodCode="--&#10;-- Called when data needs saving&#10;--&#10;savdat = function(stateData)&#10;      if pnEdit ~= nil &#13;&#10;    then stateData:setProperty(&quot;Name&quot;,&quot;&quot;..pnEdit,nil)&#13;&#10;     end&#13;&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="luaPanelSaveState" luaMethodSource="0"
                   uuid="5cb697b6a1b64568a7afb7aff841d3fd" luaMethodValid="1"/>
        <luaMethod luaMethodName="loddat" luaMethodCode="--&#10;-- Called when data is restored&#10;--&#10;loddat = function(stateData)&#10;&#13;&#10;  if stateData:hasProperty(&quot;Name&quot;) == true  &#13;&#10;then pnEdit = stateData:getProperty(&quot;Name&quot;)&#13;&#10;     panel:getCanvas():repaint()&#13;&#10; end&#13;&#10;end"
                   luaMethodLinkedProperty="luaPanelRestoreState" luaMethodSource="0"
                   uuid="35d2daf5715548179200f58ade025d3a" luaMethodValid="1"/>
        <luaMethod luaMethodName="EditReq" luaMethodCode="--&#10;-- Called when a mouse is down on this component&#10;--&#10;&#10;EditReq = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#10;&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage{0xF0,0x01,0x25,0x06,0xF7})&#13;&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="componentLuaMouseDown" luaMethodSource="0"
                   uuid="6ab93b4fd673472d9e986a31e8f2df34" luaMethodValid="1"/>
        <luaMethod luaMethodName="SendEdit" luaMethodCode="--&#10;-- Called when a mouse is down on this component&#10;--&#10;&#10;SendEdit = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#10;&#13;&#10;local Write = MemoryBlock()&#13;&#10;  for t = 0,104,1  &#13;&#10;   do y =  panel:getModulatorWithProperty(&quot;vstIndex&quot;,t):getValue()&#13;&#10;         if y &lt;= 15 &#13;&#10;       then u = string.format(&quot;0%x&quot;,y)&#13;&#10;       else u = string.format(&quot;%x&quot;,y)&#13;&#10;        end&#13;&#10;      i = MemoryBlock(u)&#13;&#10;      Write:append(i)&#13;&#10;  end        &#13;&#10;  for t = 1,15 &#13;&#10;   do i = MemoryBlock(&quot;00&quot;)&#13;&#10;      Write:append(i)&#13;&#10;  end     &#13;&#10;  for t = 105,168 &#13;&#10;   do y =  panel:getModulatorWithProperty(&quot;vstIndex&quot;,t):getValue()&#13;&#10;         if y &lt;= 15 &#13;&#10;       then u  = string.format(&quot;0%x&quot;,y)&#13;&#10;       else u = string.format(&quot;%x&quot;,y)&#13;&#10;        end&#13;&#10;      i = MemoryBlock(u)&#13;&#10;      Write:append(i)&#13;&#10;  end   &#13;&#10;   if pnEdit ~= nil&#13;&#10; then   for f = 1,16  &#13;&#10;         do s = pnEdit:byte(f) &#13;&#10;           if s == nil &#13;&#10;           or s &lt;= 31 &#13;&#10;           or s &gt;= 128 &#13;&#10;         then s = 32    &#13;&#10;          end     &#13;&#10;            u = string.format(&quot;%x&quot;,s)&#13;&#10;            i = MemoryBlock(u)&#13;&#10;            Write:append(i)       &#13;&#10;       end       &#13;&#10;  end&#13;&#10;  for t = 200,255 &#13;&#10;   do i = MemoryBlock(&quot;00&quot;)&#13;&#10;      Write:append(i)&#13;&#10;  end &#13;&#10;local Read = utils.packDsiData(Write)&#13;&#10;local syx = {0xF0,0x01,0x25,0x03}&#13;&#10;   for t = 0,255 &#13;&#10;    do table.insert(syx,Read:getByte(t))&#13;&#10;   end&#13;&#10;table.insert(syx,0xF7) &#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(syx))&#13;&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="componentLuaMouseDown" luaMethodSource="0"
                   uuid="d52723a80eb6489db9be505de12d7f02" luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="shared" uuid="387583dfc85b451c8bc6470e678cf533">
        <luaMethod luaMethodName="PaintMods" luaMethodCode="--&#10;-- Called when any modulator changes on the panel&#10;--&#10;-- @program modulator that changed&#10;-- @value new modulator value&#10;--&#10;&#10;PaintMods = function(modulator, value)&#10;curmod = modulator:getComponent()&#13;&#10;typmod = curmod:getProperty(&quot;uiType&quot;)&#13;&#10;  if typmod == &quot;uiCustomComponent&quot;&#13;&#10;then curmod:repaint()&#13;&#10; end&#13;&#10;end"
                   luaMethodLinkedProperty="luaPanelModulatorValueChanged" luaMethodSource="0"
                   uuid="a3dcadea180d40af9502911c805f2362" luaMethodValid="1"/>
        <luaMethod luaMethodName="KnobClick" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;KnobClick = function(comp, event)&#10;knbcl = event.y&#13;&#10;knbvl = comp:getOwner():getValue()&#13;&#10;end"
                   luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                   uuid="0fe91a870b624a97abe1812c1f2d8beb" luaMethodValid="1"/>
        <luaMethod luaMethodName="DoubleClick" luaMethodCode="--&#10;-- Called when a mouse DOUBLE CLICK (any mouse button) event happens on a component&#10;--&#10;&#10;DoubleClick = function( comp,event)&#10;comp:getOwner():setModulatorValue(comp:getOwner():getPropertyInt(&quot;modulatorMax&quot;) /2,false,true,false)&#13;&#10;end"
                   luaMethodLinkedProperty="uiCustomMouseDoubleClickCallback" luaMethodSource="0"
                   uuid="1d477898c7a44b3986f2479dea2ad099" luaMethodValid="1"/>
        <luaMethod luaMethodName="KnobDrag" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;KnobDrag = function(comp, event)&#10;knbdr = event.y&#13;&#10;   local knval = math.floor(  (knbcl - knbdr )/2 )  &#13;&#10;      if knval+knbvl  &gt;= 0 and knval+knbvl &lt;= 127 &#13;&#10;    then if comp:getOwner():getValue() ~= knval+knbvl&#13;&#10;       then comp:getOwner():setModulatorValue(knval+knbvl,false,true,false)&#13;&#10;        end &#13;&#10;     end&#13;&#10;end"
                   luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                   uuid="11d2ad0206cd4492998beed78d66f6a2" luaMethodValid="1"/>
        <luaMethod luaMethodName="KnobDrag3" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;KnobDrag3 = function(comp, event)&#10;knbdr3 = event.y&#13;&#10;   local knval =  math.floor((knbcl - knbdr3 )/3 )  &#13;&#10;      if knval+knbvl  &gt;= 0 and knval+knbvl &lt;= 164 &#13;&#10;    then if comp:getOwner():getValue() ~= knval+knbvl&#13;&#10;       then comp:getOwner():setModulatorValue(knval+knbvl,false,true,false)&#13;&#10;        end &#13;&#10;     end&#13;&#10;end"
                   luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                   uuid="cffe64aa69014affa2d980826360cc46" luaMethodValid="1"/>
        <luaMethod luaMethodName="KnobDrag2" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;KnobDrag2 = function(comp, event)&#10;knbdr2 = event.y&#13;&#10;   local knval =  math.floor((knbcl - knbdr2 )/2.5)  &#13;&#10;      if knval+knbvl  &gt;= 0 and knval+knbvl &lt;= 254 &#13;&#10;    then if comp:getOwner():getValue() ~= knval+knbvl&#13;&#10;       then comp:getOwner():setModulatorValue(knval+knbvl,false,true,false)&#13;&#10;        end &#13;&#10;     end&#13;&#10;end"
                   luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                   uuid="2e4b8ea9e80c49e7b0e48d1fb8655030" luaMethodValid="1"/>
        <luaMethod luaMethodName="KnobDrag4" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;KnobDrag4 = function(comp, event)&#10;knbdr4 = event.y&#13;&#10;   local knval =  math.floor((knbcl - knbdr4 )/3 )  &#13;&#10;      if knval+knbvl  &gt;= 0 and knval+knbvl &lt;= 120&#13;&#10;    then if comp:getOwner():getValue() ~= knval+knbvl&#13;&#10;       then comp:getOwner():setModulatorValue(knval+knbvl,false,true,false)&#13;&#10;        end &#13;&#10;     end&#13;&#10;end"
                   luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                   uuid="65b267821cea49c6b4b8810fe9671d88" luaMethodValid="1"/>
        <luaMethod luaMethodName="KnobDrag5" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;KnobDrag5 = function(comp, event)&#10;knbdr5 = event.y&#13;&#10;   local knval =  math.floor((knbcl - knbdr5 ) /3)  &#13;&#10;      if knval+knbvl  &gt;= 0 and knval+knbvl &lt;= 100 &#13;&#10;    then if comp:getOwner():getValue() ~= knval+knbvl&#13;&#10;       then comp:getOwner():setModulatorValue(knval+knbvl,false,true,false)&#13;&#10;        end &#13;&#10;     end&#13;&#10;end"
                   luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                   uuid="5d7059f728ba4882bc429423cb7819df" luaMethodValid="1"/>
        <luaMethod luaMethodName="KnobDrag6" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;KnobDrag6 = function(comp, event)&#10;knbdr6 = event.y&#13;&#10;   local knval =  math.floor((knbcl - knbdr6 )/16 )  &#13;&#10;      if knval+knbvl  &gt;= 0 and knval+knbvl &lt;= 5 &#13;&#10;    then if comp:getOwner():getValue() ~= knval+knbvl&#13;&#10;       then comp:getOwner():setModulatorValue(knval+knbvl,false,true,false)&#13;&#10;        end &#13;&#10;     end&#13;&#10;end"
                   luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                   uuid="abf8ed3b680b49c49504bbe000ef30cb" luaMethodValid="1"/>
        <luaMethod luaMethodName="KnobDrag8" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;KnobDrag8 = function(comp, event)&#10;knbdr8 = event.y&#13;&#10;   local knval =  math.floor((knbcl - knbdr8 )/6 )  &#13;&#10;      if knval+knbvl  &gt;= 0 and knval+knbvl &lt;= 12  &#13;&#10;    then if comp:getOwner():getValue() ~= knval+knbvl&#13;&#10;       then comp:getOwner():setModulatorValue(knval+knbvl,false,true,false)&#13;&#10;        end &#13;&#10;     end&#13;&#10;end"
                   luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                   uuid="84eaa2f2e36f4e54ab9858fc0933d20e" luaMethodValid="1"/>
        <luaMethod luaMethodName="CtrlLeds" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;CtrlLeds = function(mod, value)&#10;  for p = 0,4 do &#13;&#10;      mled =  panel:getComponent(string.format(&quot;MLED%s&quot;,p+1))&#13;&#10;      if p == value then &#13;&#10;         mled:setPropertyString(&quot;uiLabelTextColour&quot;,&quot;ffffac00&quot;)&#13;&#10;         mled:setPropertyString(&quot;componentEffect&quot;,&quot;Shadow&quot;)&#13;&#10;    else mled:setPropertyString(&quot;uiLabelTextColour&quot;,&quot;ff000000&quot;)&#13;&#10;         mled:setPropertyString(&quot;componentEffect&quot;,&quot;No Effect&quot;)&#13;&#10;     end&#13;&#10;  end&#13;&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="62aadbf36f47481b9720d421e8b05280" luaMethodValid="1"/>
        <luaMethod luaMethodName="bntled" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;bntled = function(mod, value)&#10;chsIdx = mod:getProperty(&quot;modulatorCustomIndex&quot;)&#13;&#10;chled = panel:getComponent(string.format(&quot;LED%s&quot;,chsIdx))&#13;&#10;if value == 1 then&#13;&#10;chled:setPropertyString(&quot;uiLabelTextColour&quot;,&quot;ffffac00&quot;)&#13;&#10;chled:setPropertyString(&quot;componentEffect&quot;,&quot;Shadow&quot;)&#13;&#10;else&#13;&#10;chled:setPropertyString(&quot;uiLabelTextColour&quot;,&quot;ff000000&quot;)&#13;&#10;chled:setPropertyString(&quot;componentEffect&quot;,&quot;No Effect&quot;)&#13;&#10;end&#13;&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="f57a3085cbd74a13a81419b9841bb49b" luaMethodValid="1"/>
        <luaMethod luaMethodName="BTNClick" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;BTNClick = function( comp,event)&#10;&#13;&#10;comp:getOwner():setModulatorValue((comp:getOwner():getValue()+1)%2,false,true,false) &#13;&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                   uuid="03be187d5f914bbd9feb8e0365840beb" luaMethodValid="1"/>
        <luaMethod luaMethodName="windowCallback" luaMethodCode="function windowCallback(result, window)&#13;&#10;window:setVisible (false)&#10;txtprg = MemoryBlock()&#13;&#10;   if result == 1  &#13;&#10; then Label = window:getTextEditor(&quot;nameEdit&quot;):getText()&#13;&#10;      for f = 1,16  &#13;&#10;       do s = Label:byte(f) &#13;&#10;            if s == nil &#13;&#10;            or s &lt;= 31 &#13;&#10;            or s &gt;= 128 &#13;&#10;          then s = 32    &#13;&#10;           end     &#13;&#10;          t = string.format(&quot;%x&quot;,s)&#13;&#10;          u = MemoryBlock(t)&#13;&#10;          txtprg:insert(u,1,f-1)      &#13;&#10;          panel:sendMidiMessageNow(CtrlrMidiMessage{0Xb0,0x63,0x01})&#13;&#10;          panel:sendMidiMessageNow(CtrlrMidiMessage{0Xb0,0x62,(55+f)})          &#13;&#10;          panel:sendMidiMessageNow(CtrlrMidiMessage{0Xb0,0x06,0x00})&#13;&#10;          panel:sendMidiMessageNow(CtrlrMidiMessage{0Xb0,0x26,s})&#13;&#10;      end        &#13;&#10;      pnEdit = &quot;&quot;..txtprg:toString()&#13;&#10;      panel:getCanvas():repaint()&#13;&#10;  end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="a1ce4f62566045bdbc97a5e971d9267b"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="Mylf" luaMethodCode="lookAndFeelImpl = {&#10;drawRotarySlider = function(g, x, y, width, height, sliderPosProportional, rotaryStartAngle, rotaryEndAngle, slider)&#13;&#10;&#13;&#10;angle = rotaryStartAngle + sliderPosProportional * (rotaryEndAngle - rotaryStartAngle)&#13;&#10;myval = slider:getValue()&#13;&#10;mycmp = slider:getParentComponent()&#13;&#10;mymod = mycmp:getOwner()&#13;&#10;mygrp = mymod:getPropertyInt(&quot;modulatorCustomIndexGroup&quot;)&#13;&#10;&#13;&#10; slider:setMouseDragSensitivity (m_sens[mygrp])&#13;&#10;   if mygrp == 4 &#13;&#10;  then ktxtv = &quot;&quot;..PITCH[myval+1]&#13;&#10;       ktx_a = 20 &#13;&#10;       ktx_b = 32 &#13;&#10;elseif mygrp == 2 or mygrp == 5&#13;&#10;  then mymax2 = slider:getMaximum () /2&#13;&#10;             if myval &lt;= mymax2 &#13;&#10;           then ktxtv = &quot;&quot;..myval - mymax2&#13;&#10;                ktx_a = 20 &#13;&#10;                ktx_b = 32 &#13;&#10;           else ktxtv = &quot;+&quot;..myval - mymax2&#13;&#10;                ktx_a = 16 &#13;&#10;                ktx_b = 40 &#13;&#10;            end&#13;&#10;  else ktxtv = &quot;&quot;..myval&#13;&#10;       ktx_a = 24 &#13;&#10;       ktx_b = 24&#13;&#10;   end&#13;&#10;&#13;&#10;turnIt = AffineTransform (AffineTransform.rotation(angle,36,36 ))&#13;&#10;g:setColour(cKN1)&#13;&#10;g:fillEllipse(9,9,54,54)&#13;&#10;g:setGradientFill(GRD1)&#13;&#10;g:drawEllipse (11.5,11.5,49,49,6)&#13;&#10;g:setColour(cKN2)&#13;&#10;g:drawEllipse (15,15,42,42,1)&#13;&#10;g:setColour(cKN3)&#13;&#10;g:setFont(Font(14.0,1))&#13;&#10;g:drawText(ktxtv,ktx_a,28,ktx_b,16,CENTRE,false)&#13;&#10;g:setOpacity(1.0)&#13;&#10;g:reduceClipRegion(fatpath,turnIt)&#13;&#10;g:drawEllipse(9,9, 54,54, 6.0)&#13;&#10;g:setColour(cKN4)&#13;&#10;g:drawEllipse(8,8, 56,56, 5.0)&#13;&#10;g:setColour(cKN1)&#13;&#10;g:fillPath(linpath,turnIt)&#13;&#10;g:setColour(cKN2)&#13;&#10;g:fillPath(linpath2,turnIt)&#13;&#10;g:setGradientFill(GRD2)  &#13;&#10;g:drawEllipse(8,8,56,56,5.0)&#13;&#10;g:setGradientFill(GRD3)  &#13;&#10;g:drawEllipse(8,8,56,56,5.0)&#13;&#10;g:setColour(cKN1)&#13;&#10;g:fillPath(linpath3,turnIt)&#13;&#10;g:setColour(cKN2)&#13;&#10;g:drawEllipse (15,15,42,42,1)&#13;&#10;&#13;&#10;end&#13;&#10;}&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="c723be16d96e44a0918a8fcd1adf079f"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="sli" luaMethodCode="function sli(vl,v ,mn,mx)&#10;         if vl ~= nil &#10;       then    if v+vl  &lt;= mn &#13;&#10;             then return mn &#13;&#10;           elseif v+vl &gt;= mx&#13;&#10;             then return mx                 &#13;&#10;             else return v+vl&#13;&#10;              end&#13;&#10;        end &#13;&#10;     end        &#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="5717bdbad7af4565883e86594f67e736"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="ExpressionMods" uuid="960a60ceba7447b8b0da5be93a79563a">
        <luaMethodGroup name="lfoknobs" uuid="54daea0f923346418a022a3b341a4df1">
          <luaMethod luaMethodName="LfoPaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;LfoPaint = function(comp,g)&#10;&#13;&#10;lfofrq = panel:getModulatorByName(&quot;lfo1Frequency&quot;):getValue()&#13;&#10;lfoVal = comp:getOwner():getValue()&#13;&#10;g:setColour(cLED)&#13;&#10;local a2 = (comp:getWidth()/((lfofrq+5)/5))&#13;&#10;local a3 = comp:getHeight()/3.0&#13;&#10;local a4 = comp:getHeight()/1.5&#13;&#10;   g:setFont(Shapetxt)&#13;&#10;        for d = 0,4  do &#13;&#10;            if d  == lfoVal then  &#13;&#10;               g:setOpacity(1.0)&#13;&#10;                    &#13;&#10;        elseif d ~=  lfoVal then &#13;&#10;               g:setOpacity(0.2)&#13;&#10;           end&#13;&#10;            g:drawText(&quot;&quot;..sh2[d+1],(d*30),60,30,40,CENTRE,false) &#13;&#10;       end&#13;&#10;clplfo1 = Path()&#13;&#10;clplfo1:addRectangle(2.0,2.0,154 - 4.0, 92 - 4.0)&#13;&#10;g:reduceClipRegion(clplfo1,AffineTransform())&#13;&#10;    if lfofrq &lt;= 150 &#13;&#10;  then &#13;&#10;      if lfoVal == 0 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h)+(a2/4),comp:getHeight()/4,(a2*h)+(a2/4),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;             g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h),a4,(a2*h)+ (a2/2),a3,2)&#13;&#10;             g:drawLine((a2*h)+ (a2/2),a3,((a2*h)+ a2),a4,2)&#13;&#10;         end&#13;&#10;  elseif lfoVal == 1 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h)+(a2/2),comp:getHeight()/4,(a2*h)+(a2/2),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;        g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;               g:drawLine((a2*h),a3,(a2*h),a4,2)&#13;&#10;               g:drawLine((a2*h),a3, (a2*h)+ a2,a4,2)           &#13;&#10;         end&#13;&#10;  elseif lfoVal == 2 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h)+(a2/2),comp:getHeight()/4,(a2*h)+(a2/2),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h),a4,(a2*h)+ a2,a3,2)&#13;&#10;             g:drawLine((a2*h)+a2 ,a3, (a2*h)+ a2,a4,2)&#13;&#10;         end&#13;&#10;  elseif lfoVal == 3 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,38 do &#13;&#10;             g:drawLine((a2*h),comp:getHeight()/4,(a2*h),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h),a3,(a2*h),a4,2)&#13;&#10;             g:drawLine((a2*h),a3,(a2*h)+(a2/2),a3,2)&#13;&#10;             g:drawLine((a2*h)+(a2/2),a3,(a2*h)+(a2/2),a4,2)&#13;&#10;             g:drawLine((a2*h)+(a2/2),a4,(a2*h)+ a2,a4,2)&#13;&#10;         end&#13;&#10;  elseif lfoVal == 4 &#13;&#10;    then g:setOpacity(1.0)&#13;&#10;         g:setFont(Shapetxt2)&#13;&#10;         g:drawText(&quot;?&quot;,0,0,comp:getWidth(),comp:getHeight(),CENTRE,false)&#13;&#10;     end &#13;&#10;elseif lfofrq &gt;= 151 &#13;&#10;  then local a1 = (comp:getWidth()/((synclfo[lfofrq - 150] + 5)/5))&#13;&#10;      if lfoVal == 0 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a1*h)+(a1/4),comp:getHeight()/4,(a1*h)+(a1/4),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;             g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a1*h),a4,(a1*h)+ (a1/2),a3,2)&#13;&#10;             g:drawLine((a1*h)+ (a1/2),a3,((a1*h)+ a1),a4,2)&#13;&#10;         end&#13;&#10;  elseif lfoVal == 1 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30  do &#13;&#10;             g:drawLine((a1*h)+(a1/2),comp:getHeight()/4,(a1*h)+(a1/2),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;        g:setOpacity(1.0)&#13;&#10;         for h = 0,30  do &#13;&#10;               g:drawLine((a1*h),a3,(a1*h),a4,2)&#13;&#10;               g:drawLine((a1*h),a3, (a1*h)+ a1,a4,2)           &#13;&#10;         end&#13;&#10;  elseif lfoVal == 2 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a1*h)+(a1/2),comp:getHeight()/4,(a1*h)+(a1/2),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         for h = 0,30  do &#13;&#10;             g:drawLine((a1*h),a4,(a1*h)+ a1,a3,2)&#13;&#10;             g:drawLine((a1*h)+a1 ,a3, (a1*h)+ a1,a4,2)&#13;&#10;         end&#13;&#10;  elseif lfoVal == 3 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30  do &#13;&#10;             g:drawLine((a1*h),comp:getHeight()/4,(a1*h),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         for h = 0,30  do &#13;&#10;             g:drawLine((a1*h),a3,(a1*h),a4,2)&#13;&#10;             g:drawLine((a1*h),a3,(a1*h)+(a1/2),a3,2)&#13;&#10;             g:drawLine((a1*h)+(a1/2),a3,(a1*h)+(a1/2),a4,2)&#13;&#10;             g:drawLine((a1*h)+(a1/2),a4,(a1*h)+ a1,a4,2)&#13;&#10;         end&#13;&#10;  elseif lfoVal == 4 &#13;&#10;    then g:setOpacity(1.0)&#13;&#10;         g:setFont(Shapetxt2)&#13;&#10;         g:drawText(&quot;?&quot;,0,0,comp:getWidth(),comp:getHeight(),CENTRE,false)&#13;&#10;     end &#13;&#10;   end&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),comp:getWidth(),0,BLANK,comp:getWidth(),100, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-4,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),comp:getWidth(),0,BLANK,comp:getWidth(),260, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-4,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="f4034c89a1254b8999cf5588b9c4c434" luaMethodValid="1"/>
          <luaMethod luaMethodName="Lfo2Paint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;Lfo2Paint = function(comp,g)&#10;lfo2frq = panel:getModulatorByName(&quot;lfo2Frequency&quot;):getValue()&#13;&#10;lfo2Val = comp:getOwner():getValue()&#13;&#10;g:setColour(cLED)&#13;&#10;local a2 = (comp:getWidth()/((lfo2frq+5)/5))&#13;&#10;local a3 = comp:getHeight()/3.0&#13;&#10;local a4 = comp:getHeight()/1.5&#13;&#10;   g:setFont(Shapetxt)&#13;&#10;        for d = 0,4  do &#13;&#10;            if d  == lfo2Val then  &#13;&#10;               g:setOpacity(1.0)&#13;&#10;                    &#13;&#10;        elseif d ~=  lfo2Val then &#13;&#10;               g:setOpacity(0.2)&#13;&#10;           end&#13;&#10;            g:drawText(&quot;&quot;..sh2[d+1],(d*30),60,30,40,CENTRE,false) &#13;&#10;       end&#13;&#10;clplfo2 = Path()&#13;&#10;clplfo2:addRectangle(2.0,2.0,154 - 4.0, 92 - 4.0)&#13;&#10;g:reduceClipRegion(clplfo2,AffineTransform())&#13;&#10;    if lfo2frq &lt;= 150 &#13;&#10;  then &#13;&#10;      if lfo2Val == 0 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h)+(a2/4),comp:getHeight()/4,(a2*h)+(a2/4),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;             g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h),a4,(a2*h)+ (a2/2),a3,2)&#13;&#10;             g:drawLine((a2*h)+ (a2/2),a3,((a2*h)+ a2),a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo2Val == 1 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h)+(a2/2),comp:getHeight()/4,(a2*h)+(a2/2),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;        g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;               g:drawLine((a2*h),a3,(a2*h),a4,2)&#13;&#10;               g:drawLine((a2*h),a3, (a2*h)+ a2,a4,2)           &#13;&#10;         end&#13;&#10;  elseif lfo2Val == 2 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h)+(a2/2),comp:getHeight()/4,(a2*h)+(a2/2),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h),a4,(a2*h)+ a2,a3,2)&#13;&#10;             g:drawLine((a2*h)+a2 ,a3, (a2*h)+ a2,a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo2Val == 3 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,38 do &#13;&#10;             g:drawLine((a2*h),comp:getHeight()/4,(a2*h),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h),a3,(a2*h),a4,2)&#13;&#10;             g:drawLine((a2*h),a3,(a2*h)+(a2/2),a3,2)&#13;&#10;             g:drawLine((a2*h)+(a2/2),a3,(a2*h)+(a2/2),a4,2)&#13;&#10;             g:drawLine((a2*h)+(a2/2),a4,(a2*h)+ a2,a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo2Val == 4 &#13;&#10;    then g:setOpacity(1.0)&#13;&#10;         g:setFont(Shapetxt2)&#13;&#10;         g:drawText(&quot;?&quot;,0,0,comp:getWidth(),comp:getHeight(),CENTRE,false)&#13;&#10;     end &#13;&#10;elseif lfo2frq &gt;= 151 &#13;&#10;  then local a1 = (comp:getWidth()/((synclfo[lfo2frq - 150] + 5)/5))&#13;&#10;      if lfo2Val == 0 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a1*h)+(a1/4),comp:getHeight()/4,(a1*h)+(a1/4),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;             g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a1*h),a4,(a1*h)+ (a1/2),a3,2)&#13;&#10;             g:drawLine((a1*h)+ (a1/2),a3,((a1*h)+ a1),a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo2Val == 1 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30  do &#13;&#10;             g:drawLine((a1*h)+(a1/2),comp:getHeight()/4,(a1*h)+(a1/2),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;        g:setOpacity(1.0)&#13;&#10;         for h = 0,30  do &#13;&#10;               g:drawLine((a1*h),a3,(a1*h),a4,2)&#13;&#10;               g:drawLine((a1*h),a3, (a1*h)+ a1,a4,2)           &#13;&#10;         end&#13;&#10;  elseif lfo2Val == 2 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a1*h)+(a1/2),comp:getHeight()/4,(a1*h)+(a1/2),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         for h = 0,30  do &#13;&#10;             g:drawLine((a1*h),a4,(a1*h)+ a1,a3,2)&#13;&#10;             g:drawLine((a1*h)+a1 ,a3, (a1*h)+ a1,a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo2Val == 3 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30  do &#13;&#10;             g:drawLine((a1*h),comp:getHeight()/4,(a1*h),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         for h = 0,30  do &#13;&#10;             g:drawLine((a1*h),a3,(a1*h),a4,2)&#13;&#10;             g:drawLine((a1*h),a3,(a1*h)+(a1/2),a3,2)&#13;&#10;             g:drawLine((a1*h)+(a1/2),a3,(a1*h)+(a1/2),a4,2)&#13;&#10;             g:drawLine((a1*h)+(a1/2),a4,(a1*h)+ a1,a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo2Val == 4 &#13;&#10;    then g:setOpacity(1.0)&#13;&#10;         g:setFont(Shapetxt2)&#13;&#10;         g:drawText(&quot;?&quot;,0,0,comp:getWidth(),comp:getHeight(),CENTRE,false)&#13;&#10;     end &#13;&#10;   end&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),comp:getWidth(),0,BLANK,comp:getWidth(),100, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-4,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),comp:getWidth(),0,BLANK,comp:getWidth(),260, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-4,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="3e4da3fd0d6c47fd90dbaf5f36c79fd1" luaMethodValid="1"/>
          <luaMethod luaMethodName="Lfo3Paint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;Lfo3Paint = function(comp,g)&#10;lfo3frq = panel:getModulatorByName(&quot;lfo3Frequency&quot;):getValue()&#13;&#10;lfo3Val = comp:getOwner():getValue()&#13;&#10;g:setColour(cLED)&#13;&#10;local a2 = (comp:getWidth()/((lfo3frq+5)/5))&#13;&#10;local a3 = comp:getHeight()/3.0&#13;&#10;local a4 = comp:getHeight()/1.5&#13;&#10;    g:setFont(Shapetxt)&#13;&#10;        for d = 0,4  do &#13;&#10;            if d  == lfo3Val then  &#13;&#10;               g:setOpacity(1.0)&#13;&#10;                    &#13;&#10;        elseif d ~=  lfo3Val then &#13;&#10;               g:setOpacity(0.2)&#13;&#10;           end&#13;&#10;            g:drawText(&quot;&quot;..sh2[d+1],(d*30),60,30,40,CENTRE,false) &#13;&#10;       end&#13;&#10;clplfo3 = Path()&#13;&#10;clplfo3:addRectangle(2.0,2.0,154 - 4.0, 92 - 4.0)&#13;&#10;g:reduceClipRegion(clplfo3,AffineTransform())&#13;&#10;    if lfo3frq &lt;= 150 &#13;&#10;  then &#13;&#10;      if lfo3Val == 0 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h)+(a2/4),comp:getHeight()/4,(a2*h)+(a2/4),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;             g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h),a4,(a2*h)+ (a2/2),a3,2)&#13;&#10;             g:drawLine((a2*h)+ (a2/2),a3,((a2*h)+ a2),a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo3Val == 1 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h)+(a2/2),comp:getHeight()/4,(a2*h)+(a2/2),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;        g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;               g:drawLine((a2*h),a3,(a2*h),a4,2)&#13;&#10;               g:drawLine((a2*h),a3, (a2*h)+ a2,a4,2)           &#13;&#10;         end&#13;&#10;  elseif lfo3Val == 2 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h)+(a2/2),comp:getHeight()/4,(a2*h)+(a2/2),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h),a4,(a2*h)+ a2,a3,2)&#13;&#10;             g:drawLine((a2*h)+a2 ,a3, (a2*h)+ a2,a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo3Val == 3 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,38 do &#13;&#10;             g:drawLine((a2*h),comp:getHeight()/4,(a2*h),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h),a3,(a2*h),a4,2)&#13;&#10;             g:drawLine((a2*h),a3,(a2*h)+(a2/2),a3,2)&#13;&#10;             g:drawLine((a2*h)+(a2/2),a3,(a2*h)+(a2/2),a4,2)&#13;&#10;             g:drawLine((a2*h)+(a2/2),a4,(a2*h)+ a2,a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo3Val == 4 &#13;&#10;    then g:setOpacity(1.0)&#13;&#10;         g:setFont(Shapetxt2)&#13;&#10;         g:drawText(&quot;?&quot;,0,0,comp:getWidth(),comp:getHeight(),CENTRE,false)&#13;&#10;     end &#13;&#10;elseif lfo3frq &gt;= 151 &#13;&#10;  then local a1 = (comp:getWidth()/((synclfo[lfo3frq - 150] + 5)/5))&#13;&#10;      if lfo3Val == 0 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a1*h)+(a1/4),comp:getHeight()/4,(a1*h)+(a1/4),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;             g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a1*h),a4,(a1*h)+ (a1/2),a3,2)&#13;&#10;             g:drawLine((a1*h)+ (a1/2),a3,((a1*h)+ a1),a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo3Val == 1 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30  do &#13;&#10;             g:drawLine((a1*h)+(a1/2),comp:getHeight()/4,(a1*h)+(a1/2),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;        g:setOpacity(1.0)&#13;&#10;         for h = 0,30  do &#13;&#10;               g:drawLine((a1*h),a3,(a1*h),a4,2)&#13;&#10;               g:drawLine((a1*h),a3, (a1*h)+ a1,a4,2)           &#13;&#10;         end&#13;&#10;  elseif lfo3Val == 2 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a1*h)+(a1/2),comp:getHeight()/4,(a1*h)+(a1/2),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         for h = 0,30  do &#13;&#10;             g:drawLine((a1*h),a4,(a1*h)+ a1,a3,2)&#13;&#10;             g:drawLine((a1*h)+a1 ,a3, (a1*h)+ a1,a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo3Val == 3 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30  do &#13;&#10;             g:drawLine((a1*h),comp:getHeight()/4,(a1*h),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         for h = 0,30  do &#13;&#10;             g:drawLine((a1*h),a3,(a1*h),a4,2)&#13;&#10;             g:drawLine((a1*h),a3,(a1*h)+(a1/2),a3,2)&#13;&#10;             g:drawLine((a1*h)+(a1/2),a3,(a1*h)+(a1/2),a4,2)&#13;&#10;             g:drawLine((a1*h)+(a1/2),a4,(a1*h)+ a1,a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo3Val == 4 &#13;&#10;    then g:setOpacity(1.0)&#13;&#10;         g:setFont(Shapetxt2)&#13;&#10;         g:drawText(&quot;?&quot;,0,0,comp:getWidth(),comp:getHeight(),CENTRE,false)&#13;&#10;     end &#13;&#10;   end&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),comp:getWidth(),0,BLANK,comp:getWidth(),100, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-4,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),comp:getWidth(),0,BLANK,comp:getWidth(),260, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-4,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="b654185be1a449f0addf618ae5087d24" luaMethodValid="1"/>
          <luaMethod luaMethodName="Lfo4Paint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;Lfo4Paint = function(comp,g)&#10;lfo4frq = panel:getModulatorByName(&quot;lfo4Frequency&quot;):getValue()&#13;&#10;lfo4Val = comp:getOwner():getValue()&#13;&#10;g:setColour(cLED)&#13;&#10;local a2 = (comp:getWidth()/((lfo4frq+5)/5))&#13;&#10;local a3 = comp:getHeight()/3.0&#13;&#10;local a4 = comp:getHeight()/1.5&#13;&#10;    g:setFont(Shapetxt)&#13;&#10;        for d = 0,4  do &#13;&#10;            if d  == lfo4Val then  &#13;&#10;               g:setOpacity(1.0)&#13;&#10;                    &#13;&#10;        elseif d ~=  lfo4Val then &#13;&#10;               g:setOpacity(0.2)&#13;&#10;           end&#13;&#10;            g:drawText(&quot;&quot;..sh2[d+1],(d*30),60,30,40,CENTRE,false) &#13;&#10;       end&#13;&#10;clplfo4 = Path()&#13;&#10;clplfo4:addRectangle(2.0,2.0,154 - 4.0, 92 - 4.0)&#13;&#10;g:reduceClipRegion(clplfo4,AffineTransform())&#13;&#10;    if lfo4frq &lt;= 150 &#13;&#10;  then &#13;&#10;      if lfo4Val == 0 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h)+(a2/4),comp:getHeight()/4,(a2*h)+(a2/4),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;             g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h),a4,(a2*h)+ (a2/2),a3,2)&#13;&#10;             g:drawLine((a2*h)+ (a2/2),a3,((a2*h)+ a2),a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo4Val == 1 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h)+(a2/2),comp:getHeight()/4,(a2*h)+(a2/2),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;        g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;               g:drawLine((a2*h),a3,(a2*h),a4,2)&#13;&#10;               g:drawLine((a2*h),a3, (a2*h)+ a2,a4,2)           &#13;&#10;         end&#13;&#10;  elseif lfo4Val == 2 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h)+(a2/2),comp:getHeight()/4,(a2*h)+(a2/2),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h),a4,(a2*h)+ a2,a3,2)&#13;&#10;             g:drawLine((a2*h)+a2 ,a3, (a2*h)+ a2,a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo4Val == 3 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,38 do &#13;&#10;             g:drawLine((a2*h),comp:getHeight()/4,(a2*h),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a2*h),a3,(a2*h),a4,2)&#13;&#10;             g:drawLine((a2*h),a3,(a2*h)+(a2/2),a3,2)&#13;&#10;             g:drawLine((a2*h)+(a2/2),a3,(a2*h)+(a2/2),a4,2)&#13;&#10;             g:drawLine((a2*h)+(a2/2),a4,(a2*h)+ a2,a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo4Val == 4 &#13;&#10;    then g:setOpacity(1.0)&#13;&#10;         g:setFont(Shapetxt2)&#13;&#10;         g:drawText(&quot;?&quot;,0,0,comp:getWidth(),comp:getHeight(),CENTRE,false)&#13;&#10;     end &#13;&#10;clplfo4 = Path()&#13;&#10;clplfo4:addRectangle(2.0,2.0,154 - 4.0, 92 - 4.0)&#13;&#10;g:reduceClipRegion(clplfo4,AffineTransform())&#13;&#10;elseif lfo4frq &gt;= 151 &#13;&#10;  then local a1 = (comp:getWidth()/((synclfo[lfo4frq - 150] + 5)/5))&#13;&#10;      if lfo4Val == 0 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a1*h)+(a1/4),comp:getHeight()/4,(a1*h)+(a1/4),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;             g:setOpacity(1.0)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a1*h),a4,(a1*h)+ (a1/2),a3,2)&#13;&#10;             g:drawLine((a1*h)+ (a1/2),a3,((a1*h)+ a1),a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo4Val == 1 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30  do &#13;&#10;             g:drawLine((a1*h)+(a1/2),comp:getHeight()/4,(a1*h)+(a1/2),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;        g:setOpacity(1.0)&#13;&#10;         for h = 0,30  do &#13;&#10;               g:drawLine((a1*h),a3,(a1*h),a4,2)&#13;&#10;               g:drawLine((a1*h),a3, (a1*h)+ a1,a4,2)           &#13;&#10;         end&#13;&#10;  elseif lfo4Val == 2 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30 do &#13;&#10;             g:drawLine((a1*h)+(a1/2),comp:getHeight()/4,(a1*h)+(a1/2),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         for h = 0,30  do &#13;&#10;             g:drawLine((a1*h),a4,(a1*h)+ a1,a3,2)&#13;&#10;             g:drawLine((a1*h)+a1 ,a3, (a1*h)+ a1,a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo4Val == 3 &#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         for h = 0,30  do &#13;&#10;             g:drawLine((a1*h),comp:getHeight()/4,(a1*h),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         for h = 0,30  do &#13;&#10;             g:drawLine((a1*h),a3,(a1*h),a4,2)&#13;&#10;             g:drawLine((a1*h),a3,(a1*h)+(a1/2),a3,2)&#13;&#10;             g:drawLine((a1*h)+(a1/2),a3,(a1*h)+(a1/2),a4,2)&#13;&#10;             g:drawLine((a1*h)+(a1/2),a4,(a1*h)+ a1,a4,2)&#13;&#10;         end&#13;&#10;  elseif lfo4Val == 4 &#13;&#10;    then g:setOpacity(1.0)&#13;&#10;         g:setFont(Shapetxt2)&#13;&#10;         g:drawText(&quot;?&quot;,0,0,comp:getWidth(),comp:getHeight(),CENTRE,false)&#13;&#10;     end &#13;&#10;   end&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),comp:getWidth(),0,BLANK,comp:getWidth(),100, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-4,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),comp:getWidth(),0,BLANK,comp:getWidth(),260, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-4,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="ee06cf2b44f540e584ed7515b1a082a3" luaMethodValid="1"/>
          <luaMethod luaMethodName="LfoClick" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;LfoClick = function(comp, event)&#10;lfox = event.x&#13;&#10;lfoy = event.y&#13;&#10;    if lfoy &gt;= (comp:getHeight()/4)*3  &#13;&#10;  then for i = 0,4,1  &#13;&#10;        do  if lfox &gt;= i*30 and lfox &lt;= i*30 + 30 &#13;&#10;          then comp:getOwner():setModulatorValue(i,false,true,false)&#13;&#10;           end&#13;&#10;       end &#13;&#10;   end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                     uuid="3c808142d6a243c4b22d6ee4450d0fdd" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="lfofreq" uuid="9addb0866ed44cd98018383061e93d6d">
          <luaMethod luaMethodName="KnobPaint7" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;KnobPaint7 = function(comp,g)&#10;kp7vl = comp:getOwner():getValue()&#13;&#10;g:setColour(cKN1)&#13;&#10;g:fillEllipse(9,9,54,54)&#13;&#10;g:setGradientFill(GRD1)&#13;&#10;g:drawEllipse (11.5,11.5,49,49,6)&#13;&#10;g:setColour(cKN2)&#13;&#10;g:drawEllipse (15,15,42,42,1)&#13;&#10;    if kp7vl &lt;= 150 &#13;&#10;  then syncLF0 = (comp:getOwner():getValue()/30.2) - 2.45&#13;&#10;       Lty = &quot;&quot;..comp:getOwner():getValue()&#13;&#10;       Lty2 = 24&#13;&#10;       Lty3 = 28&#13;&#10;       Lty4 = 24&#13;&#10;       Lsw2 = cLED:withAlpha(0.2)&#13;&#10;       Lsw = &quot;Off&quot;&#13;&#10;elseif kp7vl &gt;= 151 and kp7vl &lt;= 166 &#13;&#10;  then syncLF0 = ((comp:getOwner():getValue()-151)/3.05) - 2.45&#13;&#10;       Lty = &quot;&quot;..lfostp[comp:getOwner():getValue()- 150]&#13;&#10;       Lty2 = 20&#13;&#10;       Lty3 = 20&#13;&#10;       Lty4 = 32&#13;&#10;         if kp7vl &lt;= 157 &#13;&#10;       then stwo = &quot;Steps&quot;   &#13;&#10;            stwx = 16&#13;&#10;            stww = 40       &#13;&#10;       else stwo = &quot;Step&quot;   &#13;&#10;            stwx = 20&#13;&#10;            stww = 32 &#13;&#10;        end&#13;&#10;       Lsw2 = cLED   &#13;&#10;       Lsw = &quot;On&quot;&#13;&#10;       g:setColour(cKN3)&#13;&#10;       g:setFont(Font(14.0,1))&#13;&#10;       g:drawText(stwo,stwx,32,stww,16,CENTRE,false)&#13;&#10;   end&#13;&#10;g:setColour(Lsw2)&#13;&#10;g:setFont(lfrqf2)&#13;&#10;g:drawText(Lsw,84,28,64,24,CENTRE,false)&#13;&#10;g:setColour(cLED)&#13;&#10;g:setFont(lfrqf)&#13;&#10;g:drawText(&quot;Step Sync&quot;,82,8,64,16,CENTRE,false)&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),119,10,BLANK,119,60, true))&#13;&#10;g:fillRoundedRectangle(81,8,72 - 3,60 -2,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),119,10,BLANK,119,120, true))&#13;&#10;g:drawRoundedRectangle(81,8,72 - 3,60 -2,1.0,1.0)&#13;&#10;&#13;&#10;g:setColour(cKN3)&#13;&#10;g:setFont(Font(14.0,1))&#13;&#10;g:drawText( Lty,Lty2,Lty3,Lty4,16,CENTRE,false)&#13;&#10;&#13;&#10;g:setOpacity(1.0)&#13;&#10;g:reduceClipRegion(fatpath,AffineTransform (AffineTransform.rotation(syncLF0 ,36,36)))&#13;&#10;g:drawEllipse(9,9, 54,54, 6.0)&#13;&#10;g:setColour(cKN4)&#13;&#10;g:drawEllipse(8,8, 56,56, 5.0)&#13;&#10;g:setColour(cKN1) &#13;&#10;g:fillPath(linpath,AffineTransform (AffineTransform.rotation(syncLF0 ,36,36)))&#13;&#10;g:setColour(cKN2)&#13;&#10;g:fillPath(linpath2,AffineTransform (AffineTransform.rotation(syncLF0 ,36,36)))&#13;&#10;g:setGradientFill(GRD2)  &#13;&#10;g:drawEllipse(8,8,56,56,5.0)&#13;&#10;g:setGradientFill(GRD3)  &#13;&#10;g:drawEllipse(8,8,56,56,5.0)&#13;&#10;g:setColour(cKN1)&#13;&#10;g:fillPath(linpath3,AffineTransform (AffineTransform.rotation(syncLF0 ,36,36)))&#13;&#10;g:setColour(cKN2)&#13;&#10;g:drawEllipse (15,15,42,42,1)&#13;&#10;&#13;&#10;end&#13;&#10;"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="80e07afb897745b49db58433083fe3cb" luaMethodValid="1"/>
          <luaMethod luaMethodName="lfo1" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;lfo1 = function(mod, value)&#10;panel:getComponent(&quot;lfo1Shape&quot;):repaint()&#13;&#10;panel:getComponent(&quot;ModsFeedback3&quot;):repaint()&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="cb06655282674549824acd34f2c07620" luaMethodValid="1"/>
          <luaMethod luaMethodName="lfo2" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;lfo2 = function(mod, value)&#10;panel:getComponent(&quot;lfo2Shape&quot;):repaint()&#13;&#10;panel:getComponent(&quot;ModsFeedback3&quot;):repaint()&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="2b01bd81942244cda1a7a9c07c4faf8f" luaMethodValid="1"/>
          <luaMethod luaMethodName="lfo3" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;lfo3 = function(mod, value)&#10;panel:getComponent(&quot;lfo3Shape&quot;):repaint()&#13;&#10;panel:getComponent(&quot;ModsFeedback3&quot;):repaint()&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="2e05320e3ed848d596669079944abff9" luaMethodValid="1"/>
          <luaMethod luaMethodName="lfo4" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;lfo4 = function(mod, value)&#10;panel:getComponent(&quot;lfo4Shape&quot;):repaint()&#13;&#10;panel:getComponent(&quot;ModsFeedback3&quot;):repaint()&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="3d537777f3ea4a63bfef936a7bbeeba2" luaMethodValid="1"/>
          <luaMethod luaMethodName="KnobDrag7" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;KnobDrag7 = function(comp, event)&#10;knbdr7 = event.y&#13;&#10;local Val = Value()&#13;&#10;         if lfofrqvl == 1&#13;&#10;       then   if knbvl &lt;= 150 then  &#13;&#10;                 local knval =  math.floor((knbcl - knbdr7 )/3 )&#13;&#10;                    if knval+knbvl  &lt;= 0 &#13;&#10;                  then Val = 0 &#13;&#10;                elseif knval+knbvl &gt;= 150 &#13;&#10;                  then Val = 150                 &#13;&#10;                  else Val = knval+knbvl&#13;&#10;                   end&#13;&#10;                    if comp:getOwner():getValue() ~= Val&#13;&#10;                  then comp:getOwner():setModulatorValue(Val,false,true,false)&#13;&#10;                   end &#13;&#10;          elseif knbvl &gt;= 151 then&#13;&#10;                 local knval =  math.floor((knbcl - knbdr7 )/9 )&#13;&#10;                    if knval+ knbvl  &lt;= 151 &#13;&#10;                  then Val = 151 &#13;&#10;                elseif knval + knbvl &gt;= 166 &#13;&#10;                  then Val = 166                 &#13;&#10;                  else Val = knval+knbvl&#13;&#10;                   end&#13;&#10;                    if comp:getOwner():getValue() ~= Val&#13;&#10;                  then comp:getOwner():setModulatorValue(Val,false,true,false)&#13;&#10;                   end &#13;&#10;              end&#13;&#10;        end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                     uuid="6532707e29fd4976b21d4fe88920fc2a" luaMethodValid="1"/>
          <luaMethod luaMethodName="KnobClick7" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;KnobClick7 = function(comp, event)&#10;knbclx = event.x&#13;&#10;knbcl = event.y&#13;&#10;       if knbclx &lt;= 72 &#13;&#10;     then knbvl = comp:getOwner():getValue()&#13;&#10;          lfofrqvl = 1&#13;&#10;   elseif knbclx  &gt;= 80 &#13;&#10;     then lfofrqvl = 0&#13;&#10;          if comp:getOwner():getValue() &lt;= 150 &#13;&#10;        then comp:getOwner():setModulatorValue(151,false,true,false) &#13;&#10;      elseif comp:getOwner():getValue() &gt;= 151&#13;&#10;        then comp:getOwner():setModulatorValue(0,false,true,false)    &#13;&#10;         end  &#13;&#10;      end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                     uuid="0a40b147786b43a191fd06ae0b1533d6" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="oscknob" uuid="fe13296edab8448a968410067fd72755">
          <luaMethod luaMethodName="OscPaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;OscPaint = function(comp,g)&#10;oscVal = comp:getOwner():getValue()&#13;&#10;frq = panel:getModulatorByName(&quot;osc1Frequency&quot;):getValue()&#13;&#10;fne = panel:getModulatorByName(&quot;osc1Fine&quot;):getValue() / 100&#13;&#10;g:setColour(cLED)&#13;&#10;local a1 = comp:getHeight()/2&#13;&#10;local a2 = (comp:getWidth()/((frq/4)+1)+ fne)&#13;&#10;local a3 = comp:getHeight()/3.0&#13;&#10;local a4 = comp:getHeight()/1.5&#13;&#10;pw =  a2 * ((oscVal-4)/100)&#13;&#10;   g:setFont(Shapetxt)&#13;&#10;     if oscVal &lt;= 4 then &#13;&#10;        for d = 0,4  do &#13;&#10;            if d  == oscVal then  &#13;&#10;               g:setOpacity(1.0)&#13;&#10;                     &#13;&#10;        elseif d ~=  oscVal then &#13;&#10;               g:setOpacity(0.2)&#13;&#10;           end&#13;&#10;            g:drawText(&quot;&quot;..shtxt[d+1],(d*44),60,48,40,CENTRE,false)&#13;&#10;        end&#13;&#10; elseif oscVal &gt;= 5 then&#13;&#10;        for d = 0,3  do &#13;&#10;            g:setOpacity(0.2)&#13;&#10;            g:drawText(&quot;&quot;..shtxt[d+1],(d*44),60,48,40,CENTRE,false)        &#13;&#10;        end&#13;&#10;        g:setOpacity(1.0)       &#13;&#10;        g:drawText(&quot;Pulse&quot;,176,60,48,40,CENTRE,false)&#13;&#10;   end&#13;&#10;clposc = Path()&#13;&#10;clposc:addRectangle(2.0,2.0,232 - 4.0, 92 - 4.0)&#13;&#10;g:reduceClipRegion(clposc,AffineTransform())&#13;&#10;g:setColour(cLED:withAlpha(0.2))&#13;&#10;g:drawLine(0,a1,comp:getWidth(),a1,1)&#13;&#10;    if oscVal == 0 then &#13;&#10;&#13;&#10;elseif oscVal == 1 then &#13;&#10;       g:setOpacity(0.2)&#13;&#10;        for h = 0,38 do &#13;&#10;            g:drawLine((a2*h)+(a2/2),comp:getHeight()/4,(a2*h)+(a2/2),(comp:getHeight()/4)*3,1)&#13;&#10;        end&#13;&#10;       g:setOpacity(1.0)&#13;&#10;        for h = 0,30 do &#13;&#10;            g:drawLine((a2*h),a4,(a2*h)+ a2,a3,2)&#13;&#10;            g:drawLine((a2*h)+a2 ,a3, (a2*h)+ a2,a4,2)&#13;&#10;        end&#13;&#10;elseif oscVal == 2 then &#13;&#10;       g:setOpacity(0.2)&#13;&#10;        for h = 0,38 do &#13;&#10;            g:drawLine((a2*h)+(a2/4),comp:getHeight()/4,(a2*h)+(a2/4),(comp:getHeight()/4)*3,1)&#13;&#10;        end&#13;&#10;            g:setOpacity(1.0)&#13;&#10;        for h = 0,30 do &#13;&#10;            g:drawLine((a2*h),a4,(a2*h)+ (a2/2),a3,2)&#13;&#10;            g:drawLine((a2*h)+ (a2/2),a3,((a2*h)+ a2),a4,2)&#13;&#10;        end&#13;&#10;elseif oscVal == 3 then&#13;&#10;       g:setOpacity(0.2)&#13;&#10;        for h = 0,38 do &#13;&#10;            g:drawLine(((a2*h)-8)+((a2-4)/4),comp:getHeight()/4,((a2*h)-8)+((a2-4)/4),(comp:getHeight()/4)*3,1)&#13;&#10;        end&#13;&#10;       g:setOpacity(1.0)&#13;&#10;        for h = 0,32 do &#13;&#10;            g:drawLine((a2*h) - 8,a4,((a2*h)-8)+((a2-4)/2),a3,2)&#13;&#10;            g:drawLine(((a2*h)-8)+((a2-4)/2),a3,((a2*h)+ a2) - 8,a4 - 12,2)&#13;&#10;            g:drawLine(((a2*h)+ a2)-8 ,a4 - 12,((a2*h)+ a2) -8 ,a4,2)&#13;&#10;        end&#13;&#10;elseif oscVal &gt;= 4 then&#13;&#10;       g:setOpacity(0.2)&#13;&#10;         for h = 0,38 do &#13;&#10;             g:drawLine((a2*h),comp:getHeight()/4,(a2*h),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;       g:setOpacity(1.0)&#13;&#10;        for h = 0,30 do &#13;&#10;              g:drawLine((a2*h),a3,(a2*h),a4,2)&#13;&#10;              g:drawLine((a2*h),a3,(a2*h)+ pw,a3,2)&#13;&#10;              g:drawLine((a2*h)+ pw,a3,(a2*h)+ pw,a4,2)&#13;&#10;              g:drawLine((a2*h)+ pw,a4,(a2*h)+ a2,a4,2)&#13;&#10;        end&#13;&#10;       g:drawText(&quot;PW:&quot;..oscVal - 4,4,0,48,24,CENTRE,false)&#13;&#10;   end&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),comp:getWidth(),0,BLANK,comp:getWidth(),100, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-4,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),comp:getWidth(),0,BLANK,comp:getWidth(),400, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-4,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="00890d5a78c24aea864adae434e5b675" luaMethodValid="1"/>
          <luaMethod luaMethodName="OscDrag" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;OscDrag = function(comp, event)&#10;  if ovl ~= nil and ovl &gt;= 4 &#13;&#10;then &#13;&#10;     if oscy &lt; slctshp  &#13;&#10;   then &#13;&#10;     oscdr =  event.x &#13;&#10;     local knval = math.floor((oscdr - oscx )/4)  &#13;&#10;        if knval +  ovl  &gt;= 4 and knval  +  ovl &lt;= 103 &#13;&#10;      then if comp:getOwner():getValue() ~= knval+  ovl&#13;&#10;         then comp:getOwner():setModulatorValue(knval+ovl,false,true,false)&#13;&#10;          end &#13;&#10;       end&#13;&#10;&#13;&#10;    end&#13;&#10; end&#13;&#10;end&#13;&#10;"
                     luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                     uuid="b5e2fafba4cc45f2a2387ddd7c2596f1" luaMethodValid="1"/>
          <luaMethod luaMethodName="Osc2Paint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;Osc2Paint = function(comp,g)&#10;osc2Val = comp:getOwner():getValue()&#13;&#10;frq2 = panel:getModulatorByName(&quot;osc2Frequency&quot;):getValue()&#13;&#10;fne2 = panel:getModulatorByName(&quot;osc2Fine&quot;):getValue() / 100&#13;&#10;g:setColour(cLED)&#13;&#10;local a1 = comp:getHeight()/2&#13;&#10;local a2 = (comp:getWidth()/((frq2/4)+1)+ fne2)&#13;&#10;local a3 = comp:getHeight()/3.0&#13;&#10;local a4 = comp:getHeight()/1.5&#13;&#10;pw2 =  a2 * ((osc2Val-4)/100)&#13;&#10;g:setFont(Shapetxt)&#13;&#10;      if osc2Val &lt;= 4 then &#13;&#10;        for d = 0,4  do &#13;&#10;            if d  == osc2Val then  &#13;&#10;               g:setOpacity(1.0)&#13;&#10;                     &#13;&#10;        elseif d ~=  osc2Val then &#13;&#10;               g:setOpacity(0.2)&#13;&#10;           end&#13;&#10;            g:drawText(&quot;&quot;..shtxt[d+1],(d*44),60,48,40,CENTRE,false)&#13;&#10;        end&#13;&#10; elseif osc2Val &gt;= 5 then&#13;&#10;        for d = 0,3  do &#13;&#10;            g:setOpacity(0.2)&#13;&#10;            g:drawText(&quot;&quot;..shtxt[d+1],(d*44),60,48,40,CENTRE,false)        &#13;&#10;        end&#13;&#10;        g:setOpacity(1.0)       &#13;&#10;        g:drawText(&quot;Pulse&quot;,176,60,48,40,CENTRE,false)&#13;&#10;   end&#13;&#10;clposc2 = Path()&#13;&#10;clposc2:addRectangle(2.0,2.0,232 - 4.0, 92 - 4.0)&#13;&#10;g:reduceClipRegion(clposc2,AffineTransform())&#13;&#10;g:setColour(cLED:withAlpha(0.2))&#13;&#10;g:drawLine(0,a1,comp:getWidth(),a1,1)&#13;&#10;    if osc2Val == 0 then &#13;&#10;&#13;&#10;elseif osc2Val == 1 then &#13;&#10;       g:setOpacity(0.2)&#13;&#10;        for h = 0,38 do &#13;&#10;            g:drawLine((a2*h)+(a2/2),comp:getHeight()/4,(a2*h)+(a2/2),(comp:getHeight()/4)*3,1)&#13;&#10;        end&#13;&#10;       g:setOpacity(1.0)&#13;&#10;        for h = 0,30 do &#13;&#10;            g:drawLine((a2*h),a4,(a2*h)+ a2,a3,2)&#13;&#10;            g:drawLine((a2*h)+a2 ,a3, (a2*h)+ a2,a4,2)&#13;&#10;        end&#13;&#10;elseif osc2Val == 2 then &#13;&#10;       g:setOpacity(0.2)&#13;&#10;        for h = 0,38 do &#13;&#10;            g:drawLine((a2*h)+(a2/4),comp:getHeight()/4,(a2*h)+(a2/4),(comp:getHeight()/4)*3,1)&#13;&#10;        end&#13;&#10;            g:setOpacity(1.0)&#13;&#10;        for h = 0,30 do &#13;&#10;            g:drawLine((a2*h),a4,(a2*h)+ (a2/2),a3,2)&#13;&#10;            g:drawLine((a2*h)+ (a2/2),a3,((a2*h)+ a2),a4,2)&#13;&#10;        end&#13;&#10;elseif osc2Val == 3 then&#13;&#10;       g:setOpacity(0.2)&#13;&#10;        for h = 0,38 do &#13;&#10;            g:drawLine(((a2*h)-8)+((a2-4)/4),comp:getHeight()/4,((a2*h)-8)+((a2-4)/4),(comp:getHeight()/4)*3,1)&#13;&#10;        end&#13;&#10;       g:setOpacity(1.0)&#13;&#10;        for h = 0,32 do &#13;&#10;            g:drawLine((a2*h) - 8,a4,((a2*h)-8)+((a2-4)/2),a3,2)&#13;&#10;            g:drawLine(((a2*h)-8)+((a2-4)/2),a3,((a2*h)+ a2) - 8,a4 - 12,2)&#13;&#10;            g:drawLine(((a2*h)+ a2)-8 ,a4 - 12,((a2*h)+ a2) -8 ,a4,2)&#13;&#10;        end&#13;&#10;elseif osc2Val &gt;= 4 then&#13;&#10;       g:setOpacity(0.2)&#13;&#10;         for h = 0,38 do &#13;&#10;             g:drawLine((a2*h),comp:getHeight()/4,(a2*h),(comp:getHeight()/4)*3,1)&#13;&#10;         end&#13;&#10;       g:setOpacity(1.0)&#13;&#10;        for h = 0,30 do &#13;&#10;              g:drawLine((a2*h),a3,(a2*h),a4,2)&#13;&#10;              g:drawLine((a2*h),a3,(a2*h)+ pw2,a3,2)&#13;&#10;              g:drawLine((a2*h)+ pw2,a3,(a2*h)+ pw2,a4,2)&#13;&#10;              g:drawLine((a2*h)+ pw2,a4,(a2*h)+ a2,a4,2)&#13;&#10;        end&#13;&#10;       g:drawText(&quot;PW:&quot;..osc2Val - 4,4,0,48,24,CENTRE,false)&#13;&#10;   end&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),comp:getWidth(),0,BLANK,comp:getWidth(),100, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-4,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),comp:getWidth(),0,BLANK,comp:getWidth(),400, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-4,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="dd1f959330854b32b0df99ee8e4c1c3e" luaMethodValid="1"/>
          <luaMethod luaMethodName="OscClick" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;OscClick = function(comp, event)&#10;oscx = event.x&#13;&#10;oscy = event.y&#13;&#10;slctshp = (comp:getHeight()/4)*3 &#13;&#10;     if oscy &gt;= slctshp then &#13;&#10;        for i = 0,4,1 do &#13;&#10;           if oscx &gt;= i*44 and oscx &lt;= i*44 + 44 then &#13;&#10;              comp:getOwner():setModulatorValue(i,false,true,false)&#13;&#10;          end&#13;&#10;        end&#13;&#10;   else ovl = comp:getOwner():getValue()&#13;&#10;    end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                     uuid="9065f1555832471aa60f5498350c6e1b" luaMethodValid="1"/>
          <luaMethod luaMethodName="freq1" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;freq1 = function(mod, value)&#10;panel:getComponent(&quot;osc1Shape&quot;):repaint()&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="8e57b291c1dc4021a0c6d44e3ca0dc6b" luaMethodValid="1"/>
          <luaMethod luaMethodName="freq2" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;freq2 = function(mod, value)&#10;panel:getComponent(&quot;osc2Shape&quot;):repaint()&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="357702d7d251498faadaff10741b9f2e" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="Sequencers" uuid="d6e95339bba9471c8eff370f368ab879">
          <luaMethod luaMethodName="Seq1Paint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;Seq1Paint = function(comp,g)&#10;S1V  = comp:getOwner():getValue()&#13;&#10;s1dest = panel:getModulatorByName(&quot;Seq1Destination&quot;):getValue()&#13;&#10;g:setColour(cLED)&#13;&#10;g:setFont(StText)&#13;&#10;    if S1V == 0 &#13;&#10;  then RST = 116 &#13;&#10;       for z = 0,15 &#13;&#10;        do &#13;&#10;           g:setOpacity(0.2)&#13;&#10;           g:drawText(&quot;RST&quot;,(28*z)+8,304,24,16,CENTRE,false) &#13;&#10;       end&#13;&#10;elseif S1V &gt;= 1  &#13;&#10;  then RST = comp:getOwner():getValue() + 100&#13;&#10;       for u = 0,15 &#13;&#10;        do if u + 1 == S1V  &#13;&#10;         then g:setOpacity(1.0)&#13;&#10;         else g:setOpacity(0.2)&#13;&#10;          end&#13;&#10;           g:drawText(&quot;RST&quot;,(28*u)+8,304,24,16,CENTRE,false)&#13;&#10;       end&#13;&#10;   end&#13;&#10;&#13;&#10;Seq1vals = {}&#13;&#10;  for p = 101,RST  &#13;&#10;   do Seq1vals[p-100] = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,p):getValue()&#13;&#10;      if Seq1vals[p-100] &lt;= 125&#13;&#10;    then g:setOpacity(1.0)&#13;&#10;         if s1dest == 1 or s1dest == 2 or s1dest == 3&#13;&#10;       then sq1p = math.floor (Seq1vals[p-100]/2)&#13;&#10;            g:drawText(&quot;&quot;..PITCH[sq1p+1],(28*(p - 101))+8,0,24,16,CENTRE,false)&#13;&#10;            if Seq1vals[p-100]%2 == 1&#13;&#10;          then g:drawText(&quot;+&quot;,(28*(p - 101))+8,9,24,16,CENTRE,false)&#13;&#10;           end &#13;&#10;       else g:drawText(&quot;&quot;..Seq1vals[p-100],(28*(p - 101))+8,4,24,16,CENTRE,false) &#13;&#10;        end&#13;&#10;         g:drawRect(((p-101)*28)+8,24 ,24, 250,2)&#13;&#10;         g:fillRect(8+((p-101)*28),274 - (Seq1vals[p-100]*2),22,Seq1vals[p-100]*2)&#13;&#10;         g:setOpacity(0.2)&#13;&#10;         g:drawText(&quot;OFF&quot;,(28*(p - 101))+8,280,24,16,CENTRE,false) &#13;&#10;  elseif Seq1vals[p-100] == 127&#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         g:drawRect(((p-101)*28)+8,24 ,24, 250,2)&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         g:drawText(&quot;OFF&quot;,(28*(p - 101))+8,280,24,16,CENTRE,false) &#13;&#10;     end&#13;&#10;&#13;&#10;  end&#13;&#10;        g:setGradientFill(ColourGradient(Colour(0x35FFFFFF),220, 150,BLANK,480,150, true))&#13;&#10;        g:fillRoundedRectangle(  1, 1,458,324,1.0)&#13;&#10;        g:setGradientFill(ColourGradient(Colour(0x35FFFFFF),220, 150,BLANK,720,150, true))&#13;&#10;        g:drawRoundedRectangle(  1, 1,458,324,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="dc4a6ac48f184bc78b6edb0ca4b3d705" luaMethodValid="1"/>
          <luaMethod luaMethodName="Seq1Click" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;Seq1Click = function(comp, event)&#10;S1VAL = comp:getOwner():getValue() &#13;&#10;s1clx = event.x&#13;&#10;s1cly = event.y &#13;&#10;  if s1cly &gt;= 20 and s1cly &lt;= 274&#13;&#10;then if S1VAL == 0  &#13;&#10;   then for b = 0,15  &#13;&#10;         do if s1clx &gt;= 8+( b*28) and s1clx &lt;= (b * 28 )+ 36 &#13;&#10;          then fl1st = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,b + 101) &#13;&#10;               fl1stvl = fl1st:getValue()&#13;&#10;           end&#13;&#10;        end&#13;&#10; elseif S1VAL &gt;= 2&#13;&#10;   then for e = 0,S1VAL - 2  &#13;&#10;         do if s1clx &gt;=  (e*28)+8 and s1clx &lt;= (e * 28 )+ 36 &#13;&#10;          then fl1st = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,e + 101) &#13;&#10;               fl1stvl = fl1st:getValue()&#13;&#10;           end&#13;&#10;        end&#13;&#10;    end&#13;&#10; end&#13;&#10;  if s1cly &gt;= 280 and s1cly &lt;= 303&#13;&#10;then if S1VAL == 0  &#13;&#10;   then for a = 0,15  &#13;&#10;         do if s1clx &gt;= 8+(a*28) and s1clx &lt;= (a * 28 )+ 36 &#13;&#10;          then b = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,a + 101)&#13;&#10;               c = b:getValue()&#13;&#10;               if c == 127 &#13;&#10;             then b:setModulatorValue(0,false,true,false)&#13;&#10;             else b:setModulatorValue(127,false,true,false)&#13;&#10;              end&#13;&#10;           end&#13;&#10;        end&#13;&#10; elseif S1VAL &gt;= 2&#13;&#10;   then for h = 0,S1VAL - 2  &#13;&#10;         do if s1clx &gt;= 8+(h*28) and s1clx &lt;= (h * 28 )+ 36 &#13;&#10;          then i = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,h + 101)&#13;&#10;               j = i:getValue()&#13;&#10;               if j == 127 &#13;&#10;             then i:setModulatorValue(0,false,true,false)&#13;&#10;             else i:setModulatorValue(127,false,true,false)&#13;&#10;              end&#13;&#10;           end&#13;&#10;        end&#13;&#10;    end&#13;&#10; end&#13;&#10;  if s1cly &gt;= 304  &#13;&#10;then for d = 0,15  &#13;&#10;      do if s1clx &gt;= 8+(d*28) and s1clx &lt;= (d * 28 )+ 36 &#13;&#10;       then comp:getOwner():setModulatorValue(d+1,false,false,false)&#13;&#10;            e = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,d + 101)&#13;&#10;            f = e:getValue()&#13;&#10;            if f == 126 &#13;&#10;          then e:setModulatorValue(0,false,true,false) &#13;&#10;          else e:setModulatorValue(126,false,true,false)&#13;&#10;           end&#13;&#10;        end&#13;&#10;     end&#13;&#10; end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                     uuid="5b0e64d455314166a00391eade5115d8" luaMethodValid="1"/>
          <luaMethod luaMethodName="Seq1Drag" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;Seq1Drag = function(comp, event)&#10;s1drx = event.x&#13;&#10;s1dry = event.y&#13;&#10; local Val = Value()&#13;&#10;    if S1VAL == 0 &#13;&#10;  then if fl1stvl ~= nil then&#13;&#10;          if fl1stvl &lt;= 125&#13;&#10;        then local stval =  math.floor( (   s1cly - s1dry)/2 )  &#13;&#10;                if stval+fl1stvl  &lt;= 0 &#13;&#10;              then Val = 0 &#13;&#10;            elseif stval+fl1stvl &gt;= 125 &#13;&#10;              then Val = 125                 &#13;&#10;              else Val = stval+fl1stvl&#13;&#10;               end&#13;&#10;                if stval+fl1stvl ~= fl1stvl &#13;&#10;              then fl1st:setModulatorValue(Val,false,true,false)&#13;&#10;               end&#13;&#10;         end&#13;&#10;      end&#13;&#10;elseif S1VAL &gt;= 2&#13;&#10;  then if s1drx &gt;= 8 and s1drx &lt;= ((S1VAL - 2) *28)+ 36 &#13;&#10;     then if fl1stvl ~= nil then&#13;&#10;             if fl1stvl &lt;= 125&#13;&#10;           then local stval =  math.floor( (   s1cly - s1dry)/2 )  &#13;&#10;                   if stval+fl1stvl  &lt;= 0 &#13;&#10;                 then Val = 0 &#13;&#10;               elseif stval+fl1stvl &gt;= 125 &#13;&#10;                 then Val = 125                 &#13;&#10;                 else Val = stval+fl1stvl&#13;&#10;                  end&#13;&#10;                   if stval+fl1stvl ~= fl1stvl &#13;&#10;                 then fl1st:setModulatorValue(Val,false,true,false)&#13;&#10;                  end&#13;&#10;            end&#13;&#10;         end&#13;&#10;      end&#13;&#10;   end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                     uuid="cf6c17cd34ee4863b8fe4e334b04cc07" luaMethodValid="1"/>
          <luaMethod luaMethodName="seq1vc" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;seq1vc = function(mod, value)&#10;    if value ~= 0 &#13;&#10;   then for r = 101,116&#13;&#10;         do b = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,r)&#13;&#10;                m = b:getValue()&#13;&#10;                if r - 100  ~= value&#13;&#10;              then if m == 126 &#13;&#10;                 then b:setModulatorValue(0,false,true,false)&#13;&#10;                  end&#13;&#10;               end&#13;&#10;        end&#13;&#10;   end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="fafdbe1901014a0c9a4b7d38d068f9fb" luaMethodValid="1"/>
          <luaMethod luaMethodName="S1stch" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;S1stch = function(mod, value)&#10;SetSQ1 = mod:getProperty(&quot;modulatorCustomIndex&quot;) -100&#13;&#10;sq1rp = panel:getComponent(&quot;Sequence1&quot;)&#13;&#10;sq1vl = sq1rp:getOwner():getValue()&#13;&#10;   if sq1vl == SetSQ1 &#13;&#10; then if value ~= 126 &#13;&#10;    then sq1rp:getOwner():setModulatorValue(0,false,false,false)&#13;&#10;     end&#13;&#10; else if value ~= 126&#13;&#10;    then sq1rp:repaint()&#13;&#10;    else sq1rp:getOwner():setModulatorValue(SetSQ1 ,false,false,false)&#13;&#10;     end&#13;&#10;  end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="d0ea37b767b7439bb90e0c726245fb17" luaMethodValid="1"/>
          <luaMethod luaMethodName="Dest1repaint" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;Dest1repaint = function(mod, value)&#10;  if sq1rp ~= nil &#13;&#10;then sq1rp:repaint()&#13;&#10; end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="0f077deb01444cb6bc98a75d4339ca10" luaMethodValid="1"/>
          <luaMethod luaMethodName="Seq2Paint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;Seq2Paint = function(comp,g)&#10;S2V  = comp:getOwner():getValue()&#13;&#10;s2dest = panel:getModulatorByName(&quot;Seq2Destination&quot;):getValue()&#13;&#10;g:setColour(cLED)&#13;&#10;g:setFont(StText)&#13;&#10;    if S2V == 0 &#13;&#10;  then RST2 = 216 &#13;&#10;       for z = 0,15 &#13;&#10;        do &#13;&#10;           g:setOpacity(0.2)&#13;&#10;           g:drawText(&quot;RST&quot;,(28*z)+8,304,24,16,CENTRE,false) &#13;&#10;       end&#13;&#10;elseif S2V &gt;= 1  &#13;&#10;  then RST2 = comp:getOwner():getValue() + 200&#13;&#10;       for u = 0,15 &#13;&#10;        do if u + 1 == S2V  &#13;&#10;         then g:setOpacity(1.0)&#13;&#10;         else g:setOpacity(0.2)&#13;&#10;          end&#13;&#10;           g:drawText(&quot;RST&quot;,(28*u)+8,304,24,16,CENTRE,false)&#13;&#10;       end&#13;&#10;   end&#13;&#10;&#13;&#10;Seq2vals = {}&#13;&#10;  for p = 201,RST2  &#13;&#10;   do Seq2vals[p-200] = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,p):getValue()&#13;&#10;      if Seq2vals[p-200] &lt;= 125&#13;&#10;    then g:setOpacity(1.0)&#13;&#10;         if s2dest == 1 or s2dest == 2 or s2dest == 3&#13;&#10;       then sq2p = math.floor (Seq2vals[p-200]/2)&#13;&#10;            g:drawText(string.format(&quot;%s&quot;,PITCH[sq2p+1]),(28*(p - 201))+8,0,24,16,CENTRE,false)&#13;&#10;            if Seq2vals[p-200]%2 == 1&#13;&#10;          then g:drawText(&quot;+&quot;,(28*(p - 201))+8,9,24,16,CENTRE,false)&#13;&#10;           end &#13;&#10;       else g:drawText(string.format(&quot;%s&quot;,Seq2vals[p-200]),(28*(p - 201))+8,4,24,16,CENTRE,false) &#13;&#10;        end&#13;&#10;         g:drawRect(((p-201)*28)+8,24 ,24, 250,2)&#13;&#10;         g:fillRect(8+((p-201)*28),274 - (Seq2vals[p-200]*2),22,Seq2vals[p-200]*2)&#13;&#10;         g:setOpacity(0.2)&#13;&#10;         g:drawText(&quot;OFF&quot;,(28*(p - 201))+8,280,24,16,CENTRE,false) &#13;&#10;  elseif Seq2vals[p-200] == 127&#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         g:drawRect(((p-201)*28)+8,24 ,24, 250,2)&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         g:drawText(&quot;OFF&quot;,(28*(p - 201))+8,280,24,16,CENTRE,false) &#13;&#10;     end&#13;&#10;&#13;&#10;  end&#13;&#10;g:setGradientFill(ColourGradient(Colour(0x35FFFFFF),220, 150,BLANK,480,150, true))&#13;&#10;g:fillRoundedRectangle(  1, 1,458,324,1.0)&#13;&#10;g:setGradientFill(ColourGradient(Colour(0x35FFFFFF),220, 150,BLANK,720,150, true))&#13;&#10;g:drawRoundedRectangle(  1, 1,458,324,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="58daf18c9d3744dd9b8d214d97fc5028" luaMethodValid="1"/>
          <luaMethod luaMethodName="Seq2Click" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;Seq2Click = function(comp, event)&#10;S2VAL = comp:getOwner():getValue() &#13;&#10;s2clx = event.x&#13;&#10;s2cly = event.y &#13;&#10;  if s2cly &gt;= 20 and s2cly &lt;= 274&#13;&#10;then if S2VAL == 0  &#13;&#10;   then for b = 0,15  &#13;&#10;         do if s2clx &gt;= 8+(b*28) and s2clx &lt;= (b * 28 )+ 36 &#13;&#10;          then fl2st = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,b + 201) &#13;&#10;               fl2stvl = fl2st:getValue()&#13;&#10;           end&#13;&#10;        end&#13;&#10; elseif S2VAL &gt;= 2&#13;&#10;   then for e = 0,S2VAL - 2  &#13;&#10;         do if s2clx &gt;= 8+(e*28) and s2clx &lt;= (e * 28 )+ 36 &#13;&#10;          then fl2st = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,e + 201) &#13;&#10;               fl2stvl = fl2st:getValue()&#13;&#10;           end&#13;&#10;        end&#13;&#10;    end&#13;&#10; end&#13;&#10;  if s2cly &gt;= 280 and s2cly &lt;= 303&#13;&#10;then if S2VAL == 0  &#13;&#10;   then for a = 0,15  &#13;&#10;         do if s2clx &gt;= 8+(a*28) and s2clx &lt;= (a * 28 )+ 36 &#13;&#10;          then b = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,a + 201)&#13;&#10;               c = b:getValue()&#13;&#10;               if c == 127 &#13;&#10;             then b:setModulatorValue(0,false,true,false)&#13;&#10;             else b:setModulatorValue(127,false,true,false)&#13;&#10;              end&#13;&#10;           end&#13;&#10;        end&#13;&#10; elseif S2VAL &gt;= 2&#13;&#10;   then for h = 0,S2VAL - 2  &#13;&#10;         do if s2clx &gt;= 8+(h*28) and s2clx &lt;= (h * 28 )+ 36 &#13;&#10;          then i = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,h + 201)&#13;&#10;               j = i:getValue()&#13;&#10;               if j == 127 &#13;&#10;             then i:setModulatorValue(0,false,true,false)&#13;&#10;             else i:setModulatorValue(127,false,true,false)&#13;&#10;              end&#13;&#10;           end&#13;&#10;        end&#13;&#10;    end&#13;&#10; end&#13;&#10;  if s2cly &gt;= 304  &#13;&#10;then for d = 0,15  &#13;&#10;      do if s2clx &gt;= 8+(d*28) and s2clx &lt;= (d * 28 )+ 36 &#13;&#10;       then comp:getOwner():setModulatorValue(d+1,false,false,false)&#13;&#10;            e = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,d + 201)&#13;&#10;            f = e:getValue()&#13;&#10;            if f == 126 &#13;&#10;          then e:setModulatorValue(0,false,true,false) &#13;&#10;          else e:setModulatorValue(126,false,true,false)&#13;&#10;           end&#13;&#10;        end&#13;&#10;     end&#13;&#10; end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                     uuid="bd65f5f2c59043f78bb4b72d40451e61" luaMethodValid="1"/>
          <luaMethod luaMethodName="Seq2Drag" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;Seq2Drag = function(comp, event)&#10;s2drx = event.x&#13;&#10;s2dry = event.y&#13;&#10; local Val = Value()&#13;&#10;    if S2VAL == 0 &#13;&#10;  then if fl2stvl ~= nil then&#13;&#10;          if fl2stvl &lt;= 125&#13;&#10;        then local stval =  math.floor( (   s2cly - s2dry)/2 )  &#13;&#10;                if stval+fl2stvl  &lt;= 0 &#13;&#10;              then Val = 0 &#13;&#10;            elseif stval+fl2stvl &gt;= 125 &#13;&#10;              then Val = 125                 &#13;&#10;              else Val = stval+fl2stvl&#13;&#10;               end&#13;&#10;                if stval+fl2stvl ~= fl2stvl &#13;&#10;              then fl2st:setModulatorValue(Val,false,true,false)&#13;&#10;               end&#13;&#10;         end&#13;&#10;      end&#13;&#10;elseif S2VAL &gt;= 2&#13;&#10;  then if s2drx &gt;= 8 and s2drx &lt;= ((S2VAL - 2) *28)+ 36 &#13;&#10;     then if fl2stvl ~= nil then&#13;&#10;             if fl2stvl &lt;= 125&#13;&#10;           then local stval =  math.floor( (   s2cly - s2dry)/2 )  &#13;&#10;                   if stval+fl2stvl  &lt;= 0 &#13;&#10;                 then Val = 0 &#13;&#10;               elseif stval+fl2stvl &gt;= 125 &#13;&#10;                 then Val = 125                 &#13;&#10;                 else Val = stval+fl2stvl&#13;&#10;                  end&#13;&#10;                   if stval+fl2stvl ~= fl2stvl &#13;&#10;                 then f21st:setModulatorValue(Val,false,true,false)&#13;&#10;                  end&#13;&#10;            end&#13;&#10;         end&#13;&#10;      end&#13;&#10;   end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                     uuid="2335960ee4444c76b88bb731ec6da1bc" luaMethodValid="1"/>
          <luaMethod luaMethodName="seq2vc" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;seq2vc = function(mod, value)&#10;    if value ~= 0 &#13;&#10;   then for r = 201,216&#13;&#10;         do b = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,r)&#13;&#10;                m = b:getValue()&#13;&#10;                if r - 200  ~= value&#13;&#10;              then if m == 126 &#13;&#10;                 then b:setModulatorValue(0,false,true,false)&#13;&#10;                  end&#13;&#10;               end&#13;&#10;        end&#13;&#10;   end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="33307b2fbaa84e7da4c1ecb57988e303" luaMethodValid="1"/>
          <luaMethod luaMethodName="S2tch" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;S2tch = function(mod, value)&#10;SetSQ2 = mod:getProperty(&quot;modulatorCustomIndex&quot;) - 200&#13;&#10;sq2rp = panel:getComponent(&quot;Sequence2&quot;)&#13;&#10;sq2vl = sq2rp:getOwner():getValue()&#13;&#10;   if sq2vl == SetSQ2 &#13;&#10; then if value ~= 126 &#13;&#10;    then sq2rp:getOwner():setModulatorValue(0,false,false,false)&#13;&#10;     end&#13;&#10; else if value ~= 126&#13;&#10;    then sq2rp:repaint()&#13;&#10;    else sq2rp:getOwner():setModulatorValue(SetSQ2 ,false,false,false)&#13;&#10;     end&#13;&#10;  end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="8a935dc8af61447d90d0e410587bd158" luaMethodValid="1"/>
          <luaMethod luaMethodName="Dest2repaint" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;Dest2repaint = function(mod, value)&#10;  if sq2rp ~= nil &#13;&#10;then sq2rp:repaint()&#13;&#10; end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="56f5751515f741708c1b0a82e2f84d25" luaMethodValid="1"/>
          <luaMethod luaMethodName="Seq3Paint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;Seq3Paint = function(comp,g)&#10;S3V  = comp:getOwner():getValue()&#13;&#10;s3dest = panel:getModulatorByName(&quot;Seq3Destination&quot;):getValue()&#13;&#10;g:setColour(cLED)&#13;&#10;g:setFont(StText)&#13;&#10;    if S3V == 0 &#13;&#10;  then RST3 = 316 &#13;&#10;       for z = 0,15 &#13;&#10;        do &#13;&#10;           g:setOpacity(0.2)&#13;&#10;           g:drawText(&quot;RST&quot;,(28*z)+8,304,24,16,CENTRE,false) &#13;&#10;       end&#13;&#10;elseif S3V &gt;= 1  &#13;&#10;  then RST3 = comp:getOwner():getValue() + 300&#13;&#10;       for u = 0,15 &#13;&#10;        do if u + 1 == S3V  &#13;&#10;         then g:setOpacity(1.0)&#13;&#10;         else g:setOpacity(0.2)&#13;&#10;          end&#13;&#10;           g:drawText(&quot;RST&quot;,(28*u)+8,304,24,16,CENTRE,false)&#13;&#10;       end&#13;&#10;   end&#13;&#10;&#13;&#10;Seq3vals = {}&#13;&#10;  for p = 301,RST3  &#13;&#10;   do Seq3vals[p-300] = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,p):getValue()&#13;&#10;      if Seq3vals[p-300] &lt;= 125&#13;&#10;    then g:setOpacity(1.0)&#13;&#10;         if s3dest == 1 or s3dest == 2 or s3dest == 3&#13;&#10;       then sq3p = math.floor (Seq3vals[p-300]/2)&#13;&#10;            g:drawText(string.format(&quot;%s&quot;,PITCH[sq3p+1]),(28*(p - 301))+8,0,24,16,CENTRE,false)&#13;&#10;            if Seq3vals[p-300]%2 == 1&#13;&#10;          then g:drawText(&quot;+&quot;,28*(p - 301),9,24,16,CENTRE,false)&#13;&#10;           end &#13;&#10;       else g:drawText(string.format(&quot;%s&quot;,Seq3vals[p-300]),(28*(p - 301))+8,4,24,16,CENTRE,false) &#13;&#10;        end&#13;&#10;         g:drawRect(((p-301)*28)+8,24 ,24, 250,2)&#13;&#10;         g:fillRect(8+((p-301)*28),274 - (Seq3vals[p-300]*2),22,Seq3vals[p-300]*2)&#13;&#10;         g:setOpacity(0.2)&#13;&#10;         g:drawText(&quot;OFF&quot;,(28*(p - 301))+8,280,24,16,CENTRE,false) &#13;&#10;  elseif Seq3vals[p-300] == 127&#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         g:drawRect(((p-301)*28)+8,24 ,24, 250,2)&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         g:drawText(&quot;OFF&quot;,(28*(p - 301))+8,280,24,16,CENTRE,false) &#13;&#10;     end&#13;&#10;&#13;&#10;  end&#13;&#10;g:setGradientFill(ColourGradient(Colour(0x35FFFFFF),220, 150,BLANK,480,150, true))&#13;&#10;g:fillRoundedRectangle(  1, 1,458,324,1.0)&#13;&#10;g:setGradientFill(ColourGradient(Colour(0x35FFFFFF),220, 150,BLANK,720,150, true))&#13;&#10;g:drawRoundedRectangle(  1, 1,458,324,1.0,1.0)&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="4d03032780b74d359c9997f0b9ae022a" luaMethodValid="1"/>
          <luaMethod luaMethodName="Seq3Click" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;Seq3Click = function(comp, event)&#10;S3VAL = comp:getOwner():getValue() &#13;&#10;s3clx = event.x&#13;&#10;s3cly = event.y &#13;&#10;  if s3cly &gt;= 20 and s3cly &lt;= 274&#13;&#10;then if S3VAL == 0  &#13;&#10;   then for b = 0,15  &#13;&#10;         do if s3clx &gt;=  8+(b*28) and s3clx &lt;= (b * 28 )+ 36 &#13;&#10;          then fl3st = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,b + 301) &#13;&#10;               fl3stvl = fl3st:getValue()&#13;&#10;           end&#13;&#10;        end&#13;&#10; elseif S3VAL &gt;= 2&#13;&#10;   then for e = 0,S3VAL - 2  &#13;&#10;         do if s3clx &gt;= 8+(e*28) and s3clx &lt;= (e * 28 )+ 36 &#13;&#10;          then fl3st = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,e + 301) &#13;&#10;               fl3stvl = fl3st:getValue()&#13;&#10;           end&#13;&#10;        end&#13;&#10;    end&#13;&#10; end&#13;&#10;  if s3cly &gt;= 280 and s3cly &lt;= 303&#13;&#10;then if S3VAL == 0  &#13;&#10;   then for a = 0,15  &#13;&#10;         do if s3clx &gt;= 8+(a*28) and s3clx &lt;= (a * 28 )+ 36 &#13;&#10;          then b = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,a + 301)&#13;&#10;               c = b:getValue()&#13;&#10;               if c == 127 &#13;&#10;             then b:setModulatorValue(0,false,true,false)&#13;&#10;             else b:setModulatorValue(127,false,true,false)&#13;&#10;              end&#13;&#10;           end&#13;&#10;        end&#13;&#10; elseif S3VAL &gt;= 2&#13;&#10;   then for h = 0,S3VAL - 2  &#13;&#10;         do if s3clx &gt;= 8+(h*28) and s3clx &lt;= (h * 28 )+ 36 &#13;&#10;          then i = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,h + 301)&#13;&#10;               j = i:getValue()&#13;&#10;               if j == 127 &#13;&#10;             then i:setModulatorValue(0,false,true,false)&#13;&#10;             else i:setModulatorValue(127,false,true,false)&#13;&#10;              end&#13;&#10;           end&#13;&#10;        end&#13;&#10;    end&#13;&#10; end&#13;&#10;  if s3cly &gt;= 304  &#13;&#10;then for d = 0,15  &#13;&#10;      do if s3clx &gt;= 8+(d*28) and s3clx &lt;= (d * 28 )+ 36&#13;&#10;       then comp:getOwner():setModulatorValue(d+1,false,false,false)&#13;&#10;            e = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,d + 301)&#13;&#10;            f = e:getValue()&#13;&#10;            if f == 126 &#13;&#10;          then e:setModulatorValue(0,false,true,false) &#13;&#10;          else e:setModulatorValue(126,false,true,false)&#13;&#10;           end&#13;&#10;        end&#13;&#10;     end&#13;&#10; end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                     uuid="344868b65b574db89a8eefd88cf5f2da" luaMethodValid="1"/>
          <luaMethod luaMethodName="Seq3Drag" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;Seq3Drag = function(comp, event)&#10;s3drx = event.x&#13;&#10;s3dry = event.y&#13;&#10; local Val = Value()&#13;&#10;    if S3VAL == 0 &#13;&#10;  then if fl3stvl ~= nil then&#13;&#10;          if fl3stvl &lt;= 125&#13;&#10;        then local stval =  math.floor( (   s3cly - s3dry)/2 )  &#13;&#10;                if stval+fl3stvl  &lt;= 0 &#13;&#10;              then Val = 0 &#13;&#10;            elseif stval+fl3stvl &gt;= 125 &#13;&#10;              then Val = 125                 &#13;&#10;              else Val = stval+fl3stvl&#13;&#10;               end&#13;&#10;                if stval+fl3stvl ~= fl3stvl &#13;&#10;              then fl3st:setModulatorValue(Val,false,true,false)&#13;&#10;               end&#13;&#10;         end&#13;&#10;      end&#13;&#10;elseif S3VAL &gt;= 2&#13;&#10;  then if s3drx &gt;= 8 and s3drx &lt;= ((S3VAL - 2) *28)+ 36 &#13;&#10;     then if fl3stvl ~= nil then&#13;&#10;             if fl3stvl &lt;= 125&#13;&#10;           then local stval =  math.floor( (   s3cly - s3dry)/2 )  &#13;&#10;                   if stval+fl3stvl  &lt;= 0 &#13;&#10;                 then Val = 0 &#13;&#10;               elseif stval+fl3stvl &gt;= 125 &#13;&#10;                 then Val = 125                 &#13;&#10;                 else Val = stval+fl3stvl&#13;&#10;                  end&#13;&#10;                   if stval+fl3stvl ~= fl3stvl &#13;&#10;                 then fl3st:setModulatorValue(Val,false,true,false)&#13;&#10;                  end&#13;&#10;            end&#13;&#10;         end&#13;&#10;      end&#13;&#10;   end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                     uuid="e8db9b41e2ae4a62b432d0ff82b68b64" luaMethodValid="1"/>
          <luaMethod luaMethodName="seq3vc" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;seq3vc = function(mod, value)&#10;    if value ~= 0 &#13;&#10;   then for r = 301,316&#13;&#10;         do b = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,r)&#13;&#10;                m = b:getValue()&#13;&#10;                if r - 300  ~= value&#13;&#10;              then if m == 126 &#13;&#10;                 then b:setModulatorValue(0,false,true,false)&#13;&#10;                  end&#13;&#10;               end&#13;&#10;        end&#13;&#10;   end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="2dec2888e7d94e4eb0d4263167c8436b" luaMethodValid="1"/>
          <luaMethod luaMethodName="S3stch" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;S3stch = function(mod, value)&#10;SetSQ3 = mod:getProperty(&quot;modulatorCustomIndex&quot;) - 300&#13;&#10;sq3rp = panel:getComponent(&quot;Sequence3&quot;)&#13;&#10;sq3vl = sq3rp:getOwner():getValue()&#13;&#10;   if sq3vl == SetSQ3 &#13;&#10; then if value ~= 126 &#13;&#10;    then sq3rp:getOwner():setModulatorValue(0,false,false,false)&#13;&#10;     end&#13;&#10; else if value ~= 126&#13;&#10;    then sq3rp:repaint()&#13;&#10;    else sq3rp:getOwner():setModulatorValue(SetSQ3 ,false,false,false)&#13;&#10;     end&#13;&#10;  end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="03484a181f6946a1a82cfc696c8f3ca7" luaMethodValid="1"/>
          <luaMethod luaMethodName="Dest3repaint" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;Dest3repaint = function(mod, value)&#10;  if sq3rp ~= nil &#13;&#10;then sq3rp:repaint()&#13;&#10; end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="7f4262f881e74e3fb4866ad84d1e4a72" luaMethodValid="1"/>
          <luaMethod luaMethodName="Seq4Paint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;Seq4Paint = function(comp,g)&#10;S4V  = comp:getOwner():getValue()&#13;&#10;s4dest = panel:getModulatorByName(&quot;Seq4Destination&quot;):getValue()&#13;&#10;g:setColour(cLED)&#13;&#10;g:setFont(StText)&#13;&#10;    if S4V == 0 &#13;&#10;  then RST4 = 416 &#13;&#10;       for z = 0,15 &#13;&#10;        do &#13;&#10;           g:setOpacity(0.2)&#13;&#10;           g:drawText(&quot;RST&quot;,8+(28*z),304,24,16,CENTRE,false) &#13;&#10;       end&#13;&#10;elseif S4V &gt;= 1  &#13;&#10;  then RST4 = comp:getOwner():getValue() + 400&#13;&#10;       for u = 0,15 &#13;&#10;        do if u + 1 == S4V  &#13;&#10;         then g:setOpacity(1.0)&#13;&#10;         else g:setOpacity(0.2)&#13;&#10;          end&#13;&#10;           g:drawText(&quot;RST&quot;,8+(28*u),304,24,16,CENTRE,false)&#13;&#10;       end&#13;&#10;   end&#13;&#10;&#13;&#10;Seq4vals = {}&#13;&#10;  for p = 401,RST4  &#13;&#10;   do Seq4vals[p-400] = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,p):getValue()&#13;&#10;      if Seq4vals[p-400] &lt;= 125&#13;&#10;    then g:setOpacity(1.0)&#13;&#10;         if s4dest == 1 or s4dest == 2 or s4dest == 3&#13;&#10;       then sq4p = math.floor (Seq4vals[p-400]/2)&#13;&#10;            g:drawText(string.format(&quot;%s&quot;,PITCH[sq4p+1]),8+(28*(p - 401)),0,24,16,CENTRE,false)&#13;&#10;            if Seq4vals[p-400]%2 == 1&#13;&#10;          then g:drawText(&quot;+&quot;,8+(28*(p - 401)),9,24,16,CENTRE,false)&#13;&#10;           end &#13;&#10;       else g:drawText(string.format(&quot;%s&quot;,Seq4vals[p-400]),8+(28*(p - 401)),4,24,16,CENTRE,false) &#13;&#10;        end&#13;&#10;         g:drawRect(8+((p-401)*28),24 ,24, 250,2)&#13;&#10;         g:fillRect(8+((p-401)*28),274 - (Seq4vals[p-400]*2),22,Seq4vals[p-400]*2)&#13;&#10;         g:setOpacity(0.2)&#13;&#10;         g:drawText(&quot;OFF&quot;,8+(28*(p - 401)),280,24,16,CENTRE,false) &#13;&#10;  elseif Seq4vals[p-400] == 127&#13;&#10;    then g:setOpacity(0.2)&#13;&#10;         g:drawRect(8+((p-401)*28),24 ,24, 250,2)&#13;&#10;         g:setOpacity(1.0)&#13;&#10;         g:drawText(&quot;OFF&quot;,8+(28*(p - 401)),280,24,16,CENTRE,false) &#13;&#10;     end&#13;&#10;&#13;&#10;  end&#13;&#10;g:setGradientFill(ColourGradient(Colour(0x35FFFFFF),220, 150,BLANK,480,150, true))&#13;&#10;g:fillRoundedRectangle(  1, 1,458,324,1.0)&#13;&#10;g:setGradientFill(ColourGradient(Colour(0x35FFFFFF),220, 150,BLANK,720,150, true))&#13;&#10;g:drawRoundedRectangle(  1, 1,458,324,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="eec79f1bfc3643f3a884f1be701478a5" luaMethodValid="1"/>
          <luaMethod luaMethodName="Seq4Click" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;Seq4Click = function(comp, event)&#10;S4VAL = comp:getOwner():getValue() &#13;&#10;s4clx = event.x&#13;&#10;s4cly = event.y &#13;&#10;  if s4cly &gt;= 20 and s4cly &lt;= 274&#13;&#10;then if S4VAL == 0  &#13;&#10;   then for b = 0,15  &#13;&#10;         do if s4clx &gt;= 8+(b*28) and s4clx &lt;= (b * 28 )+ 36 &#13;&#10;          then fl4st = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,b + 401) &#13;&#10;               fl4stvl = fl4st:getValue()&#13;&#10;           end&#13;&#10;        end&#13;&#10; elseif S4VAL &gt;= 2&#13;&#10;   then for e = 0,S4VAL - 2  &#13;&#10;         do if s4clx &gt;= 8+(e*28) and s4clx &lt;= (e * 28 )+ 36 &#13;&#10;          then fl4st = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,e + 401) &#13;&#10;               fl4stvl = fl4st:getValue()&#13;&#10;           end&#13;&#10;        end&#13;&#10;    end&#13;&#10; end&#13;&#10;  if s4cly &gt;= 280 and s4cly &lt;= 303&#13;&#10;then if S4VAL == 0  &#13;&#10;   then for a = 0,15  &#13;&#10;         do if s4clx &gt;= 8+(a*28) and s4clx &lt;= (a * 28 )+ 36 &#13;&#10;          then b = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,a + 401)&#13;&#10;               c = b:getValue()&#13;&#10;               if c == 127 &#13;&#10;             then b:setModulatorValue(0,false,true,false)&#13;&#10;             else b:setModulatorValue(127,false,true,false)&#13;&#10;              end&#13;&#10;           end&#13;&#10;        end&#13;&#10; elseif S4VAL &gt;= 2&#13;&#10;   then for h = 0,S4VAL - 2  &#13;&#10;         do if s4clx &gt;= 8+(h*28) and s4clx &lt;= (h * 28 )+ 36 &#13;&#10;          then i = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,h + 401)&#13;&#10;               j = i:getValue()&#13;&#10;               if j == 127 &#13;&#10;             then i:setModulatorValue(0,false,true,false)&#13;&#10;             else i:setModulatorValue(127,false,true,false)&#13;&#10;              end&#13;&#10;           end&#13;&#10;        end&#13;&#10;    end&#13;&#10; end&#13;&#10;  if s4cly &gt;= 304  &#13;&#10;then for d = 0,15  &#13;&#10;      do if s4clx &gt;= 8+(d*28) and s4clx &lt;= (d * 28 )+ 36 &#13;&#10;       then comp:getOwner():setModulatorValue(d+1,false,false,false)&#13;&#10;            e = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,d + 401)&#13;&#10;            f = e:getValue()&#13;&#10;            if f == 126 &#13;&#10;          then e:setModulatorValue(0,false,true,false) &#13;&#10;          else e:setModulatorValue(126,false,true,false)&#13;&#10;           end&#13;&#10;        end&#13;&#10;     end&#13;&#10; end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                     uuid="7ae12b6c487c4a0aafcbded3faa259bf" luaMethodValid="1"/>
          <luaMethod luaMethodName="Seq4Drag" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;Seq4Drag = function(comp, event)&#10;s4drx = event.x&#13;&#10;s4dry = event.y&#13;&#10; local Val = Value()&#13;&#10;    if S4VAL == 0 &#13;&#10;  then if fl4stvl ~= nil then&#13;&#10;          if fl4stvl &lt;= 125&#13;&#10;        then local stval =  math.floor( (   s4cly - s4dry)/2 )  &#13;&#10;                if stval+fl4stvl  &lt;= 0 &#13;&#10;              then Val = 0 &#13;&#10;            elseif stval+fl4stvl &gt;= 125 &#13;&#10;              then Val = 125                 &#13;&#10;              else Val = stval+fl4stvl&#13;&#10;               end&#13;&#10;                if stval+fl4stvl ~= fl4stvl &#13;&#10;              then fl4st:setModulatorValue(Val,false,true,false)&#13;&#10;               end&#13;&#10;         end&#13;&#10;      end&#13;&#10;elseif S4VAL &gt;= 2&#13;&#10;  then if s4drx &gt;= 8 and s4drx &lt;= ((S4VAL - 2) *28)+ 36 &#13;&#10;     then if fl4stvl ~= nil then&#13;&#10;             if fl4stvl &lt;= 125&#13;&#10;           then local stval =  math.floor( (   s4cly - s4dry)/2 )  &#13;&#10;                   if stval+fl4stvl  &lt;= 0 &#13;&#10;                 then Val = 0 &#13;&#10;               elseif stval+fl4stvl &gt;= 125 &#13;&#10;                 then Val = 125                 &#13;&#10;                 else Val = stval+fl4stvl&#13;&#10;                  end&#13;&#10;                   if stval+fl4stvl ~= fl4stvl &#13;&#10;                 then fl4st:setModulatorValue(Val,false,true,false)&#13;&#10;                  end&#13;&#10;            end&#13;&#10;         end&#13;&#10;      end&#13;&#10;   end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                     uuid="06f02352a656415f8e4584f8dbf6280d" luaMethodValid="1"/>
          <luaMethod luaMethodName="seq4vc" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;seq4vc = function(mod, value)&#10;    if value ~= 0 &#13;&#10;   then for r = 401,416&#13;&#10;         do b = panel:getModulatorWithProperty(&quot;modulatorCustomIndex&quot;,r)&#13;&#10;                m = b:getValue()&#13;&#10;                if r - 400  ~= value&#13;&#10;              then if m == 126 &#13;&#10;                 then b:setModulatorValue(0,false,true,false)&#13;&#10;                  end&#13;&#10;               end&#13;&#10;        end&#13;&#10;   end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="0f0fd35447f240168c7ceb3535c78a17" luaMethodValid="1"/>
          <luaMethod luaMethodName="S4stch" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;S4stch = function(mod, value)&#10;SetSQ4 = mod:getProperty(&quot;modulatorCustomIndex&quot;) - 400&#13;&#10;sq4rp = panel:getComponent(&quot;Sequence4&quot;)&#13;&#10;sq4vl = sq4rp:getOwner():getValue()&#13;&#10;   if sq4vl == SetSQ4 &#13;&#10; then if value ~= 126 &#13;&#10;    then sq4rp:getOwner():setModulatorValue(0,false,false,false)&#13;&#10;     end&#13;&#10; else if value ~= 126&#13;&#10;    then sq4rp:repaint()&#13;&#10;    else sq4rp:getOwner():setModulatorValue(SetSQ4 ,false,false,false)&#13;&#10;     end&#13;&#10;  end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="01b71e3f54de457faa7e83f97d8ffbfd" luaMethodValid="1"/>
          <luaMethod luaMethodName="Dest4repaint" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;Dest4repaint = function(mod, value)&#10;  if sq4rp ~= nil &#13;&#10;then sq4rp:repaint()&#13;&#10; end&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="d77560fd023b4d689998d832941d5b61" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="Transpose" uuid="0e9783ff68be4ba198868b4de968b6f4">
          <luaMethod luaMethodName="mTransposePaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;mTransposePaint = function(comp,g)&#10;MTval = comp:getOwner():getValue() &#13;&#10;g:setColour(cLED)&#13;&#10;g:setFont(cmbText)&#13;&#10;     if MTval &lt;= 12 then  &#13;&#10;        g:drawText(&quot;&quot;..MTval - 12,0,0,72,32,CENTRE,false)&#13;&#10; elseif MTval &gt;= 13 then&#13;&#10;        g:drawText(&quot;+&quot;..MTval - 12,0,0,72,32,CENTRE,false)&#13;&#10;    end&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),0,8,BLANK,0,35, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-36,0,BLANK,comp:getWidth(),50, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="5c4e69b48a9f4f88aa270b845de03c1b" luaMethodValid="1"/>
          <luaMethod luaMethodName="mTransposeDrag" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;mTransposeDrag = function(comp, event)&#10;mtrdr = event.y&#13;&#10;   local Val = Value()&#13;&#10;   local knval =  math.floor((knbcl - mtrdr )/8 )  &#13;&#10;      if knval+knbvl  &lt;= 0 &#13;&#10;    then Val = 0 &#13;&#10;  elseif knval+knbvl &gt;= 24&#13;&#10;    then Val = 24                 &#13;&#10;    else Val = knval+knbvl&#13;&#10;     end &#13;&#10;      if comp:getOwner():getValue() ~= Val&#13;&#10;    then comp:getOwner():setModulatorValue(Val,false,true,false)&#13;&#10;     end &#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                     uuid="e143d8f21f6647c8a12ef0ee62e2d8fa" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="FineTune" uuid="a1aa6dcce4674931983f454f59acdfa5">
          <luaMethod luaMethodName="fTunePaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;fTunePaint = function(comp,g)&#10;MFval = comp:getOwner():getValue() &#13;&#10;g:setColour(cLED)&#13;&#10;g:setFont(cmbText)&#13;&#10;     if MFval &lt;= 50 then  &#13;&#10;        g:drawText(&quot;&quot;..MFval - 50,0,0,72,32,CENTRE,false)&#13;&#10; elseif MFval &gt;= 51 then&#13;&#10;        g:drawText(&quot;+&quot;..MFval - 50,0,0,72,32,CENTRE,false)&#13;&#10;    end&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),0,8,BLANK,0,30, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-36,0,BLANK,comp:getWidth(),50, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="48d29094b7ed4aeea3d581379947c544" luaMethodValid="1"/>
          <luaMethod luaMethodName="fTuneDrag" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;fTuneDrag = function(comp, event)&#10;ftndr = event.y&#13;&#10;   local Val = Value()&#13;&#10;   local knval =  math.floor((knbcl - ftndr )/4 )  &#13;&#10;      if knval+knbvl  &lt;= 0 &#13;&#10;    then Val = 0 &#13;&#10;  elseif knval+knbvl &gt;= 100&#13;&#10;    then Val = 100                 &#13;&#10;    else Val = knval+knbvl&#13;&#10;     end&#13;&#10;      if comp:getOwner():getValue() ~= Val&#13;&#10;    then comp:getOwner():setModulatorValue(Val,false,true,false)&#13;&#10;     end &#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                     uuid="2d1a5ce89acb4ea6a3ba9af7ddf0586a" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="Bpm" uuid="ebe8b6cc0281471d950ae929a2842e63">
          <luaMethod luaMethodName="BpmPaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;BpmPaint = function(comp,g)&#10;  if panel:getModulatorByName(&quot;globMidiClock&quot;):getValue() &lt;= 1 &#13;&#10;then g:setColour(cLED)&#13;&#10;else g:setColour(cLED:withAlpha(0.2))&#13;&#10; end&#13;&#10;g:setFont(Shapetxt)&#13;&#10;g:drawText(&quot;&quot;..comp:getOwner():getValue(),0,0,72,32,CENTRE,false)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth(),8,BLANK,comp:getWidth(),40, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-36,0,BLANK,comp:getWidth(),50, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="9762b6088ce843528907ce9cd6d148fe" luaMethodValid="1"/>
          <luaMethod luaMethodName="BpmDrag" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;BpmDrag = function(comp, event)&#10;bpmdr = event.y&#13;&#10;   local Val = Value()&#13;&#10;   local knval =  math.floor((knbcl - bpmdr )/4 )  &#13;&#10;      if comp:getOwner():getValue() ~= sli(knbvl,knval ,30,250)&#13;&#10;    then comp:getOwner():setModulatorValue(sli(knbvl,knval ,30,250),false,true,false)&#13;&#10;     end &#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                     uuid="b6d061a966034facadca3371b6561ae1" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="Feedback" uuid="2082045165ed437fac3ffa7f94785069">
          <luaMethod luaMethodName="ModsFbPaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;ModsFbPaint = function(comp,g)&#10;    for h = 1,3 do&#13;&#10;        g:setColour(Colour(0x16F6F6F6))&#13;&#10;        g:drawRoundedRectangle(0,ky[h*4]+ 20,272,48,2.0,1.0)&#13;&#10;        g:setColour(cBLK)&#13;&#10;        g:fillRoundedRectangle(  0, ky[h*4]+ 20,272,48,2.0)&#13;&#10;    end&#13;&#10;g:setFont(fbtxt)&#13;&#10;g:setColour(cLED)&#13;&#10;    for k = 1,12 do &#13;&#10;        j = ((k - 1)%4) &#13;&#10;        fbmod = panel:getModulatorWithProperty(&quot;vstIndex&quot;,fbmIdx[k])&#13;&#10;        g:drawText(&quot;&quot;..fbmod:getValue(),kx[k] + 20,ky[k] + 28,32,16,CENTRE,false)&#13;&#10;        g:drawText(&quot;&quot;..kname[j+1],kx[k],ky[k]+44,72,16,CENTRE,false)       &#13;&#10;    end&#13;&#10;        g:setGradientFill(ColourGradient(Colour(0x27FFFFFF),140, 57 ,BLANK,140,- 5 , true))&#13;&#10;        g:fillRoundedRectangle(  1, 21,270,46,1.0)&#13;&#10;        g:setGradientFill(ColourGradient(Colour(0x27FFFFFF),140, 57 ,BLANK,140,- 265 , true))&#13;&#10;        g:drawRoundedRectangle(  1 ,21,270,46,1.0,1.0)&#13;&#10;        g:setGradientFill(ColourGradient(Colour(0x35FFFFFF),140, 154 ,BLANK,140, 58 , true))&#13;&#10;        g:fillRoundedRectangle(  1, 109,270,46,1.0)&#13;&#10;        g:setGradientFill(ColourGradient(Colour(0x35FFFFFF),140, 154 ,BLANK,140, -140 , true))&#13;&#10;        g:drawRoundedRectangle(  1 ,109,270,46,1.0,1.0)&#13;&#10;        g:setGradientFill(ColourGradient(Colour(0x40FFFFFF),140, 220 ,BLANK,140, 98 , true))&#13;&#10;        g:fillRoundedRectangle(  1, 197,270,46,1.0)&#13;&#10;        g:setGradientFill(ColourGradient(Colour(0x40FFFFFF),140, 220 ,BLANK,140, -60 , true))&#13;&#10;        g:drawRoundedRectangle(  1 ,197,270,46,1.0,1.0)&#13;&#10;end&#13;&#10;"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="b446544111324fa8943833630c7712d7" luaMethodValid="1"/>
          <luaMethod luaMethodName="ModsFbClick" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;ModsFbClick = function(comp, event)&#10;fbclx = event.x&#13;&#10;fbcly = event.y &#13;&#10;attdr = 0&#13;&#10;decdr = 0&#13;&#10;susdr = 0&#13;&#10;&#13;&#10;    if fbclx &gt;= 0 and fbclx &lt;= 64&#13;&#10;  then   if fbcly &gt;= 20 and fbcly &lt;= 20 + 48 &#13;&#10;       then attdr = 1  &#13;&#10;            attvl = panel:getModulatorByName(&quot;vcfEnvAttack&quot;):getValue() &#13;&#10;     elseif fbcly &gt;= 108 and fbcly &lt;= 108 + 48      &#13;&#10;       then attdr = 2  &#13;&#10;            attvl = panel:getModulatorByName(&quot;vcaEnvAttack&quot;):getValue()  &#13;&#10;     elseif fbcly &gt;= 196 and fbcly &lt;= 196 + 48       &#13;&#10;       then attdr = 3  &#13;&#10;            attvl = panel:getModulatorByName(&quot;env3Attack&quot;):getValue() &#13;&#10;        end&#13;&#10;elseif fbclx &gt;= 65 and fbclx &lt;= 128&#13;&#10;  then   if fbcly &gt;= 20 and fbcly &lt;= 20 + 48 &#13;&#10;       then decdr = 1  &#13;&#10;            decvl = panel:getModulatorByName(&quot;vcfEnvDecay&quot;):getValue() &#13;&#10;     elseif fbcly &gt;= 108 and fbcly &lt;= 108 + 48      &#13;&#10;       then decdr = 2  &#13;&#10;            decvl = panel:getModulatorByName(&quot;vcaEnvDecay&quot;):getValue()   &#13;&#10;     elseif fbcly &gt;= 196 and fbcly &lt;= 196 + 48       &#13;&#10;       then decdr = 3  &#13;&#10;            decvl = panel:getModulatorByName(&quot;env3Decay&quot;):getValue() &#13;&#10;        end&#13;&#10;elseif fbclx &gt;= 129 and fbclx &lt;= 192&#13;&#10;  then   if fbcly &gt;= 20 and fbcly &lt;= 20 + 48 &#13;&#10;       then susdr = 1  &#13;&#10;            susvl = panel:getModulatorByName(&quot;vcfEnvSustain&quot;):getValue() &#13;&#10;     elseif fbcly &gt;= 108 and fbcly &lt;= 108 + 48      &#13;&#10;       then susdr = 2  &#13;&#10;            susvl = panel:getModulatorByName(&quot;vcaEnvSustain&quot;):getValue()    &#13;&#10;     elseif fbcly &gt;= 196 and fbcly &lt;= 196 + 48       &#13;&#10;       then susdr = 3  &#13;&#10;            susvl = panel:getModulatorByName(&quot;env3Sustain&quot;):getValue() &#13;&#10;        end&#13;&#10;elseif fbclx &gt;= 193 and fbclx &lt;= 256&#13;&#10;  then   if fbcly &gt;= 20 and fbcly &lt;= 20 + 48 &#13;&#10;       then reldr = 1  &#13;&#10;            relvl = panel:getModulatorByName(&quot;vcfEnvRelease&quot;):getValue() &#13;&#10;     elseif fbcly &gt;= 108 and fbcly &lt;= 108 + 48      &#13;&#10;       then reldr = 2  &#13;&#10;            relvl = panel:getModulatorByName(&quot;vcaEnvRelease&quot;):getValue()   &#13;&#10;     elseif fbcly &gt;= 196 and fbcly &lt;= 196 + 48       &#13;&#10;       then reldr = 3  &#13;&#10;            relvl = panel:getModulatorByName(&quot;env3Release&quot;):getValue() &#13;&#10;        end&#13;&#10;   end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                     uuid="81b10a196e0b41b99bf3931811ab7f1a" luaMethodValid="1"/>
          <luaMethod luaMethodName="ModsFbDrg" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;ModsFbDrg = function(comp, event)&#10;envdry = event.y&#13;&#10;local knval =  math.floor((fbcly - envdry )/2 )&#13;&#10;local att1 = panel:getModulatorByName(&quot;vcfEnvAttack&quot;) &#13;&#10;local att2 = panel:getModulatorByName(&quot;vcaEnvAttack&quot;)&#13;&#10;local att3 = panel:getModulatorByName(&quot;env3Attack&quot;)&#13;&#10;local dec1 = panel:getModulatorByName(&quot;vcfEnvDecay&quot;) &#13;&#10;local dec2 = panel:getModulatorByName(&quot;vcaEnvDecay&quot;)&#13;&#10;local dec3 = panel:getModulatorByName(&quot;env3Decay&quot;)&#13;&#10;local sus1 = panel:getModulatorByName(&quot;vcfEnvSustain&quot;) &#13;&#10;local sus2 = panel:getModulatorByName(&quot;vcaEnvSustain&quot;)&#13;&#10;local sus3 = panel:getModulatorByName(&quot;env3Sustain&quot;)&#13;&#10;local rel1 = panel:getModulatorByName(&quot;vcfEnvRelease&quot;) &#13;&#10;local rel2 = panel:getModulatorByName(&quot;vcaEnvRelease&quot;)&#13;&#10;local rel3 = panel:getModulatorByName(&quot;env3Release&quot;)&#13;&#10;    if attdr == 1 then &#13;&#10;          if att1:getValue() ~= sli(attvl,knval ,0,127)&#13;&#10;        then att1:setModulatorValue(sli(attvl,knval ,0,127) ,false,true,false)&#13;&#10;         end &#13;&#10;elseif attdr == 2 then &#13;&#10;          if att2:getValue() ~= sli(attvl,knval ,0,127) &#13;&#10;        then att2:setModulatorValue(sli(attvl,knval ,0,127) ,false,true,false)&#13;&#10;         end &#13;&#10;elseif attdr == 3 then &#13;&#10;          if att3:getValue() ~= sli(attvl,knval ,0,127)&#13;&#10;        then att3:setModulatorValue(sli(attvl,knval ,0,127) ,false,true,false)&#13;&#10;         end &#13;&#10;elseif decdr == 1 then &#13;&#10;          if dec1:getValue() ~= sli(decvl,knval ,0,127) &#13;&#10;        then dec1:setModulatorValue(sli(decvl,knval ,0,127) ,false,true,false)&#13;&#10;         end &#13;&#10;elseif decdr == 2 then &#13;&#10;          if dec2:getValue() ~= sli(decvl,knval ,0,127)&#13;&#10;        then dec2:setModulatorValue(sli(decvl,knval ,0,127) ,false,true,false)&#13;&#10;         end &#13;&#10;elseif decdr == 3 then &#13;&#10;          if dec3:getValue() ~= sli(decvl,knval ,0,127) &#13;&#10;        then dec3:setModulatorValue(sli(decvl,knval ,0,127) ,false,true,false)&#13;&#10;         end   &#13;&#10;elseif susdr == 1 then &#13;&#10;          if sus1:getValue() ~= sli(susvl,knval ,0,127)&#13;&#10;        then sus1:setModulatorValue(sli(susvl,knval ,0,127) ,false,true,false)&#13;&#10;         end &#13;&#10;elseif susdr == 2 then &#13;&#10;          if sus2:getValue() ~= sli(susvl,knval ,0,127) &#13;&#10;        then sus2:setModulatorValue(sli(susvl,knval ,0,127) ,false,true,false)&#13;&#10;         end &#13;&#10;elseif susdr == 3 then &#13;&#10;          if sus3:getValue() ~= sli(susvl,knval ,0,127) &#13;&#10;        then sus3:setModulatorValue(sli(susvl,knval ,0,127) ,false,true,false)&#13;&#10;         end  &#13;&#10;elseif reldr == 1 then &#13;&#10;          if rel1:getValue() ~= sli(relvl,knval ,0,127) &#13;&#10;        then rel1:setModulatorValue(sli(relvl,knval ,0,127) ,false,true,false)&#13;&#10;         end &#13;&#10;elseif reldr == 2 then &#13;&#10;          if rel2:getValue() ~= sli(relvl,knval ,0,127)&#13;&#10;        then rel2:setModulatorValue(sli(relvl,knval ,0,127) ,false,true,false)&#13;&#10;         end &#13;&#10;elseif reldr == 3 then &#13;&#10;          if rel3:getValue() ~= sli(relvl,knval ,0,127) &#13;&#10;        then rel3:setModulatorValue(sli(relvl,knval ,0,127) ,false,true,false)&#13;&#10;         end  &#13;&#10;   end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                     uuid="48e9b41a921f4f019fb79b47edc6e808" luaMethodValid="1"/>
          <luaMethod luaMethodName="modsfbrepaint" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;modsfbrepaint = function(mod, value)&#10;&#13;&#10;panel:getComponent(&quot;ModsFeedback&quot;):repaint()&#13;&#10;&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="7eee541cb1ee4aa2801bd6f3db817768" luaMethodValid="1"/>
          <luaMethod luaMethodName="ModsFbPaint2" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;ModsFbPaint2 = function(comp,g)&#10;g:setColour(Colour(0x16F6F6F6))&#13;&#10;g:drawRoundedRectangle(0, 20,272,48,2.0,1.0)&#13;&#10;g:setColour(cBLK)&#13;&#10;g:fillRoundedRectangle(  0, 20,272,48,2.0)&#13;&#10;g:setFont(fbtxt)&#13;&#10;g:setColour(cLED)&#13;&#10;for t = 71,80,3  &#13;&#10; do fbmod2 = panel:getModulatorWithProperty(&quot;vstIndex&quot;,t):getValue()&#13;&#10;       if fbmod2 &lt;= 127 then&#13;&#10;          g:drawText(&quot;&quot;..fbmod2 - 127,kx2[t] + 12, 28,48,16,CENTRE,false)&#13;&#10;     else g:drawText(&quot;+&quot;..fbmod2 - 127,kx2[t] + 12, 28,48,16,CENTRE,false)&#13;&#10;      end&#13;&#10;end&#13;&#10;for e = 0,3  &#13;&#10; do g:drawText(string.format(&quot;Mod%s&quot;,e+1),(e*64) , 44,72,16,CENTRE,false)&#13;&#10;end&#13;&#10;g:setGradientFill(ColourGradient(Colour(0x30FFFFFF),140,25,BLANK,140, 110 , true))&#13;&#10;g:fillRoundedRectangle(  1, 21,270,46,2.0)&#13;&#10;g:setGradientFill(ColourGradient(Colour(0x30FFFFFF),140,25,BLANK,140, 240 , true))&#13;&#10;g:drawRoundedRectangle(1, 21,270,46,2.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="6567be1ddd204b1d9c940a3290b09690" luaMethodValid="1"/>
          <luaMethod luaMethodName="ModsFbClick2" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;ModsFbClick2 = function(comp, event)&#10;&#13;&#10;fb2clx = event.x&#13;&#10;fb2cly = event.y &#13;&#10;moddr = 0&#13;&#10;     if fb2clx &gt;= 0 and fb2clx &lt;= 64 &#13;&#10;  then moddr = 1  &#13;&#10;       modvl = panel:getModulatorByName(&quot;mod1Amount&quot;):getValue()     &#13;&#10;   end&#13;&#10;    if fb2clx &gt;= 65 and fb2clx &lt;= 128 &#13;&#10;  then moddr = 2  &#13;&#10;       modvl = panel:getModulatorByName(&quot;mod2Amount&quot;):getValue()     &#13;&#10;   end&#13;&#10;    if fb2clx &gt;= 129 and fb2clx &lt;= 192 &#13;&#10;  then moddr = 3  &#13;&#10;       modvl = panel:getModulatorByName(&quot;mod3Amount&quot;):getValue()     &#13;&#10;   end&#13;&#10;    if fb2clx &gt;= 193 and fb2clx &lt;= 256 &#13;&#10;  then moddr = 4  &#13;&#10;       modvl = panel:getModulatorByName(&quot;mod4Amount&quot;):getValue()     &#13;&#10;   end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                     uuid="165b3b9fbd8d4b9b832f010ec37670ae" luaMethodValid="1"/>
          <luaMethod luaMethodName="ModsFbDrg2" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;ModsFbDrg2 = function(comp, event)&#10;mddry = event.y&#13;&#10;local knval =  math.floor((fb2cly - mddry )/4 )&#13;&#10;local md1 = panel:getModulatorByName(&quot;mod1Amount&quot;) &#13;&#10;local md2 = panel:getModulatorByName(&quot;mod2Amount&quot;)&#13;&#10;local md3 = panel:getModulatorByName(&quot;mod3Amount&quot;)&#13;&#10;local md4 = panel:getModulatorByName(&quot;mod4Amount&quot;)&#13;&#10;local function mods()&#13;&#10;                     if knval+modvl~= nil&#13;&#10;                   then   if knval+modvl  &lt;= 0 &#13;&#10;                        then return  0 &#13;&#10;                      elseif knval+modvl &gt;= 254 &#13;&#10;                        then return 254                 &#13;&#10;                        else return knval+modvl&#13;&#10;                         end&#13;&#10;                    end&#13;&#10;            end&#13;&#10;    if moddr == 1 then &#13;&#10;          if md1:getValue() ~= mods()&#13;&#10;        then md1:setModulatorValue(mods(),false,true,false)&#13;&#10;         end &#13;&#10;elseif moddr == 2 then &#13;&#10;          if md2:getValue() ~= mods()&#13;&#10;        then md2:setModulatorValue(mods(),false,true,false)&#13;&#10;         end &#13;&#10;elseif moddr == 3 then &#13;&#10;          if md3:getValue() ~= mods()&#13;&#10;        then md3:setModulatorValue(mods(),false,true,false)&#13;&#10;         end &#13;&#10;elseif moddr == 4 then &#13;&#10;          if md4:getValue() ~= mods()&#13;&#10;        then md4:setModulatorValue(mods(),false,true,false)&#13;&#10;         end &#13;&#10;   end &#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                     uuid="eb772238982644c1bc0e2a7cd9192943" luaMethodValid="1"/>
          <luaMethod luaMethodName="modsfbrepaint2" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;modsfbrepaint2 = function(mod, value)&#10;panel:getComponent(&quot;ModsFeedback2&quot;):repaint()&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                     uuid="a81432b01caa4b13a358317fc2c1c520" luaMethodValid="1"/>
          <luaMethod luaMethodName="ModsFbPaint3" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;ModsFbPaint3 = function(comp,g)&#10;g:setColour(Colour(0x16F6F6F6))&#13;&#10;g:drawRoundedRectangle(0, 20,272,48,2.0,1.0)&#13;&#10;g:setColour(cBLK)&#13;&#10;g:fillRoundedRectangle(  0, 20,272,48,2.0)&#13;&#10;g:setFont(fbtxt)&#13;&#10;g:setColour(cLED)&#13;&#10;for t = 41,56,5  &#13;&#10; do fbmod3 = panel:getModulatorWithProperty(&quot;vstIndex&quot;,t):getValue()&#13;&#10;       if fbmod3 &lt;= 150 &#13;&#10;     then g:drawText(&quot;&quot;..fbmod3,kx2[t] + 12, 28,48,16,CENTRE,false)&#13;&#10;     else g:drawText(string.format(&quot;%sst&quot;,lfostp[fbmod3 - 150]),kx2[t] + 12, 28,48,16,CENTRE,false)&#13;&#10;      end&#13;&#10;end&#13;&#10;for e = 0,3  &#13;&#10; do g:drawText(&quot;LFO&quot;..e+1,(e*64) , 44,72,16,CENTRE,false)&#13;&#10;end&#13;&#10;g:setGradientFill(ColourGradient(Colour(0x25FFFFFF),140,15,BLANK,140, 70 , true))&#13;&#10;g:fillRoundedRectangle(  1, 21,270,46,2.0)&#13;&#10;g:setGradientFill(ColourGradient(Colour(0x25FFFFFF),140,15,BLANK,140, 250 , true))&#13;&#10;g:drawRoundedRectangle(1, 21,270,46,2.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="2c3f555e03174174b700cd8ce98ce485" luaMethodValid="1"/>
          <luaMethod luaMethodName="ModsFbClick3" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;ModsFbClick3 = function(comp, event)&#10;fb3clx = event.x&#13;&#10;fb3cly = event.y &#13;&#10;lfodr = 0&#13;&#10;lfovl = Value()&#13;&#10;    if fb3clx &gt;= 0 and fb3clx &lt;= 64 &#13;&#10;  then lfodr = 1  &#13;&#10;       lfovl = panel:getModulatorByName(&quot;lfo1Frequency&quot;):getValue()     &#13;&#10;elseif fb3clx &gt;= 65 and fb3clx &lt;= 128 &#13;&#10;  then lfodr = 2  &#13;&#10;       lfovl = panel:getModulatorByName(&quot;lfo2Frequency&quot;):getValue()     &#13;&#10;elseif fb3clx &gt;= 129 and fb3clx &lt;= 192 &#13;&#10;  then lfodr = 3  &#13;&#10;       lfovl = panel:getModulatorByName(&quot;lfo3Frequency&quot;):getValue()     &#13;&#10;elseif fb3clx &gt;= 193 and fb3clx &lt;= 256 &#13;&#10;  then lfodr = 4  &#13;&#10;       lfovl = panel:getModulatorByName(&quot;lfo4Frequency&quot;):getValue()     &#13;&#10;   end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                     uuid="168e98019eb74d568a5fd5c80cc8376f" luaMethodValid="1"/>
          <luaMethod luaMethodName="ModsFbDrg3" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;ModsFbDrg3 = function(comp, event)&#10;lfdry = event.y&#13;&#10; local knval =  math.floor((fb3cly - lfdry )/2 )&#13;&#10; local knval2 =  math.floor((fb3cly - lfdry )/8 )&#13;&#10; local lfo1 = panel:getModulatorByName(&quot;lfo1Frequency&quot;)&#13;&#10; local lfo2 = panel:getModulatorByName(&quot;lfo2Frequency&quot;)&#13;&#10; local lfo3 = panel:getModulatorByName(&quot;lfo3Frequency&quot;)&#13;&#10; local lfo4 = panel:getModulatorByName(&quot;lfo4Frequency&quot;)&#13;&#10;     if lfodr == 1 then &#13;&#10;       if lfovl &lt;= 150 then&#13;&#10;             if lfo1:getValue() ~= sli(knbvl,knval ,0,150)&#13;&#10;           then lfo1:setModulatorValue(sli(knbvl,knval ,0,150),false,true,false)&#13;&#10;            end &#13;&#10;   elseif lfovl &gt;= 151 then&#13;&#10;             if lfo1:getValue() ~= sli(knbvl,knval ,151,166)&#13;&#10;           then lfo1:setModulatorValue(sli(knbvl,knval ,151,166),false,true,false)&#13;&#10;            end&#13;&#10;      end&#13;&#10;elseif lfodr == 2 then &#13;&#10;       if lfovl &lt;= 150 then&#13;&#10;             if lfo2:getValue() ~= sli(knbvl,knval ,0,150)&#13;&#10;           then lfo2:setModulatorValue(sli(knbvl,knval ,0,150),false,true,false)&#13;&#10;            end &#13;&#10;   elseif lfovl &gt;= 151 then&#13;&#10;             if lfo2:getValue() ~= sli(knbvl,knval ,151,166)&#13;&#10;           then lfo2:setModulatorValue(sli(knbvl,knval ,151,166),false,true,false)&#13;&#10;            end&#13;&#10;      end&#13;&#10;elseif lfodr == 3 then &#13;&#10;       if lfovl &lt;= 150 then&#13;&#10;             if lfo3:getValue()~= sli(knbvl,knval ,0,150)&#13;&#10;           then lfo3:setModulatorValue(sli(knbvl,knval ,0,150),false,true,false)&#13;&#10;            end &#13;&#10;   elseif lfovl &gt;= 151 then&#13;&#10;             if lfo3:getValue() ~= sli(knbvl,knval ,151,166)&#13;&#10;           then lfo3:setModulatorValue(sli(knbvl,knval ,151,166),false,true,false)&#13;&#10;            end&#13;&#10;      end&#13;&#10;elseif lfodr == 4 then &#13;&#10;       if lfovl &lt;= 150 then&#13;&#10;             if lfo4:getValue() ~= sli(knbvl,knval ,0,150)&#13;&#10;           then lfo4:setModulatorValue(sli(knbvl,knval ,0,150),false,true,false)&#13;&#10;            end &#13;&#10;   elseif lfovl &gt;= 151 then&#13;&#10;             if lfo4:getValue() ~= sli(knbvl,knval ,151,166)&#13;&#10;           then lfo4:setModulatorValue(sli(knbvl,knval ,151,166),false,true,false)&#13;&#10;            end&#13;&#10;      end&#13;&#10;   end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                     uuid="25c08a4389444cbe8adca42beed52dc9" luaMethodValid="1"/>
          <luaMethod luaMethodName="DbleClckMods" luaMethodCode="--&#10;-- Called when a mouse DOUBLE CLICK (any mouse button) event happens on a component&#10;--&#10;&#10;DbleClckMods = function(comp, event)&#10;&#13;&#10;fbmdclx = event.x&#13;&#10;&#13;&#10;    if fbmdclx &gt;= 0 and fbmdclx &lt;= 64 &#13;&#10;  then panel:getModulatorByName(&quot;mod1Amount&quot;):setModulatorValue(127,false,true,false)     &#13;&#10;   end&#13;&#10;    if fbmdclx &gt;= 65 and fbmdclx &lt;= 128 &#13;&#10;  then panel:getModulatorByName(&quot;mod2Amount&quot;):setModulatorValue(127,false,true,false)    &#13;&#10;   end&#13;&#10;    if fbmdclx &gt;= 129 and fbmdclx &lt;= 192 &#13;&#10;  then panel:getModulatorByName(&quot;mod3Amount&quot;):setModulatorValue(127,false,true,false)   &#13;&#10;   end&#13;&#10;    if fbmdclx &gt;= 193 and fbmdclx &lt;= 256 &#13;&#10;  then panel:getModulatorByName(&quot;mod4Amount&quot;):setModulatorValue(127,false,true,false) &#13;&#10;   end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDoubleClickCallback" luaMethodSource="0"
                     uuid="61b939e961a949799e7011579262f1da" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="KeyAssign" uuid="f15b5efa42024cfc9acc5749035dca62">
          <luaMethod luaMethodName="KeyAssgnPaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;KeyAssgnPaint = function(comp,g)&#10;keyas = comp:getOwner():getValue()&#13;&#10;KAval = BigInteger(keyas) &#13;&#10;g:setColour(cLED)&#13;&#10;g:setFont(Shapetxt)&#13;&#10;g:drawText(&quot;Note&quot;,0,2,72,16,CENTRE,false)&#13;&#10;g:drawText(&quot;Priority&quot;,0,14,72,16,CENTRE,false)&#13;&#10;   for t = 0,2  &#13;&#10;    do  if t  ==  KAval:getBitRangeAsInt(1,2) &#13;&#10;      then g:setOpacity(1.0)&#13;&#10;      else g:setOpacity(0.2)&#13;&#10;       end&#13;&#10;       g:drawText(&quot;&quot;..KAnm[t+1],0,26 +(t*16),72,16,CENTRE,false)&#13;&#10;   end&#13;&#10;    if KAval:getBitRangeAsInt(0,1) == 0 &#13;&#10;  then g:setOpacity(0.2)&#13;&#10;elseif KAval:getBitRangeAsInt(0,1) == 1 &#13;&#10;  then g:setOpacity(1.0)&#13;&#10;   end&#13;&#10;g:drawText(&quot;re-trig&quot;,0,74,72,16,CENTRE,false)&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x25FFFFFF),36,78,BLANK,36,20, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-7,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),36,78,BLANK,36,- 60, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-7,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="c950c2279e764556900e4b27be7ee92f" luaMethodValid="1"/>
          <luaMethod luaMethodName="KeyAssgnClick" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;KeyAssgnClick = function(comp,event)&#10;kasscl = event.y&#13;&#10;      if kasscl &gt;= 26  and kasscl &lt;= 42&#13;&#10;    then KAval:setBitRangeAsInt(1,2,0)&#13;&#10;  elseif kasscl &gt;= 43 and kasscl &lt;= 58&#13;&#10;    then KAval:setBitRangeAsInt(1,2,1)&#13;&#10;  elseif kasscl &gt;= 59 and kasscl &lt;= 74&#13;&#10;    then KAval:setBitRangeAsInt(1,2,2)&#13;&#10;  elseif kasscl &gt;= 75 &#13;&#10;    then nkas = (KAval:getBitRangeAsInt(0,1)+1)%2&#13;&#10;         KAval:setBitRangeAsInt(0,1,nkas)&#13;&#10;     end&#13;&#10;comp:getOwner():setModulatorValue(KAval:getBitRangeAsInt(0,3),false,true,false)&#13;&#10;&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                     uuid="ab918f5a309b4d11b49152da9d9f4955" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="GlideMode" uuid="60a92343c9024d4aafceb643b8001029">
          <luaMethod luaMethodName="GldMdePaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;GldMdePaint = function(comp,g)&#10;glmd = comp:getOwner():getValue()&#13;&#10;GLval = BigInteger(glmd ) &#13;&#10;g:setColour(cLED)&#13;&#10;g:setFont(Shapetxt)&#13;&#10;   for t = 0,1  &#13;&#10;    do  if t  ==  GLval:getBitRangeAsInt(1,1) &#13;&#10;      then g:setOpacity(1.0)&#13;&#10;      else g:setOpacity(0.2)&#13;&#10;       end&#13;&#10;       g:drawText(&quot;&quot;..GLnm[t+1],0,(t*16),72,16,CENTRE,false)&#13;&#10;   end&#13;&#10;    if GLval:getBitRangeAsInt(0,1) == 0 &#13;&#10;  then g:setOpacity(0.2)&#13;&#10;elseif GLval:getBitRangeAsInt(0,1) == 1 &#13;&#10;  then g:setOpacity(1.0)&#13;&#10;   end&#13;&#10;g:drawText(&quot;Auto&quot;,0,32,72,16,CENTRE,false)&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x25FFFFFF),36,4,BLANK,36,50, true))&#13;&#10;g:fillRoundedRectangle(2,0,comp:getWidth()-4,comp:getHeight()-5,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),36,4,BLANK,36,100, true))&#13;&#10;g:drawRoundedRectangle(2,0,comp:getWidth()-4,comp:getHeight()-1,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="efbda884b7e645f5bffaa6c34ace0600" luaMethodValid="1"/>
          <luaMethod luaMethodName="GldMdeClick" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;GldMdeClick = function(comp,event)&#10;glmdcl = event.y&#13;&#10;      if glmdcl &lt;= 15&#13;&#10;    then comp:getOwner():setModulatorValue(GLval:getBitRangeAsInt(0,1),false,true,false)&#13;&#10;  elseif glmdcl &gt;= 16 and glmdcl &lt;= 32&#13;&#10;    then comp:getOwner():setModulatorValue(GLval:getBitRangeAsInt(0,1) + 2,false,true,false)&#13;&#10;  elseif glmdcl &gt;= 33&#13;&#10;    then ngval = (GLval:getBitRangeAsInt(0,1)+1)%2&#13;&#10;         GLval:setBitRangeAsInt(0,1,ngval)   &#13;&#10;         comp:getOwner():setModulatorValue(GLval:getBitRangeAsInt(0,2),false,true,false)&#13;&#10;     end&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                     uuid="2e3c6f276eac4cdea5b8dfc728303f49" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="MidiClock" uuid="40747b6b4e5c4e16bfac2df098f2f4ff">
          <luaMethod luaMethodName="MidClkPaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;MidClkPaint = function(comp,g)&#10;MCval = BigInteger(comp:getOwner():getValue()) &#13;&#10;g:setColour(cLED)&#13;&#10;g:setFont(cmbText)&#13;&#10;g:setOpacity(1.0)&#13;&#10;    if MCval:getBitRangeAsInt(1,1) == 0&#13;&#10;  then mctxt = &quot;Internal&quot;&#13;&#10;elseif MCval:getBitRangeAsInt(1,1) == 1&#13;&#10;  then mctxt = &quot;MIDI In&quot;&#13;&#10;   end&#13;&#10;g:drawText(mctxt,0,0,72,32,CENTRE,false)&#13;&#10;    if MCval:getBitRangeAsInt(0,1) == 0&#13;&#10;  then g:setOpacity(0.2)&#13;&#10;elseif MCval:getBitRangeAsInt(0,1) == 1&#13;&#10;  then g:setOpacity(1.0)     &#13;&#10;   end &#13;&#10;g:drawText(&quot;MIDI Out&quot;,80,0,72,32,CENTRE,false)&#13;&#10;&#13;&#10;g:setGradientFill(  ColourGradient(Colour(0x30FFFFFF),46,8, Colour(0x00000000),36,60, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-36,0,BLANK,comp:getWidth()-36,160, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0,1.0)&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="67fa2a210d2c4c33a6869994149e9550" luaMethodValid="1"/>
          <luaMethod luaMethodName="MidClkClick" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;MidClkClick = function(comp,event)&#13;&#10;mclkcl = event.x&#13;&#10;      if mclkcl &lt;= 72&#13;&#10;    then mcv1 = (MCval:getBitRangeAsInt(1,1) + 1 )%2&#13;&#10;         mcv2 = MCval:getBitRangeAsInt(0,1)&#13;&#10;  elseif mclkcl &gt;= 80&#13;&#10;    then mcv2 = (MCval:getBitRangeAsInt(0,1) + 1 )%2&#13;&#10;         mcv1 = MCval:getBitRangeAsInt(1,1)&#13;&#10;     end&#13;&#10;MCval:setBitRangeAsInt(0,1,mcv2) &#13;&#10;MCval:setBitRangeAsInt(1,1,mcv1)&#13;&#10;comp:getOwner():setModulatorValue(MCval:getBitRangeAsInt(0,2),false,true,false)&#13;&#10;panel:getComponent(&quot;bpmTempo&quot;):repaint()&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                     uuid="4ec7310a4be24469bcd9b46bc15c9a65" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="Note" uuid="6ea4da24c6474ee29b564ef42141e5d3">
          <luaMethod luaMethodName="NotePaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;NotePaint = function(comp,g)&#10;g:setColour(cLED)&#13;&#10;g:setFont(cmbText)&#13;&#10;g:drawText(string.format(&quot;%s&quot;,PITCH[comp:getOwner():getValue()+1]),0,0,72,32,CENTRE,false)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,0,8,BLANK,0,40, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-36,0,BLANK,comp:getWidth(),50, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="f78c5bf3cf2a4a85b0a94d2f07ec2f44" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="Velocity" uuid="4e2dd549d0ed4209983b9f0f95c89666">
          <luaMethod luaMethodName="Velpaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;Velpaint = function(comp,g)&#10;g:setColour(cLED)&#13;&#10;g:setFont(cmbText)&#13;&#10;g:drawText(&quot;&quot;..comp:getOwner():getValue(),0,0,72,32,CENTRE,false)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth(),8,BLANK,comp:getWidth(),40, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-36,0,BLANK,comp:getWidth(),50, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="3015fdc8e2ae4dc9b559797f077cde18" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="AudioOut" uuid="f2bea437e4b84dde9093993cfd5a5fa5">
          <luaMethod luaMethodName="AuOutPaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;AuOutPaint = function(comp,g)&#10;g:setColour(cLED)&#13;&#10;g:setFont(cmbText)&#13;&#10;    if comp:getOwner():getValue() == 0  &#13;&#10;  then aot = &quot;Stereo&quot; &#13;&#10;  else aot = &quot;Mono&quot;&#13;&#10;   end&#13;&#10;g:drawText(&quot;&quot;..aot,0,0,72,32,CENTRE,false)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,0,8,BLANK,0,30, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-36,0,BLANK,comp:getWidth(),50, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="4e89be7af6894892b228b322e75886f7" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="MidiThru" uuid="1a97d0770f834b94a0afbb0fd969e60e">
          <luaMethod luaMethodName="MIDTHRpaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;MIDTHRpaint = function(comp,g)&#10;g:setColour(cLED)&#13;&#10;g:setFont(cmbText)&#13;&#10;    if comp:getOwner():getValue() == 0  &#13;&#10;  then mth = &quot;Off&quot; &#13;&#10;  else mth = &quot;On&quot;&#13;&#10;   end&#13;&#10;g:drawText(&quot;&quot;..mth,0,0,72,32,CENTRE,false)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,0,8,BLANK,0,50, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-36,0,BLANK,comp:getWidth(),50, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0,1.0)&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="995e1b95f2194f4f8a9c1a9e7cb131c5" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="GlobalChannel" uuid="c8addebbea6f4722a0f23545320b6e41">
          <luaMethod luaMethodName="mglbchnlPaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;mglbchnlPaint = function(comp,g)&#10;g:setColour(cLED)&#13;&#10;g:setFont(cmbText)&#13;&#10;   if comp:getOwner():getValue() &gt;= 1&#13;&#10; then g:drawText(&quot;&quot;..comp:getOwner():getValue(),0,0,72,32,CENTRE,false)&#13;&#10; else g:drawText(&quot;All&quot;,0,0,72,32,CENTRE,false)&#13;&#10;  end&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth(),8,BLANK,comp:getWidth(),30, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-36,0,BLANK,comp:getWidth(),50, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="4f03f695e9f640c0b8b54b9fc634c657" luaMethodValid="1"/>
          <luaMethod luaMethodName="mglbchnlDrag" luaMethodCode="--&#10;-- Called when the mouse is dragged over a component (mouse button is down and the mouse is moved)&#10;--&#10;&#10;mglbchnlDrag = function( comp,  event)&#10;mgblchdr = event.y&#13;&#10;   local knval =  math.floor((knbcl - mgblchdr )/12 )  &#13;&#10;      if knval+knbvl  &gt;= 0 and knval+knbvl &lt;= 16  &#13;&#10;    then if comp:getOwner():getValue() ~= knval+knbvl&#13;&#10;       then comp:getOwner():setModulatorValue(knval+knbvl,false,true,false)&#13;&#10;        end &#13;&#10;     end &#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDragCallback" luaMethodSource="0"
                     uuid="0358fbab45be4fcfbc4b85b2208d107e" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="ParameterReceive" uuid="fa9ab38151d34e689f93987315e43aff">
          <luaMethod luaMethodName="mparmrecPaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;mparmrecPaint = function(comp,g)&#10;g:setColour(cLED)&#13;&#10;g:setFont(cmbText)&#13;&#10;precv = comp:getOwner():getValue()&#13;&#10;     if precv == 0  &#13;&#10;   then prect = &quot;All&quot; &#13;&#10; elseif precv == 1&#13;&#10;   then prect = &quot;NRPN&quot;&#13;&#10; elseif precv == 2&#13;&#10;   then prect = &quot;CC&quot;&#13;&#10; elseif precv == 3&#13;&#10;   then prect = &quot;Off&quot;&#13;&#10;    end&#13;&#10;g:drawText(prect,0,0,72,32,CENTRE,false)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth(),8,BLANK,comp:getWidth(),40, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-36,0,BLANK,comp:getWidth(),50, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="31d121a493b14a13808c51b13b252f26" luaMethodValid="1"/>
          <luaMethod luaMethodName="mparmrecClick" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;mparmrecClick = function( comp,event)&#10;&#13;&#10;comp:getOwner():setModulatorValue((comp:getOwner():getValue()+1)%4,false,true,false)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                     uuid="51ced8dba07c40da80710ab46cba70d2" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="ParameterSend" uuid="0564507c10de44e2a13e65bcf19fb308">
          <luaMethod luaMethodName="mparmsndPaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;mparmsndPaint = function(comp,g)&#10;g:setColour(cLED)&#13;&#10;g:setFont(cmbText)&#13;&#10;psndv = comp:getOwner():getValue()&#13;&#10;&#13;&#10;     if psndv == 0&#13;&#10;   then psndt = &quot;NRPN&quot;&#13;&#10; elseif psndv == 1&#13;&#10;   then psndt = &quot;CC&quot;&#13;&#10; elseif psndv == 2&#13;&#10;   then psndt = &quot;Off&quot;&#13;&#10;    end&#13;&#10;g:drawText(psndt,0,0,72,32,CENTRE,false)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-16,8,BLANK,comp:getWidth(),40, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-36,0,BLANK,comp:getWidth(),50, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0,1.0)&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="64cefa9a9bf0482397f24234ff963558" luaMethodValid="1"/>
          <luaMethod luaMethodName="mparmsndClick" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;mparmsndClick = function(comp,event)&#10;&#13;&#10;comp:getOwner():setModulatorValue((comp:getOwner():getValue()+1)%3,false,true,false)&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                     uuid="e5e91732e3654b39a40d892515fe2705" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="PushItMode" uuid="5ae015a8c51f45799083e8d88c0197af">
          <luaMethod luaMethodName="PImodePaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;PImodePaint = function(comp,g)&#10;g:setColour(cLED)&#13;&#10;g:setFont(cmbText)&#13;&#10;pimodv = comp:getOwner():getValue()&#13;&#10;&#13;&#10;     if pimodv == 0&#13;&#10;   then pimodt = &quot;Normal&quot;&#13;&#10; elseif pimodv == 1&#13;&#10;   then pimodt = &quot;Toogle&quot;&#13;&#10; elseif pimodv == 2&#13;&#10;   then pimodt = &quot;AudioIn&quot;&#13;&#10;    end&#13;&#10;g:drawText(pimodt,0,0,72,32,CENTRE,false)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-36,8,BLANK,comp:getWidth(),40, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-36,0,BLANK,comp:getWidth(),50, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="15a44012dc8b42bfb406388caeb47e01" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="ArpMode" uuid="f5dd5ac026c7418488a75938cbf24a0a">
          <luaMethod luaMethodName="arpmdPaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;arpmdPaint = function(comp,g)&#10;g:setColour(cLED)&#13;&#10;g:setFont(Shapetxt)&#13;&#10;precv = comp:getOwner():getValue()&#13;&#10;     if precv == 0  &#13;&#10;   then prect = &quot;Up&quot; &#13;&#10; elseif precv == 1&#13;&#10;   then prect = &quot;Down&quot;&#13;&#10; elseif precv == 2&#13;&#10;   then prect = &quot;Up/Down&quot;&#13;&#10; elseif precv == 3&#13;&#10;   then prect = &quot;Assign&quot;&#13;&#10;    end&#13;&#10;g:drawText(prect,0,0,72,32,CENTRE,false)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,10,-10,BLANK,-10,20, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-46,0,BLANK,comp:getWidth()-20,40, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="e78c1e4f1cc443f28b23d3f2d80d2a42" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="StepClock" uuid="94719b8b01a04db8ad3aa1b489b62212">
          <luaMethod luaMethodName="clockPaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;clockPaint = function(comp, g)&#10;clckv = comp:getOwner():getValue()&#13;&#10;g:setColour(cLED)&#13;&#10;g:setFont(Shapetxt)&#13;&#10;  &#13;&#10;     if clckv == 3 or clckv == 4 or clckv == 7 or clckv == 8 &#13;&#10;   then txtY = -6&#13;&#10;        clktxt2 = &quot;sw&quot;    &#13;&#10;        if clckv == 3 or clckv == 7&#13;&#10;      then clktxt3 = &quot;half&quot;&#13;&#10;      else clktxt3 = &quot;full&quot;&#13;&#10;       end&#13;&#10;        g:drawText(&quot;&quot;..clktxt3..clktxt2,0,6,72,32,CENTRE,false)&#13;&#10;   else txtY = 0&#13;&#10;    end &#13;&#10;g:drawText(clktxt[clckv+1],0,txtY,72,32,CENTRE,false)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,0,8,BLANK,0,40, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-36,0,BLANK,comp:getWidth(),50, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="16546cf168c642139e997b8a403240be" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="SeqTrig" uuid="2085408e4ee8433980c8997854a79250">
          <luaMethod luaMethodName="trigPaint" luaMethodCode="--&#10;-- Called when a component needs repainting&#10;-- @comp&#10;-- @g    http://ctrlr.org/api/class_ctrlr_lua_graphics.html&#10;--              see also http://www.rawmaterialsoftware.com/juce/api/classGraphics.html&#10;--&#10;&#10;trigPaint = function(comp, g)&#10;trgv = comp:getOwner():getValue()&#13;&#10;g:setColour(cLED)&#13;&#10;g:setFont(Shapetxt)&#13;&#10;     if trgv == 1 or trgv == 3 &#13;&#10;   then txt2Y = -6&#13;&#10;        g:drawText(&quot;No Reset&quot;,0,6,72,32,CENTRE,false)&#13;&#10;   else txt2Y = 0&#13;&#10;    end  &#13;&#10;g:drawText(trgtxt[trgv+1],0,txt2Y,72,32,CENTRE,false)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,10,42,BLANK,42,20, true))&#13;&#10;g:fillRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0)&#13;&#10;g:setGradientFill(  ColourGradient(cGR9,comp:getWidth()-36,0,BLANK,comp:getWidth(),50, true))&#13;&#10;g:drawRoundedRectangle(2,2,comp:getWidth()-4,comp:getHeight()-11,1.0,1.0)&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomPaintCallback" luaMethodSource="0"
                     uuid="93b5d92d5236467f9f6ce6898a193a60" luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="Prog" uuid="e63ff99568b349f39c4ac3a4c7e91d72">
          <luaMethod luaMethodName="programClick" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;programClick = function( comp,event)&#10;prclky = event.y&#13;&#10;prclkx = event.x&#13;&#10;&#13;&#10;     if prclky &gt;= 32 then&#13;&#10;&#9;   modalWindow = AlertWindow(&quot;Program Name&quot;,&quot;&quot;, AlertWindow.InfoIcon)&#13;&#10;       modalWindow:addButton(&quot;OK&quot;, 1, KeyPress(KeyPress.returnKey), KeyPress())&#13;&#10;  &#9;   modalWindow:addButton(&quot;Cancel&quot;, 0, KeyPress(KeyPress.escapeKey), KeyPress())&#13;&#10;&#9;   modalWindow:addTextEditor (&quot;nameEdit&quot;,&quot;&quot;, &quot;16 Characters max&quot;, false)&#13;&#10;&#9;   modalWindow:setModalHandler(windowCallback)&#13;&#10;&#9;   modalWindow:runModalLoop()&#13;&#10;&#13;&#10;    end&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                     uuid="25f5cd1856084137841e3d806d2410bf" luaMethodValid="1"/>
        </luaMethodGroup>
      </luaMethodGroup>
      <luaMethod luaMethodName="midsav" luaMethodCode="function midsav()&#10;             --   local Read = MemoryBlock()&#13;&#10;              --   for t = 0,288,8                                  &#13;&#10;               --   do   if t == 0 &#13;&#10;                 --    then w = 0&#13;&#10;                   --  else w = (t/8)*7&#13;&#10;                     --     t = t -1&#13;&#10;                     -- end&#13;&#10;--console(&quot;t&quot;..t)&#13;&#10;--console(&quot;w&quot;..w)&#13;&#10;                     -- y = BigInteger(Edit:getByte(t))&#13;&#10;                      -- for a = 1,7 &#13;&#10;                       -- do u = y:getBitRangeAsInt(a-1,1)&#13;&#10;                        --   f = BigInteger(Edit:getByte(t+a))                              &#13;&#10;                         --  f:setBitRangeAsInt(7,1,u)&#13;&#10;                          -- Read:insert( MemoryBlock(f:getBitRangeAsInt(0,8)),1)  &#13;&#10;&#13;&#10;                     --  end&#13;&#10;&#13;&#10;                -- end                  &#13;&#10;--console(&quot;read:&quot;..Read:toHexString(1))&#10;end"
                 luaMethodLinkedProperty="" luaMethodSource="0" uuid="cd22a5d9f9ab4cc898202ca17b251733"
                 luaMethodValid="1"/>
    </luaManagerMethods>
  </luaManager>
  <panelResources/>
  <uiPanelEditor uiPanelCanvasRectangle="0 0 1484 906" uiPanelSnapSize="4" uiPanelBackgroundColour="0xffffffff"
                 uiPanelBackgroundColour1="ffffdb44" uiPanelBackgroundColour2="ffffc744"
                 uiPanelBackgroundGradientType="0" uiPanelImageResource="-- None"
                 uiPanelEditMode="0" uiPanelLock="1" uiPanelDisabledOnEdit="0"
                 uiPanelWidth="400" uiPanelHeight="400" name="Mopho Desktop" uiPanelImageAlpha="255"
                 uiPanelImageLayout="64" uiPanelSnapActive="1" uiPanelPropertiesOnRight="0"
                 luaPanelPaintBackground="NewPanelPaint" luaPanelResized="-- None"
                 luaPanelFileDragDropHandler="-- None" luaPanelFileDragEnterHandler="-- None"
                 luaPanelFileDragExitHandler="-- None" uiPanelInvisibleComponentAlpha="0.5"
                 uiPanelMidiToolbarVisible="0" uiPanelTooltipBackgroundColour="0xffeeeebb"
                 uiPanelTooltipOutlineColour="0xff000000" uiPanelTooltipColour="0xff000000"
                 uiPanelTooltipCornerRound="1" uiPanelTooltipPlacement="2" uiPanelTooltipFont="&lt;Sans-Serif&gt;;15;1;0;0;0;0;3"
                 uiPanelZoom="1" uiPanelViewPortSize="1181" uiPanelPropertiesSize="295"
                 uiPanelDisableCombosOnEdit="1">
    <uiPanelCanvasLayer uiPanelCanvasLayerName="Main" uiPanelCanvasLayerUid="2a851ff65f000000dd8bb8a649010000"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="1"
                        uiPanelCanvasLayerIndex="2"/>
    <uiPanelCanvasLayer uiPanelCanvasLayerName="sequencer" uiPanelCanvasLayerUid="3bc4f03a880000007a125a604a010000"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="1"
                        uiPanelCanvasLayerIndex="2"/>
  </uiPanelEditor>
  <modulator modulatorVstExported="1" modulatorMax="164" vstIndex="20" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="3" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="vcfCutoff" modulatorMin="0" modulatorValue="84">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="15" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Cutoff"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="164" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="164" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="0"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="88 160 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="21" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="vcfResonance" modulatorMin="0" modulatorValue="57">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="16" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Resonance"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="0" componentTabName="ViewTab"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="168 160 72 88"
               uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="22" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="vcfKeybAmount" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="17" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Keyboard&#10;Amount"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="248 160 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="23" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="vcfAudioMod" modulatorMin="0" modulatorValue="42">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="18" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Audio&#10;Mod"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="328 160 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="26" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="vcfVelocityAmount" modulatorMin="0" modulatorValue="44">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="21" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Velocity&#10;Amount"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="408 160 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="27" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="vcfEnvelopeDelay" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="22" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Envelope&#10;Delay"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="12 264 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="25" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="2" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="vcfEnvAmount" modulatorMin="0" modulatorValue="237">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="20" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Envelope&#10;Amount"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="254" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="88 264 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="28" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="modsfbrepaint"
             name="vcfEnvAttack" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="23" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Attack"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="168 264 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="29" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="modsfbrepaint"
             name="vcfEnvDecay" modulatorMin="0" modulatorValue="37">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="24" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Decay&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="248 264 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="30" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="modsfbrepaint"
             name="vcfEnvSustain" modulatorMin="0" modulatorValue="48">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="25" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Sustain"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="328 264 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="31" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="modsfbrepaint"
             name="vcfEnvRelease" modulatorMin="0" modulatorValue="115">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="26" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Release"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="408 264 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="24" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="1"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="bntled"
             name="vcfMode" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="19" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="30" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="8cffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff000000" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0" componentRectangle="16 192 56 32"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiButton"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LED1" modulatorVstExported="0" vstIndex="196" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ffffac00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.88;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="16 144 56 44"
               uiType="uiLabel" componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="4" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="3"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="bntled"
             name="osc1Keyboard" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="4" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="a2ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff000000" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0" componentRectangle="576 56 56 32"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiButton" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="120" vstIndex="0" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="4" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="freq1" name="osc1Frequency"
             modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="120" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="248 24 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="1" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="5" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="freq1" name="osc1Fine"
             modulatorMin="0" modulatorValue="48">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="50" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="328 24 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="3" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="osc1Glide" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="3" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="408 24 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="5" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="osc1Sub" modulatorMin="0" modulatorValue="61">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="114" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="488 24 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LED3" modulatorVstExported="0" vstIndex="198" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ffffac00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.88;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiLabel" componentRectangle="576 8 56 44" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LED4" modulatorVstExported="0" vstIndex="199" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ffffac00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.88;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="1328 8 56 44"
               uiType="uiLabel" componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="10" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="4"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="bntled"
             name="osc2Keyboard" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="9" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="a2ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff000000" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0" componentRectangle="1328 56 56 32"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiButton"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="7" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="5" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="freq2" name="osc2Fine"
             modulatorMin="0" modulatorValue="57">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="6" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="50" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="0" componentTabName="ViewTab"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="1080 24 72 88"
               uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="120" vstIndex="6" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="4" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="freq2" name="osc2Frequency"
             modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="5" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="120" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="0" componentTabName="ViewTab"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="1000 24 72 88"
               uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="11" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="osc2Sub" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="115" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="0" componentTabName="ViewTab"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="1240 24 72 88"
               uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="9" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="osc2Glide" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="8" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="0" componentTabName="ViewTab"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="1160 24 72 88"
               uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="37" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="modsfbrepaint"
             name="vcaEnvDecay" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="34" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Decay&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="5" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="4.5" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="664 264 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="36" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="modsfbrepaint"
             name="vcaEnvAttack" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="33" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Attack"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="5" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="4.5" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="584 264 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="34" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="vcaVelocityAmount" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="31" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Velocity&#10;Amount"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="5" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="4.5" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="504 208 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="32" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="vcaInitialLevel" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="27" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Initial&#10;Level"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="5" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="4.5" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="584 160 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="33" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="vcaEnvAmount" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="30" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Envelope&#10;Amount"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="5" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="4.5" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="824 160 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="40" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="vcaVoiceVolume" modulatorMin="0" modulatorValue="102">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="29" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Voice&#10;Volume"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="664 160 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="35" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="vcaEnvDelay" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="32" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Envelope&#10;Delay"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="5" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="4.5" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="744 160 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="38" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="modsfbrepaint"
             name="vcaEnvSustain" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="35" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Sustain"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="5" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="4.5" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="744 264 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="39" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="modsfbrepaint"
             name="vcaEnvRelease" modulatorMin="0" modulatorValue="108">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="36" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Release"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="5" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="4.5" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="824 264 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="69" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="2"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="bntled"
             name="env3Repeat" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="98" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="95ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff000000" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0" componentRectangle="1248 296 56 32"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiButton" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="65" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="modsfbrepaint"
             name="env3Attack" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="61" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Attack"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="1000 160 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="66" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="modsfbrepaint"
             name="env3Decay" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="62" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Decay&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="1080 160 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="67" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="modsfbrepaint"
             name="env3Sustain" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="63" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Sustain"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="1160 160 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="68" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="modsfbrepaint"
             name="env3Release" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="64" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Release"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="1240 160 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="63" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="env3VelocityAmount" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="59" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Velocity&#10;Amount"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="920 208 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="64" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="env3Delay" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="60" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Delay&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="1000 264 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="62" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="2" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="env3Amount" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="58" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Amount"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="254" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="1080 264 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LED2" modulatorVstExported="0" vstIndex="197" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.88;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiLabel" componentRectangle="1248 248 56 44" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="61" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="env3Destination"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="57" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="a9ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiType="uiCombo" componentRotation="0" componentSnapSizeAllow="0"
               componentEffectAlpha="0" componentRectangle="1160 296 72 32"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="72" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="mod1Destination"
             modulatorMin="0" modulatorValue="9">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="67" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="a6ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentRectangle="176 424 72 32" componentEffectAlpha="0" componentSnapSizeAllow="0"
               componentRotation="0" uiType="uiCombo" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="22" vstIndex="70" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="mod1Source"
             modulatorMin="0" modulatorValue="6">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="65" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="a6ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Sequence Track 1 &#10;Sequence Track 2 &#10;Sequence Track 3 &#10;Sequence Track 4 &#10;LFO 1 &#10;LFO 2 &#10;LFO 3 &#10;LFO 4 &#10;Filter Envelope &#10;Amp Envelope &#10;Envelope 3 &#10;Pitch Bend &#10;Mod Wheel &#10;Pressure &#10;MIDI Breath &#10;MIDI Foot &#10;MIDI Expression &#10;Velocity &#10;Note Number &#10;Noise &#10;Audio In Envelope Follo&#10;Audio In Peak Hold "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentRectangle="16 424 72 32" componentEffectAlpha="0" componentSnapSizeAllow="0"
               componentRotation="0" uiType="uiCombo" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="71" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="2" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="modsfbrepaint2"
             name="mod1Amount" modulatorMin="0" modulatorValue="146">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="66" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="254" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="0" componentTabName="ViewTab"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="96 392 72 88"
               uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="74" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="2" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="modsfbrepaint2"
             name="mod2Amount" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="69" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="254" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="360 392 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="75" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="mod2Destination"
             modulatorMin="0" modulatorValue="13">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="70" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="a6ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiType="uiCombo" componentRotation="0" componentSnapSizeAllow="0"
               componentEffectAlpha="0" componentRectangle="440 424 72 32" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="22" vstIndex="73" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="mod2Source"
             modulatorMin="0" modulatorValue="6">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="68" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="a6ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Sequence Track 1 &#10;Sequence Track 2 &#10;Sequence Track 3 &#10;Sequence Track 4 &#10;LFO 1 &#10;LFO 2 &#10;LFO 3 &#10;LFO 4 &#10;Filter Envelope &#10;Amp Envelope &#10;Envelope 3 &#10;Pitch Bend &#10;Mod Wheel &#10;Pressure &#10;MIDI Breath &#10;MIDI Foot &#10;MIDI Expression &#10;Velocity &#10;Note Number &#10;Noise &#10;Audio In Envelope Follo&#10;Audio In Peak Hold "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiType="uiCombo" componentRotation="0" componentSnapSizeAllow="0"
               componentEffectAlpha="0" componentRectangle="280 424 72 32" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="78" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="mod3Destination"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="73" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="a6ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentRectangle="704 424 72 32" componentEffectAlpha="0" componentSnapSizeAllow="0"
               componentRotation="0" uiType="uiCombo" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="22" vstIndex="76" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="mod3Source"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="71" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="a6ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Sequence Track 1 &#10;Sequence Track 2 &#10;Sequence Track 3 &#10;Sequence Track 4 &#10;LFO 1 &#10;LFO 2 &#10;LFO 3 &#10;LFO 4 &#10;Filter Envelope &#10;Amp Envelope &#10;Envelope 3 &#10;Pitch Bend &#10;Mod Wheel &#10;Pressure &#10;MIDI Breath &#10;MIDI Foot &#10;MIDI Expression &#10;Velocity &#10;Note Number &#10;Noise &#10;Audio In Envelope Follo&#10;Audio In Peak Hold "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentRectangle="544 424 72 32" componentEffectAlpha="0" componentSnapSizeAllow="0"
               componentRotation="0" uiType="uiCombo" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="77" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="2" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="modsfbrepaint2"
             name="mod3Amount" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="72" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="254" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="624 392 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="22" vstIndex="79" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="mod4Source"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="74" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="a6ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Sequence Track 1 &#10;Sequence Track 2 &#10;Sequence Track 3 &#10;Sequence Track 4 &#10;LFO 1 &#10;LFO 2 &#10;LFO 3 &#10;LFO 4 &#10;Filter Envelope &#10;Amp Envelope &#10;Envelope 3 &#10;Pitch Bend &#10;Mod Wheel &#10;Pressure &#10;MIDI Breath &#10;MIDI Foot &#10;MIDI Expression &#10;Velocity &#10;Note Number &#10;Noise &#10;Audio In Envelope Follo&#10;Audio In Peak Hold "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentRectangle="808 424 72 32" componentEffectAlpha="0" componentSnapSizeAllow="0"
               componentRotation="0" uiType="uiCombo" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="80" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="2" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="modsfbrepaint2"
             name="mod4Amount" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="75" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="254" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="888 392 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="81" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="mod4Destination"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="76" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="a6ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiType="uiCombo" componentRotation="0" componentSnapSizeAllow="0"
               componentEffectAlpha="0" componentRectangle="968 424 72 32" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LED5" modulatorVstExported="0" vstIndex="200" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.88;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiLabel" componentRectangle="496 512 56 44" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="45" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="5"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="bntled"
             name="lfo1KeySync" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="41" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff000000" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0" componentRectangle="496 560 56 32"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiButton" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="44" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="lfo1Destination"
             modulatorMin="0" modulatorValue="6">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="40" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiType="uiCombo" componentRotation="0" componentSnapSizeAllow="0"
               componentEffectAlpha="0" componentRectangle="408 560 72 32" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="43" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="lfo1Amount" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="39" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="328 528 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="166" vstIndex="41" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="7" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="lfo1" name="lfo1Frequency"
             modulatorValue="23">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="37" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="KnobPaint7" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="168 528 152 88" uiCustomMouseDownCallback="KnobClick7"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="KnobDrag7" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiCustomComponent"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LED6" modulatorVstExported="0" vstIndex="201" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.88;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="1072 512 56 44"
               uiType="uiLabel" componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="55" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="6"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="bntled"
             name="lfo3KeySync" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="51" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff000000" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0" componentRectangle="1072 560 56 32"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiButton"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="49" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="lfo2Destination"
             modulatorMin="0" modulatorValue="7">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="45" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentRectangle="984 560 72 32" componentEffectAlpha="0" componentSnapSizeAllow="0"
               componentRotation="0" uiType="uiCombo" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="48" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="lfo2Amount" modulatorMin="0" modulatorValue="3">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="44" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="904 528 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="166" vstIndex="46" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="7" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="lfo2" name="lfo2Frequency"
             modulatorValue="17">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="42" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="KnobPaint7" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="744 528 152 88" uiCustomMouseDownCallback="KnobClick7"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="KnobDrag7" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiCustomComponent" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LED7" modulatorVstExported="0" vstIndex="202" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.88;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="496 648 56 44"
               uiType="uiLabel" componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="50" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="7"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="bntled"
             name="lfo2KeySync" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="46" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff000000" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0" componentRectangle="496 696 56 32"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiButton"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="54" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="lfo3Destination"
             modulatorMin="0" modulatorValue="3">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="50" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentRectangle="408 696 72 32" componentEffectAlpha="0" componentSnapSizeAllow="0"
               componentRotation="0" uiType="uiCombo" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="53" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="lfo3Amount" modulatorMin="0" modulatorValue="3">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="49" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="328 664 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="166" vstIndex="51" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="7" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="lfo3" name="lfo3Frequency"
             modulatorValue="69">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="47" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="KnobPaint7" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="168 664 152 88" uiCustomMouseDownCallback="KnobClick7"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="KnobDrag7" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiCustomComponent"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LED8" modulatorVstExported="0" vstIndex="203" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.88;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="1072 648 56 44"
               uiType="uiLabel" componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="60" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="8"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="bntled"
             name="lfo4KeySync" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="56" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff000000" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0" componentRectangle="1072 696 56 32"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiButton"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="59" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="lfo4Destination"
             modulatorMin="0" modulatorValue="9">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="55" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentRectangle="984 696 72 32" componentEffectAlpha="0" componentSnapSizeAllow="0"
               componentRotation="0" uiType="uiCombo" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="58" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="lfo4Amount" modulatorMin="0" modulatorValue="2">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="54" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="904 664 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="166" vstIndex="56" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="7" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="lfo4" name="lfo4Frequency"
             modulatorValue="159">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="52" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="KnobPaint7" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="744 664 152 88" uiCustomMouseDownCallback="KnobClick7"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="KnobDrag7" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiCustomComponent" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="MLED5" modulatorVstExported="0" vstIndex="215" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.68;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiLabel" componentRectangle="1064 436 20 44" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="82" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="2" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="modWheelAmount" modulatorMin="0" modulatorValue="35">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="81" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="254" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="0" componentTabName="CtrlTab"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="0 0 72 88"
               uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="83" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="modWheelDestination"
             modulatorMin="0" modulatorValue="9">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="82" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="a6ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentRectangle="80 32 72 32" componentEffectAlpha="0" componentSnapSizeAllow="0"
               componentRotation="0" uiType="uiCombo" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentTabName="CtrlTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="4" vstIndex="187" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="modulatorValue"
             modulatorLinkedToModulator="CtrlTab" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="CtrlLeds"
             name="modSelect" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="0.5" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiListBoxContent="ModWheel&#10;Pressure&#10;Velocity&#10;Foot&#10;Breath"
               componentRectangle="1088 400 66 88" uiListBoxRowHeight="16" uiListBoxBackgroundColour="ffffff"
               uiListBoxHighlightBgColour="7878ab" uiListBoxHighlightFgColour="0"
               uiListBoxTextColour="0" uiListBoxFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiListBoxHighlightFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" uiListBoxOutline="0"
               uiListBoxOutlineColour="0xff000000" uiListBoxVScrollBgColour="0xffffffff"
               uiListBoxVScrollThumbColour="0xffababab" uiListBoxVScrollTrackColour="0xffff0000"
               uiListBoxHScrollBgColour="0xffffffff" uiListBoxHScrollThumbColour="0xffababab"
               uiListBoxHScrollTrackColour="0xffff0000" uiListBoxJustification="centred"
               uiListBoxMultipleSelection="0" uiListBoxItemClicked="-- None"
               uiListBoxItemDoubleClicked="-- None" uiListBoxItemDeleteKeyPressed="-- None"
               uiListBoxItemReturnKeyPressed="-- None" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiListBox"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="MLED4" modulatorVstExported="0" vstIndex="214" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.68;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="1064 420 20 44"
               uiType="uiLabel" componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="MLED3" modulatorVstExported="0" vstIndex="213" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.68;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="1064 404 20 44"
               uiType="uiLabel" componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="MLED2" modulatorVstExported="0" vstIndex="212" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.68;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="1064 388 20 44"
               uiType="uiLabel" componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="MLED1" modulatorVstExported="0" vstIndex="211" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ffffac00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.68;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="1064 372 20 44"
               uiType="uiLabel" componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="3" vstIndex="172" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="15" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="globMidiClock"
             modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="388" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="MidClkPaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="408 24 152 40" uiCustomMouseDownCallback="MidClkClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" uiType="uiCustomComponent" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="Glb/PushTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="3" vstIndex="174" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="15" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="globParamRecv"
             modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="391" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="mparmrecPaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="248 24 72 40" uiCustomMouseDownCallback="mparmrecClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentTabId="0" componentTabName="Glb/PushTab"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="16" vstIndex="171" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="16" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="globMidiCh"
             modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="386" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="mglbchnlPaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="8 24 72 40" uiCustomMouseDownCallback="KnobClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="mglbchnlDrag" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" uiType="uiCustomComponent" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="Glb/PushTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="176" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="9"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="bntled"
             name="globSysEx" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="395" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff000000" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0" componentRectangle="96 24 56 32"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiButton" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="Glb/PushTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LED9" modulatorVstExported="0" vstIndex="204" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.88;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiLabel" componentRectangle="96 -24 56 44" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="Glb/PushTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="173" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="14" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="globParamSend"
             modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="390" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="mparmsndPaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="328 24 72 40" uiCustomMouseDownCallback="mparmsndClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentTabId="0" componentTabName="Glb/PushTab"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="175" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="10"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="bntled"
             name="globNRPN" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="394" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff000000" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0" componentRectangle="176 24 56 32"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiButton"
               componentTabName="Glb/PushTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LED10" modulatorVstExported="0" vstIndex="205" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.88;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiLabel" componentRectangle="176 -24 56 44" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="Glb/PushTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="1" vstIndex="178" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="13" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="midiTRHU"
             modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="406" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="MIDTHRpaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="568 24 72 40" uiCustomMouseDownCallback="BTNClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" uiType="uiCustomComponent" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="Glb/PushTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="103" vstIndex="2" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="8" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="osc1Shape" modulatorValue="51">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="2" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="OscPaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="8 24 232 92" uiCustomMouseDownCallback="OscClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="OscDrag" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiCustomComponent"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="93" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="pushitVelocity" modulatorValue="100">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="112" midiMessageCtrlrValue="1" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="Velpaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="648 24 72 40" uiCustomMouseDownCallback="KnobClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="KnobDrag" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiCustomComponent"
               componentTabName="Glb/PushTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="103" vstIndex="8" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="8" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="osc2Shape" modulatorValue="69">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="7" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="Osc2Paint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="760 24 232 92" uiCustomMouseDownCallback="OscClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="OscDrag" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="0" componentTabName="ViewTab" uiType="uiCustomComponent"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="4" vstIndex="42" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="6" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="lfo1Shape" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="38" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="LfoPaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="8 528 154 92" uiCustomMouseDownCallback="LfoClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiCustomComponent" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="4" vstIndex="47" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="6" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="lfo2Shape" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="43" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="Lfo2Paint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="584 528 154 92" uiCustomMouseDownCallback="LfoClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiCustomComponent"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="4" vstIndex="52" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="6" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="lfo3Shape" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="48" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="Lfo3Paint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="8 664 154 92" uiCustomMouseDownCallback="LfoClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiCustomComponent" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="4" vstIndex="57" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="6" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="lfo4Shape" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="53" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="Lfo4Paint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="584 664 154 92" uiCustomMouseDownCallback="LfoClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiCustomComponent"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="17" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="optOscMix" modulatorMin="0" modulatorValue="83">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="13" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=" &lt;-Mix-&gt;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="664 24 72 88"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="12" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="11"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="bntled"
             name="optOscSync" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="10" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="90ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff000000" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0" componentRectangle="1400 56 56 32"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiButton" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LED11" modulatorVstExported="0" vstIndex="206" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.88;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiLabel" componentRectangle="1400 8 56 44" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="CtrlTab" modulatorVstExported="0" vstIndex="194" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiTabsCurrentTabChanged=""
               uiTabsDepth="0" uiTabsOutlineThickness="0" uiTabsFrontTabOutline="0"
               uiTabsTabOutline="0" uiTabsIndentThickness="0" uiTabsOrientation="3"
               uiTabsFrontTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiTabsTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiTabsOutlineGlobalColour="0x00000000" uiTabsOutlineGlobalBackgroundColour="0x67000000"
               uiTabsOutlineTabColour="0xff303030" uiTabsTextTabColour="0xff909090"
               uiTabsFrontTabOutlineColour="0xff000000" uiTabsFrontTabTextColour="0xff000000"
               uiTabsAddTab="0" uiTabsRemoveTab="0" componentRectangle="1160 392 154 96"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiTabs" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiTabsCurrentTab="0" componentTabName="ViewTab" componentTabId="0">
      <uiTabsTab uiTabsTabIndex="0" uiTabsTabName="Tab 0" uiTabsTabContentBackgroundColour="0"
                 uiTabsTabBackgroundColour="0" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="1" uiTabsTabName="Tab 1" uiTabsTabContentBackgroundColour="0"
                 uiTabsTabBackgroundColour="200" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="2" uiTabsTabName="Tab 2" uiTabsTabContentBackgroundColour="0"
                 uiTabsTabBackgroundColour="0" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="3" uiTabsTabName="Tab 3" uiTabsTabContentBackgroundColour="0"
                 uiTabsTabBackgroundColour="0" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="4" uiTabsTabName="Tab 4" uiTabsTabContentBackgroundColour="0"
                 uiTabsTabBackgroundColour="0" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
    </component>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="84" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="2" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="pressureAmount" modulatorMin="0" modulatorValue="139">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="83" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Amount"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="ff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="254" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="1" componentTabName="CtrlTab"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="0 0 72 88"
               uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="85" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="pressureDestination"
             modulatorMin="0" modulatorValue="21">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="84" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="a6ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="5.7" componentEffectColour="0xff000000"
               componentEffectOffsetX="1" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiType="uiCombo" componentRotation="0" componentSnapSizeAllow="0"
               componentEffectAlpha="0" componentRectangle="80 32 72 32" componentTabName="CtrlTab"
               componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="88" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="2" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="velocityAmount" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="87" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Amount"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="254" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="2" componentTabName="CtrlTab"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="0 0 72 88"
               uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="89" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="velocityDestination"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="88" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="a6ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="5.7" componentEffectColour="0xff000000"
               componentEffectOffsetX="1" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="2" componentTabName="CtrlTab" componentRectangle="80 32 72 32"
               componentEffectAlpha="0" componentSnapSizeAllow="0" componentRotation="0"
               uiType="uiCombo" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="90" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="2" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="footAmount" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="89" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Amount"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="254" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="3" componentTabName="CtrlTab"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="0 0 72 88"
               uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="86" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="2" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="breathAmount" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="85" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="16" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Amount"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="10" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="6" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="254" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="4" componentTabName="CtrlTab"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="0 0 72 88"
               uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="91" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="footDestination"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="90" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="a6ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="5.7" componentEffectColour="0xff000000"
               componentEffectOffsetX="1" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiType="uiCombo" componentRotation="0" componentSnapSizeAllow="0"
               componentEffectAlpha="0" componentRectangle="80 32 72 32" componentTabName="CtrlTab"
               componentTabId="3"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="87" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="breathDestination"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="86" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="a6ffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="5.7" componentEffectColour="0xff000000"
               componentEffectOffsetX="1" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiType="uiCombo" componentRotation="0" componentSnapSizeAllow="0"
               componentEffectAlpha="0" componentRectangle="80 32 72 32" componentTabName="CtrlTab"
               componentTabId="4"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="18" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="optNoiseLevel" modulatorMin="0" modulatorValue="6">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="14" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="5" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="4.5" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="1360 560 72 100"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="19" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="1" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="optInputLevel" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="116" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="5" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="4.5" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="1360 664 72 100"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="16" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="9" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="optKeyAssignMode"
             modulatorValue="1">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="96" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="KeyAssgnPaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="1360 352 72 96" uiCustomMouseDownCallback="KeyAssgnClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentTabId="0" componentTabName="ViewTab"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="3" vstIndex="13" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="15" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="optGlideMode"
             modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="11" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="GldMdePaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="1360 480 72 48" uiCustomMouseDownCallback="GldMdeClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" uiType="uiCustomComponent" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="12" vstIndex="15" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="10" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="optBendRange" modulatorMin="0" modulatorValue="5">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="93" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;0;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="5" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="4.5" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="12" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="1360 248 72 100"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="14" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="9" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="optOscSlope" modulatorMin="0" modulatorValue="5">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="12" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;0;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="5" componentEffectColour="0xff000000"
               componentEffectOffsetX="1.5" componentEffectOffsetY="4.5" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="5" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="1360 144 72 100"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentTabName="ViewTab"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="169" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="12" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="globTranspose" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="384" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="mTransposePaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="648 24 72 40" uiCustomMouseDownCallback="KnobClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="mTransposeDrag" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="DoubleClick"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiCustomComponent" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="Glb/PushTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="170" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="5" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="globFine" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="385" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="fTunePaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="728 24 72 40" uiCustomMouseDownCallback="KnobClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="fTuneDrag" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="DoubleClick"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiCustomComponent" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="Glb/PushTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="177" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="13" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="globAudioOut"
             modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="405" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="AuOutPaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="808 24 72 40" uiCustomMouseDownCallback="BTNClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" uiType="uiCustomComponent" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="Glb/PushTab" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="94" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="14" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="pushitMode"
             modulatorValue="1">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="113" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="PImodePaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="728 24 72 40" uiCustomMouseDownCallback="mparmsndClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentTabId="1" componentTabName="Glb/PushTab"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="120" vstIndex="92" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="4" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="pushitNote" modulatorValue="60">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="111" midiMessageCtrlrValue="1" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Note"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="NotePaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="808 24 72 40" uiCustomMouseDownCallback="KnobClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="KnobDrag4" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiCustomComponent"
               componentTabName="Glb/PushTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="1" vstIndex="190" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="14"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="bntled"
             name="GetEdit" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="1" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Get"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="8affffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="EditReq" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ffcecece"
               uiButtonColourOff="ff7f7f7f" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="1" componentRectangle="1256 840 56 64"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiButton" componentLayerUid="2a851ff65f000000dd8bb8a649010000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LED14" modulatorVstExported="0" vstIndex="209" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.88;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiLabel" componentRectangle="1256 792 56 44" componentLayerUid="2a851ff65f000000dd8bb8a649010000"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="1" vstIndex="191" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="15"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="bntled"
             name="SendEdit" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="1" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Send"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="8affffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="SendEdit" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ffcecece"
               uiButtonColourOff="ff7f7f7f" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="1" componentRectangle="1328 840 56 64"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiButton"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="1" vstIndex="189" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="modulatorValue"
             modulatorLinkedToModulator="ViewTab" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="viewbtn"
             name="View" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="1" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Seq"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="8affffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ffcf4848"
               uiButtonColourOff="ffcf4848" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0" componentRectangle="1400 842 56 62"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiButton"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LED15" modulatorVstExported="0" vstIndex="210" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.88;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" componentRectangle="1328 792 56 44"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="ViewTab" modulatorVstExported="0" vstIndex="193" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiTabsCurrentTabChanged=""
               uiTabsDepth="0" uiTabsOutlineThickness="0" uiTabsFrontTabOutline="0"
               uiTabsTabOutline="0" uiTabsIndentThickness="0" uiTabsOrientation="1"
               uiTabsFrontTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiTabsTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiTabsOutlineGlobalColour="0x00000000" uiTabsOutlineGlobalBackgroundColour="0x67000000"
               uiTabsOutlineTabColour="0xff303030" uiTabsTextTabColour="0xff909090"
               uiTabsFrontTabOutlineColour="0xff000000" uiTabsFrontTabTextColour="0xff000000"
               uiTabsAddTab="0" uiTabsRemoveTab="0" componentRectangle="8 24 1472 776"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiTabs" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiTabsCurrentTab="0">
      <uiTabsTab uiTabsTabIndex="0" uiTabsTabName="Tab 0" uiTabsTabContentBackgroundColour="0"
                 uiTabsTabBackgroundColour="0" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="1" uiTabsTabName="Tab 1" uiTabsTabContentBackgroundColour="0"
                 uiTabsTabBackgroundColour="0" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
    </component>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="1" vstIndex="188" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="modulatorValue"
             modulatorLinkedToModulator="Glb/PushTab" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="view2btn"
             name="GlbSelect" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="1" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Push It!"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="8affffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ffcf4848"
               uiButtonColourOff="ffcf4848" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0" componentRectangle="922 840 56 64"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="105" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="modulatorValue"
             modulatorLinkedToModulator="modulator-1" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="101"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S1stch"
             name="seq1Step-1" modulatorMin="0" modulatorValue="46">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="120" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="20 344 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="106" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="102"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S1stch"
             name="seq1Step-2" modulatorMin="0" modulatorValue="77">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="121" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="48 344 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="107" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="103"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S1stch"
             name="seq1Step-3" modulatorMin="0" modulatorValue="28">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="122" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="76 344 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="108" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="104"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S1stch"
             name="seq1Step-4" modulatorMin="0" modulatorValue="18">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="123" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="104 344 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="109" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="105"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S1stch"
             name="seq1Step-5" modulatorMin="0" modulatorValue="37">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="124" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="132 344 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="110" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="106"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S1stch"
             name="seq1Step-6" modulatorMin="0" modulatorValue="19">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="125" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="160 344 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="111" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="107"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S1stch"
             name="seq1Step-7" modulatorMin="0" modulatorValue="14">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="126" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="188 344 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="112" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="108"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S1stch"
             name="seq1Step-8" modulatorMin="0" modulatorValue="2">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="127" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="216 344 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="113" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="109"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S1stch"
             name="seq1Step-9" modulatorMin="0" modulatorValue="70">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="128" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="244 344 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="114" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="110"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S1stch"
             name="seq1Step-10" modulatorMin="0" modulatorValue="46">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="129" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="272 344 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="115" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="111"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S1stch"
             name="seq1Step-11" modulatorMin="0" modulatorValue="22">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="130" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="300 344 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="116" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="112"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S1stch"
             name="seq1Step-12" modulatorMin="0" modulatorValue="58">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="131" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="328 344 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="117" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="113"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S1stch"
             name="seq1Step-13" modulatorMin="0" modulatorValue="42">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="132" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="356 344 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="118" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="114"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S1stch"
             name="seq1Step-14" modulatorMin="0" modulatorValue="19">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="133" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="384 344 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="119" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="115"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S1stch"
             name="seq1Step-15" modulatorMin="0" modulatorValue="36">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="134" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="412 344 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="121" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="201"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S2tch" name="seq2Step-1"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="136" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="604 348 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="122" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="202"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S2tch" name="seq2Step-2"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="137" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="632 348 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="123" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="203"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S2tch" name="seq2Step-3"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="138" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="660 348 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="124" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="204"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S2tch" name="seq2Step-4"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="139" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="688 348 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="125" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="205"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S2tch" name="seq2Step-5"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="140" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="716 348 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="126" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="206"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S2tch" name="seq2Step-6"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="141" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="744 348 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="127" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="207"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S2tch" name="seq2Step-7"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="142" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="772 348 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="128" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="208"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S2tch" name="seq2Step-8"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="143" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="800 348 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="129" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="209"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S2tch" name="seq2Step-9"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="144" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="828 348 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="130" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="210"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S2tch" name="seq2Step-10"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="145" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="856 348 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="131" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="211"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S2tch" name="seq2Step-11"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="146" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="884 348 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="132" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="212"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S2tch" name="seq2Step-12"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="147" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="912 348 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="133" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="213"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S2tch" name="seq2Step-13"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="148" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="940 348 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="134" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="214"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S2tch" name="seq2Step-14"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="149" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="968 348 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="135" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="215"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S2tch" name="seq2Step-15"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="150" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="996 348 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="136" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="216"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S2tch" name="seq2Step-16"
             modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="151" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentRectangle="1024 348 28 40" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="137" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="301"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S3stch"
             name="seq3Step-1" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="152" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="16 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="138" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="302"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S3stch"
             name="seq3Step-2" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="153" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="44 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="139" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="303"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S3stch"
             name="seq3Step-3" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="154" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="72 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="140" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="304"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S3stch"
             name="seq3Step-4" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="155" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="100 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="141" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="305"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S3stch"
             name="seq3Step-5" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="156" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="128 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="142" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="306"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S3stch"
             name="seq3Step-6" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="157" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="156 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="143" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="307"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S3stch"
             name="seq3Step-7" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="158" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="184 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="144" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="308"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S3stch"
             name="seq3Step-8" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="159" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="212 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="146" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="310"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S3stch"
             name="seq3Step-10" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="160" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="268 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="145" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="309"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S3stch"
             name="seq3Step-9" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="161" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="240 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="147" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="311"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S3stch"
             name="seq3Step-11" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="162" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="296 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="148" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="312"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S3stch"
             name="seq3Step-12" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="163" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="324 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="149" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="313"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S3stch"
             name="seq3Step-13" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="164" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="352 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="150" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="314"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S3stch"
             name="seq3Step-14" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="165" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="380 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="151" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="315"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S3stch"
             name="seq3Step-15" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="166" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="408 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="152" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="316"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S3stch"
             name="seq3Step-16" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="167" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="436 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="153" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="401"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S4stch"
             name="seq4Step-1" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="168" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="600 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="154" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="402"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S4stch"
             name="seq4Step-2" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="169" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="628 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="155" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="403"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S4stch"
             name="seq4Step-3" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="170" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="660 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="156" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="404"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S4stch"
             name="seq4Step-4" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="171" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="692 724 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="157" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="405"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S4stch"
             name="seq4Step-5" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="172" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="724 720 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="158" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="406"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S4stch"
             name="seq4Step-6" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="173" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="752 728 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="159" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="407"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S4stch"
             name="seq4Step-7" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="174" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="780 728 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="160" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="408"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S4stch"
             name="seq4Step-8" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="175" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="808 728 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="161" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="409"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S4stch"
             name="seq4Step-9" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="176" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="836 728 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="162" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="410"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S4stch"
             name="seq4Step-10" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="177" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="864 728 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="163" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="411"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S4stch"
             name="seq4Step-11" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="178" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="892 728 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="164" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="412"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S4stch"
             name="seq4Step-12" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="179" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="916 728 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="165" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="413"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S4stch"
             name="seq4Step-13" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="180" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="944 728 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="166" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="414"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S4stch"
             name="seq4Step-14" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="181" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="972 728 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="167" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="415"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S4stch"
             name="seq4Step-15" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="182" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="1000 728 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="168" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="416"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S4stch"
             name="seq4Step-16" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="183" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="1032 728 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="120" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="116"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="S1stch"
             name="seq1Step-16" modulatorMin="0" modulatorValue="18">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="135" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="&#10;"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiSlider" componentRectangle="440 344 28 40" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="101" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="Dest1repaint"
             name="Seq1Destination" modulatorMin="0" modulatorValue="3">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="77" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiCombo"
               componentRotation="0" componentSnapSizeAllow="0" componentEffectAlpha="0"
               componentRectangle="484 260 72 32"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="102" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="Dest2repaint"
             name="Seq2Destination" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="79" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentRectangle="1068 260 72 32" componentEffectAlpha="0"
               componentSnapSizeAllow="0" componentRotation="0" uiType="uiCombo"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="103" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="Dest3repaint"
             name="Seq3Destination" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="78" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiCombo"
               componentRotation="0" componentSnapSizeAllow="0" componentEffectAlpha="0"
               componentRectangle="484 636 72 32"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="46" vstIndex="104" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="Dest4repaint"
             name="Seq4Destination" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="80" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ffffffff"
               uiComboOutlineColour="0" uiComboTextColour="ff15caca" uiComboTextJustification="centred"
               uiComboFont="MQ9 LiquidCrystalText;9;1;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ffffffff" uiComboBgColour="0" uiComboMenuBackgroundColour="ffffdb44"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffffae44"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="Off &#10;Osc 1 Freq &#10;Osc 2 Freq &#10;Osc 1 and 2 Freq &#10;Osc Mix &#10;Noise Level &#10;Osc 1 Pulse Width &#10;Osc 2 Pulse Width &#10;Osc 1 and 2 Pulse W&#10;Filter Frequency &#10;Resonance &#10;Filter Audio Mod Am&#10;VCA Level &#10;Pan Spread &#10;LFO 1 Freq &#10;LFO 2 Freq &#10;LFO 3 Freq &#10;LFO 4 Freq &#10;All LFO Freq &#10;LFO 1 Amt &#10;LFO 2 Amt &#10;LFO 3 Amt &#10;LFO 3 Amt &#10;All LFO Amt &#10;Filter Env Amt &#10;Amp Env Amt &#10;Env 3 Amt &#10;All Env Amounts &#10;Env 1 Attack &#10;Env 2 Attack &#10;Env 3 Attack &#10;All Env Attacks &#10;Env 1 Decay &#10;Env 2 Decay &#10;Env 3 Decay &#10;All Env Decays &#10;Env 1 Release &#10;Env 2 Release &#10;Env 3 Release &#10;All Env Releases&#10;Mod 1 Amt &#10;Mod 2 Amt &#10;Mod 3 Amt &#10;Mod 4 Amt &#10;External Audio In Le&#10;Sub Osc 1 Level &#10;Sub Osc 2 Level "
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="1" uiComboButtonGradientColour1="ff6c6c6c"
               uiComboButtonGradientColour2="ff080808" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               componentLayerUid="2a851ff65f000000dd8bb8a649010000" uiType="uiCombo"
               componentRotation="0" componentSnapSizeAllow="0" componentEffectAlpha="0"
               componentRectangle="1068 636 72 32"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="16" vstIndex="180" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="16" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="seq1vc"
             name="Sequence1" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="Seq1Paint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="12 24 460 326" uiCustomMouseDownCallback="Seq1Click"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="Seq1Drag" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="16" vstIndex="181" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="16" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="seq2vc"
             name="Sequence2" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="Seq2Paint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="596 24 460 326" uiCustomMouseDownCallback="Seq2Click"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="Seq2Drag" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Glb/PushTab" modulatorVstExported="0" vstIndex="195" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiTabsCurrentTabChanged=""
               uiTabsDepth="0" uiTabsOutlineThickness="0" uiTabsFrontTabOutline="0"
               uiTabsTabOutline="0" uiTabsIndentThickness="0" uiTabsOrientation="1"
               uiTabsFrontTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiTabsTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiTabsOutlineGlobalColour="0x00000000" uiTabsOutlineGlobalBackgroundColour="0x67000000"
               uiTabsOutlineTabColour="0xff303030" uiTabsTextTabColour="0xff909090"
               uiTabsFrontTabOutlineColour="0xff000000" uiTabsFrontTabTextColour="0xff000000"
               uiTabsAddTab="0" uiTabsRemoveTab="0" componentRectangle="8 800 895 102"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiTabs" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiTabsCurrentTab="0">
      <uiTabsTab uiTabsTabIndex="0" uiTabsTabName="Tab 0" uiTabsTabContentBackgroundColour="0"
                 uiTabsTabBackgroundColour="0" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="1" uiTabsTabName="Tab 1" uiTabsTabContentBackgroundColour="0"
                 uiTabsTabBackgroundColour="0" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
    </component>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="65536" vstIndex="192"
             modulatorIsStatic="1" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="programName" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="-- None" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="1016 824 216 62" uiCustomMouseDownCallback="programClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" uiType="uiCustomComponent" componentLayerUid="2a851ff65f000000dd8bb8a649010000"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="65536" vstIndex="184"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="ModsFeedback" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="ModsFbPaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="1185 280 282 268" uiCustomMouseDownCallback="ModsFbClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="ModsFbDrg" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="65536" vstIndex="185"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="ModsFeedback2" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="ModsFbPaint2" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="1185 568 285 72" uiCustomMouseDownCallback="ModsFbClick2"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="ModsFbDrg2" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="DbleClckMods"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiCustomComponent" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="16" vstIndex="182" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="16" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="seq3vc"
             name="Sequence3" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="Seq3Paint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="12 400 460 326" uiCustomMouseDownCallback="Seq3Click"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="Seq3Drag" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="100" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="12"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="bntled"
             name="gatedSeq" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="101" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff000000" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0" componentRectangle="1176 560 56 32"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="0" componentTabName="" componentLayerUid="3bc4f03a880000007a125a604a010000"
               uiType="uiButton"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LED12" modulatorVstExported="0" vstIndex="207" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ffffac00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.88;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="0" componentTabName="" uiType="uiLabel" componentRectangle="1176 512 56 44"
               componentLayerUid="3bc4f03a880000007a125a604a010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="99" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="9" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="seqTrigger"
             modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="94" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="trigPaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="1248 560 72 40" uiCustomMouseDownCallback="KnobClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="KnobDrag6" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentLayerUid="3bc4f03a880000007a125a604a010000"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="12" vstIndex="96" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="10" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="clockDivide"
             modulatorValue="6">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="92" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="clockPaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="1248 632 72 40" uiCustomMouseDownCallback="KnobClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="KnobDrag8" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentLayerUid="3bc4f03a880000007a125a604a010000"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="250" vstIndex="95" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="11" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="bpmTempo"
             modulatorValue="120">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="91" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="sequencerGroup-1"
               componentGroupped="0" componentSnapSize="8" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="No Effect" componentEffectRadius="1"
               componentEffectColour="13ffffff" componentEffectOffsetX="0" componentEffectOffsetY="1"
               componentExcludedFromLabelDisplay="0" componentValueDecimalPlaces="0"
               componentLuaMouseMoved="-- None" componentLuaMouseDown="-- None"
               componentLuaMouseDrag="-- None" componentLuaMouseDoubleClick="-- None"
               uiCustomResizedCallback="-- None" uiCustomPaintCallback="BpmPaint"
               uiCustomPaintOverChildrenCallback="-- None" componentRectangle="1168 632 72 40"
               uiCustomMouseDownCallback="KnobClick" uiCustomMouseUpCallback="-- None"
               uiCustomMouseEnterCallback="-- None" uiCustomMouseExitCallback="-- None"
               uiCustomMouseMoveCallback="-- None" uiCustomMouseDragCallback="BpmDrag"
               uiCustomKeyDownCallback="-- None" uiCustomKeyStateChangedCallback="-- None"
               uiCustomMouseDoubleClickCallback="-- None" uiCustomMouseWheelMoveCallback="-- None"
               uiCustomStartDraggingCallback="-- None" uiCustomIsInterestedInDragSourceCallback="-- None"
               uiCustomItemDragEnterCallback="-- None" uiCustomItemDragMoveCallback="-- None"
               uiCustomItemDragExitCallback="-- None" uiCustomItemDroppedCallback="-- None"
               uiCustomDragAndDropTarget="0" uiCustomDragAndDropContainer="0"
               uiCustomDrawDragImageWhenOver="0" uiCustomAllowExternalDrags="0"
               uiCustomMouseDownGrabsFocus="0" uiCustomWantsKeyboardFocus="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="0" componentTabName="" componentLayerUid="3bc4f03a880000007a125a604a010000"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LED13" modulatorVstExported="0" vstIndex="208" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="4" componentEffectColour="ffff8300"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centredTop" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;40;1;0;0;0;0.88;3"
               uiLabelText="_" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="0" componentTabName="" uiType="uiLabel" componentRectangle="1176 672 56 44"
               componentLayerUid="3bc4f03a880000007a125a604a010000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="3" vstIndex="97" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="15" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="" name="arpeggiatorMode"
             modulatorValue="2">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="97" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="8" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="arpmdPaint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="1248 720 72 40" uiCustomMouseDownCallback="mparmrecClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentLayerUid="3bc4f03a880000007a125a604a010000"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="98" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="13"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="bntled"
             name="arpOffOn" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="100" midiMessageCtrlrValue="1" midiMessageMultiList="CC,ByteValue,MSB7bitValue,99,-2:CC,ByteValue,LSB7bitValue,98,-2:CC,ByteValue,MSB7bitValue,6,-1:CC,ByteValue,LSB7bitValue,38,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="bottom" componentLabelJustification="centred"
               componentLabelHeight="32" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="13ffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff000000" uiButtonTextColourOn="ffffff" uiButtonTextColourOff="ffffff"
               uiButtonContent="False&#10;True" uiButtonConnectedLeft="0" uiButtonConnectedRight="0"
               uiButtonConnectedTop="0" uiButtonConnectedBottom="0" uiButtonRepeat="0"
               uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0" componentRectangle="1176 720 56 32"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentLayerUid="3bc4f03a880000007a125a604a010000" uiType="uiButton"
               componentTabName="" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="65536" vstIndex="186"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="ModsFeedback3" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="ModsFbPaint3" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="1185 656 285 78" uiCustomMouseDownCallback="ModsFbClick3"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="ModsFbDrg3" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentTabId="1" componentTabName="ViewTab" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="16" vstIndex="183" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="16" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="seq4vc"
             name="Sequence4" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="Seq4Paint" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="596 400 460 326" uiCustomMouseDownCallback="Seq4Click"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="Seq4Drag" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentBubbleRoundAngle="10"
               componentBubbleBackgroundColour1="0x9cffffff" componentBubbleBackgroundColour2="0xbab9b9b9"
               componentBubbleBackgroundGradientType="1" componentBubbleValueColour="0xff000000"
               componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               uiType="uiCustomComponent" componentLayerUid="2a851ff65f000000dd8bb8a649010000"
               componentTabName="ViewTab" componentTabId="1"/>
  </modulator>
  <panelCustomData Name="PlayLO n LETitGO"/>
</panel>
